// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package ipsecvpn

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type VpnConnectionIkeConfig struct {
	// The authentication algorithm of IPSec negotiation. Possible values: `sha1`, `md5`. (Default: `sha1`)
	AuthenticationAlgorithm *string `pulumi:"authenticationAlgorithm"`
	// The Diffie-Hellman group used by IKE negotiation. Possible values: `1`, `2`, `5`, `14`, `15`, `16`. (Default:`15`)
	DhGroup *string `pulumi:"dhGroup"`
	// The encryption algorithm of IPSec negotiation. Possible values: `aes128`, `aes192`, `aes256`, `aes512`, `3des`. (Default: `aes128`).
	EncryptionAlgorithm *string `pulumi:"encryptionAlgorithm"`
	// The negotiation exchange mode of IKE V1 of VPN gateway. Possible values: `main` (main mode), `aggressive` (aggressive mode). (Default: `main`)
	ExchangeMode *string `pulumi:"exchangeMode"`
	// The version of the IKE protocol which only be supported IKE V1 protocol at present. Possible values: ikev1. (Default: ikev1)
	IkeVersion *string `pulumi:"ikeVersion"`
	// The identification of the VPN gateway.
	LocalId *string `pulumi:"localId"`
	// The key used for authentication between the VPN gateway and the Customer gateway which contains 1-128 characters and only support English, numbers and special characters: `!@#$%^&*()_+-=[]:,./'~`.
	PreSharedKey string `pulumi:"preSharedKey"`
	// The identification of the Customer gateway.
	RemoteId *string `pulumi:"remoteId"`
	// The Security Association lifecycle as the result of IPSec negotiation. Unit: second. Range: 1200-604800. (Default: `3600`)
	SaLifeTime *int `pulumi:"saLifeTime"`
}

type VpnConnectionIkeConfigInput interface {
	pulumi.Input

	ToVpnConnectionIkeConfigOutput() VpnConnectionIkeConfigOutput
	ToVpnConnectionIkeConfigOutputWithContext(context.Context) VpnConnectionIkeConfigOutput
}

type VpnConnectionIkeConfigArgs struct {
	// The authentication algorithm of IPSec negotiation. Possible values: `sha1`, `md5`. (Default: `sha1`)
	AuthenticationAlgorithm pulumi.StringPtrInput `pulumi:"authenticationAlgorithm"`
	// The Diffie-Hellman group used by IKE negotiation. Possible values: `1`, `2`, `5`, `14`, `15`, `16`. (Default:`15`)
	DhGroup pulumi.StringPtrInput `pulumi:"dhGroup"`
	// The encryption algorithm of IPSec negotiation. Possible values: `aes128`, `aes192`, `aes256`, `aes512`, `3des`. (Default: `aes128`).
	EncryptionAlgorithm pulumi.StringPtrInput `pulumi:"encryptionAlgorithm"`
	// The negotiation exchange mode of IKE V1 of VPN gateway. Possible values: `main` (main mode), `aggressive` (aggressive mode). (Default: `main`)
	ExchangeMode pulumi.StringPtrInput `pulumi:"exchangeMode"`
	// The version of the IKE protocol which only be supported IKE V1 protocol at present. Possible values: ikev1. (Default: ikev1)
	IkeVersion pulumi.StringPtrInput `pulumi:"ikeVersion"`
	// The identification of the VPN gateway.
	LocalId pulumi.StringPtrInput `pulumi:"localId"`
	// The key used for authentication between the VPN gateway and the Customer gateway which contains 1-128 characters and only support English, numbers and special characters: `!@#$%^&*()_+-=[]:,./'~`.
	PreSharedKey pulumi.StringInput `pulumi:"preSharedKey"`
	// The identification of the Customer gateway.
	RemoteId pulumi.StringPtrInput `pulumi:"remoteId"`
	// The Security Association lifecycle as the result of IPSec negotiation. Unit: second. Range: 1200-604800. (Default: `3600`)
	SaLifeTime pulumi.IntPtrInput `pulumi:"saLifeTime"`
}

func (VpnConnectionIkeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionIkeConfig)(nil)).Elem()
}

func (i VpnConnectionIkeConfigArgs) ToVpnConnectionIkeConfigOutput() VpnConnectionIkeConfigOutput {
	return i.ToVpnConnectionIkeConfigOutputWithContext(context.Background())
}

func (i VpnConnectionIkeConfigArgs) ToVpnConnectionIkeConfigOutputWithContext(ctx context.Context) VpnConnectionIkeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionIkeConfigOutput)
}

func (i VpnConnectionIkeConfigArgs) ToVpnConnectionIkeConfigPtrOutput() VpnConnectionIkeConfigPtrOutput {
	return i.ToVpnConnectionIkeConfigPtrOutputWithContext(context.Background())
}

func (i VpnConnectionIkeConfigArgs) ToVpnConnectionIkeConfigPtrOutputWithContext(ctx context.Context) VpnConnectionIkeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionIkeConfigOutput).ToVpnConnectionIkeConfigPtrOutputWithContext(ctx)
}

type VpnConnectionIkeConfigPtrInput interface {
	pulumi.Input

	ToVpnConnectionIkeConfigPtrOutput() VpnConnectionIkeConfigPtrOutput
	ToVpnConnectionIkeConfigPtrOutputWithContext(context.Context) VpnConnectionIkeConfigPtrOutput
}

type vpnConnectionIkeConfigPtrType VpnConnectionIkeConfigArgs

func VpnConnectionIkeConfigPtr(v *VpnConnectionIkeConfigArgs) VpnConnectionIkeConfigPtrInput {
	return (*vpnConnectionIkeConfigPtrType)(v)
}

func (*vpnConnectionIkeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnConnectionIkeConfig)(nil)).Elem()
}

func (i *vpnConnectionIkeConfigPtrType) ToVpnConnectionIkeConfigPtrOutput() VpnConnectionIkeConfigPtrOutput {
	return i.ToVpnConnectionIkeConfigPtrOutputWithContext(context.Background())
}

func (i *vpnConnectionIkeConfigPtrType) ToVpnConnectionIkeConfigPtrOutputWithContext(ctx context.Context) VpnConnectionIkeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionIkeConfigPtrOutput)
}

type VpnConnectionIkeConfigOutput struct{ *pulumi.OutputState }

func (VpnConnectionIkeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionIkeConfig)(nil)).Elem()
}

func (o VpnConnectionIkeConfigOutput) ToVpnConnectionIkeConfigOutput() VpnConnectionIkeConfigOutput {
	return o
}

func (o VpnConnectionIkeConfigOutput) ToVpnConnectionIkeConfigOutputWithContext(ctx context.Context) VpnConnectionIkeConfigOutput {
	return o
}

func (o VpnConnectionIkeConfigOutput) ToVpnConnectionIkeConfigPtrOutput() VpnConnectionIkeConfigPtrOutput {
	return o.ToVpnConnectionIkeConfigPtrOutputWithContext(context.Background())
}

func (o VpnConnectionIkeConfigOutput) ToVpnConnectionIkeConfigPtrOutputWithContext(ctx context.Context) VpnConnectionIkeConfigPtrOutput {
	return o.ApplyT(func(v VpnConnectionIkeConfig) *VpnConnectionIkeConfig {
		return &v
	}).(VpnConnectionIkeConfigPtrOutput)
}

// The authentication algorithm of IPSec negotiation. Possible values: `sha1`, `md5`. (Default: `sha1`)
func (o VpnConnectionIkeConfigOutput) AuthenticationAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionIkeConfig) *string { return v.AuthenticationAlgorithm }).(pulumi.StringPtrOutput)
}

// The Diffie-Hellman group used by IKE negotiation. Possible values: `1`, `2`, `5`, `14`, `15`, `16`. (Default:`15`)
func (o VpnConnectionIkeConfigOutput) DhGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionIkeConfig) *string { return v.DhGroup }).(pulumi.StringPtrOutput)
}

// The encryption algorithm of IPSec negotiation. Possible values: `aes128`, `aes192`, `aes256`, `aes512`, `3des`. (Default: `aes128`).
func (o VpnConnectionIkeConfigOutput) EncryptionAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionIkeConfig) *string { return v.EncryptionAlgorithm }).(pulumi.StringPtrOutput)
}

// The negotiation exchange mode of IKE V1 of VPN gateway. Possible values: `main` (main mode), `aggressive` (aggressive mode). (Default: `main`)
func (o VpnConnectionIkeConfigOutput) ExchangeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionIkeConfig) *string { return v.ExchangeMode }).(pulumi.StringPtrOutput)
}

// The version of the IKE protocol which only be supported IKE V1 protocol at present. Possible values: ikev1. (Default: ikev1)
func (o VpnConnectionIkeConfigOutput) IkeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionIkeConfig) *string { return v.IkeVersion }).(pulumi.StringPtrOutput)
}

// The identification of the VPN gateway.
func (o VpnConnectionIkeConfigOutput) LocalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionIkeConfig) *string { return v.LocalId }).(pulumi.StringPtrOutput)
}

// The key used for authentication between the VPN gateway and the Customer gateway which contains 1-128 characters and only support English, numbers and special characters: `!@#$%^&*()_+-=[]:,./'~`.
func (o VpnConnectionIkeConfigOutput) PreSharedKey() pulumi.StringOutput {
	return o.ApplyT(func(v VpnConnectionIkeConfig) string { return v.PreSharedKey }).(pulumi.StringOutput)
}

// The identification of the Customer gateway.
func (o VpnConnectionIkeConfigOutput) RemoteId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionIkeConfig) *string { return v.RemoteId }).(pulumi.StringPtrOutput)
}

// The Security Association lifecycle as the result of IPSec negotiation. Unit: second. Range: 1200-604800. (Default: `3600`)
func (o VpnConnectionIkeConfigOutput) SaLifeTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnConnectionIkeConfig) *int { return v.SaLifeTime }).(pulumi.IntPtrOutput)
}

type VpnConnectionIkeConfigPtrOutput struct{ *pulumi.OutputState }

func (VpnConnectionIkeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnConnectionIkeConfig)(nil)).Elem()
}

func (o VpnConnectionIkeConfigPtrOutput) ToVpnConnectionIkeConfigPtrOutput() VpnConnectionIkeConfigPtrOutput {
	return o
}

func (o VpnConnectionIkeConfigPtrOutput) ToVpnConnectionIkeConfigPtrOutputWithContext(ctx context.Context) VpnConnectionIkeConfigPtrOutput {
	return o
}

func (o VpnConnectionIkeConfigPtrOutput) Elem() VpnConnectionIkeConfigOutput {
	return o.ApplyT(func(v *VpnConnectionIkeConfig) VpnConnectionIkeConfig { return *v }).(VpnConnectionIkeConfigOutput)
}

// The authentication algorithm of IPSec negotiation. Possible values: `sha1`, `md5`. (Default: `sha1`)
func (o VpnConnectionIkeConfigPtrOutput) AuthenticationAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionIkeConfig) *string { return v.AuthenticationAlgorithm }).(pulumi.StringPtrOutput)
}

// The Diffie-Hellman group used by IKE negotiation. Possible values: `1`, `2`, `5`, `14`, `15`, `16`. (Default:`15`)
func (o VpnConnectionIkeConfigPtrOutput) DhGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionIkeConfig) *string { return v.DhGroup }).(pulumi.StringPtrOutput)
}

// The encryption algorithm of IPSec negotiation. Possible values: `aes128`, `aes192`, `aes256`, `aes512`, `3des`. (Default: `aes128`).
func (o VpnConnectionIkeConfigPtrOutput) EncryptionAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionIkeConfig) *string { return v.EncryptionAlgorithm }).(pulumi.StringPtrOutput)
}

// The negotiation exchange mode of IKE V1 of VPN gateway. Possible values: `main` (main mode), `aggressive` (aggressive mode). (Default: `main`)
func (o VpnConnectionIkeConfigPtrOutput) ExchangeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionIkeConfig) *string { return v.ExchangeMode }).(pulumi.StringPtrOutput)
}

// The version of the IKE protocol which only be supported IKE V1 protocol at present. Possible values: ikev1. (Default: ikev1)
func (o VpnConnectionIkeConfigPtrOutput) IkeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionIkeConfig) *string { return v.IkeVersion }).(pulumi.StringPtrOutput)
}

// The identification of the VPN gateway.
func (o VpnConnectionIkeConfigPtrOutput) LocalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionIkeConfig) *string { return v.LocalId }).(pulumi.StringPtrOutput)
}

// The key used for authentication between the VPN gateway and the Customer gateway which contains 1-128 characters and only support English, numbers and special characters: `!@#$%^&*()_+-=[]:,./'~`.
func (o VpnConnectionIkeConfigPtrOutput) PreSharedKey() pulumi.StringOutput {
	return o.ApplyT(func(v VpnConnectionIkeConfig) string { return v.PreSharedKey }).(pulumi.StringOutput)
}

// The identification of the Customer gateway.
func (o VpnConnectionIkeConfigPtrOutput) RemoteId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionIkeConfig) *string { return v.RemoteId }).(pulumi.StringPtrOutput)
}

// The Security Association lifecycle as the result of IPSec negotiation. Unit: second. Range: 1200-604800. (Default: `3600`)
func (o VpnConnectionIkeConfigPtrOutput) SaLifeTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnConnectionIkeConfig) *int { return v.SaLifeTime }).(pulumi.IntPtrOutput)
}

type VpnConnectionIpsecConfig struct {
	// The authentication algorithm of IPSec negotiation. Possible values: `sha1`, `md5`. (Default: `sha1`)
	AuthenticationAlgorithm *string `pulumi:"authenticationAlgorithm"`
	// The encryption algorithm of IPSec negotiation. Possible values: `aes128`, `aes192`, `aes256`, `aes512`, `3des`. (Default: `aes128`).
	EncryptionAlgorithm *string `pulumi:"encryptionAlgorithm"`
	// The id list of Local subnet.
	LocalSubnetIds []string `pulumi:"localSubnetIds"`
	// Whether the PFS of IPSec negotiation is on or off, `disable` as off, The Diffie-Hellman group as open.  Possible values: `disable`, `1`, `2`, `5`, `14`, `15`, `16`. (Default:`disable`)
	PfsDhGroup *string `pulumi:"pfsDhGroup"`
	// The security protocol of IPSec negotiation. Possible values: `esp`, `ah`. (Default:`esp`)
	Protocol *string `pulumi:"protocol"`
	// The ip address list of remote subnet.
	RemoteSubnets []string `pulumi:"remoteSubnets"`
	// The Security Association lifecycle as the result of IPSec negotiation. Unit: second. Range: 1200-604800. (Default: `3600`)
	SaLifeTime *int `pulumi:"saLifeTime"`
	// The Security Association lifecycle in bytes as the result of IPSec negotiation. Unit: second. Range: 1200-604800. (Default: `3600`)
	SaLifeTimeBytes *int `pulumi:"saLifeTimeBytes"`
}

type VpnConnectionIpsecConfigInput interface {
	pulumi.Input

	ToVpnConnectionIpsecConfigOutput() VpnConnectionIpsecConfigOutput
	ToVpnConnectionIpsecConfigOutputWithContext(context.Context) VpnConnectionIpsecConfigOutput
}

type VpnConnectionIpsecConfigArgs struct {
	// The authentication algorithm of IPSec negotiation. Possible values: `sha1`, `md5`. (Default: `sha1`)
	AuthenticationAlgorithm pulumi.StringPtrInput `pulumi:"authenticationAlgorithm"`
	// The encryption algorithm of IPSec negotiation. Possible values: `aes128`, `aes192`, `aes256`, `aes512`, `3des`. (Default: `aes128`).
	EncryptionAlgorithm pulumi.StringPtrInput `pulumi:"encryptionAlgorithm"`
	// The id list of Local subnet.
	LocalSubnetIds pulumi.StringArrayInput `pulumi:"localSubnetIds"`
	// Whether the PFS of IPSec negotiation is on or off, `disable` as off, The Diffie-Hellman group as open.  Possible values: `disable`, `1`, `2`, `5`, `14`, `15`, `16`. (Default:`disable`)
	PfsDhGroup pulumi.StringPtrInput `pulumi:"pfsDhGroup"`
	// The security protocol of IPSec negotiation. Possible values: `esp`, `ah`. (Default:`esp`)
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// The ip address list of remote subnet.
	RemoteSubnets pulumi.StringArrayInput `pulumi:"remoteSubnets"`
	// The Security Association lifecycle as the result of IPSec negotiation. Unit: second. Range: 1200-604800. (Default: `3600`)
	SaLifeTime pulumi.IntPtrInput `pulumi:"saLifeTime"`
	// The Security Association lifecycle in bytes as the result of IPSec negotiation. Unit: second. Range: 1200-604800. (Default: `3600`)
	SaLifeTimeBytes pulumi.IntPtrInput `pulumi:"saLifeTimeBytes"`
}

func (VpnConnectionIpsecConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionIpsecConfig)(nil)).Elem()
}

func (i VpnConnectionIpsecConfigArgs) ToVpnConnectionIpsecConfigOutput() VpnConnectionIpsecConfigOutput {
	return i.ToVpnConnectionIpsecConfigOutputWithContext(context.Background())
}

func (i VpnConnectionIpsecConfigArgs) ToVpnConnectionIpsecConfigOutputWithContext(ctx context.Context) VpnConnectionIpsecConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionIpsecConfigOutput)
}

func (i VpnConnectionIpsecConfigArgs) ToVpnConnectionIpsecConfigPtrOutput() VpnConnectionIpsecConfigPtrOutput {
	return i.ToVpnConnectionIpsecConfigPtrOutputWithContext(context.Background())
}

func (i VpnConnectionIpsecConfigArgs) ToVpnConnectionIpsecConfigPtrOutputWithContext(ctx context.Context) VpnConnectionIpsecConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionIpsecConfigOutput).ToVpnConnectionIpsecConfigPtrOutputWithContext(ctx)
}

type VpnConnectionIpsecConfigPtrInput interface {
	pulumi.Input

	ToVpnConnectionIpsecConfigPtrOutput() VpnConnectionIpsecConfigPtrOutput
	ToVpnConnectionIpsecConfigPtrOutputWithContext(context.Context) VpnConnectionIpsecConfigPtrOutput
}

type vpnConnectionIpsecConfigPtrType VpnConnectionIpsecConfigArgs

func VpnConnectionIpsecConfigPtr(v *VpnConnectionIpsecConfigArgs) VpnConnectionIpsecConfigPtrInput {
	return (*vpnConnectionIpsecConfigPtrType)(v)
}

func (*vpnConnectionIpsecConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnConnectionIpsecConfig)(nil)).Elem()
}

func (i *vpnConnectionIpsecConfigPtrType) ToVpnConnectionIpsecConfigPtrOutput() VpnConnectionIpsecConfigPtrOutput {
	return i.ToVpnConnectionIpsecConfigPtrOutputWithContext(context.Background())
}

func (i *vpnConnectionIpsecConfigPtrType) ToVpnConnectionIpsecConfigPtrOutputWithContext(ctx context.Context) VpnConnectionIpsecConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionIpsecConfigPtrOutput)
}

type VpnConnectionIpsecConfigOutput struct{ *pulumi.OutputState }

func (VpnConnectionIpsecConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionIpsecConfig)(nil)).Elem()
}

func (o VpnConnectionIpsecConfigOutput) ToVpnConnectionIpsecConfigOutput() VpnConnectionIpsecConfigOutput {
	return o
}

func (o VpnConnectionIpsecConfigOutput) ToVpnConnectionIpsecConfigOutputWithContext(ctx context.Context) VpnConnectionIpsecConfigOutput {
	return o
}

func (o VpnConnectionIpsecConfigOutput) ToVpnConnectionIpsecConfigPtrOutput() VpnConnectionIpsecConfigPtrOutput {
	return o.ToVpnConnectionIpsecConfigPtrOutputWithContext(context.Background())
}

func (o VpnConnectionIpsecConfigOutput) ToVpnConnectionIpsecConfigPtrOutputWithContext(ctx context.Context) VpnConnectionIpsecConfigPtrOutput {
	return o.ApplyT(func(v VpnConnectionIpsecConfig) *VpnConnectionIpsecConfig {
		return &v
	}).(VpnConnectionIpsecConfigPtrOutput)
}

// The authentication algorithm of IPSec negotiation. Possible values: `sha1`, `md5`. (Default: `sha1`)
func (o VpnConnectionIpsecConfigOutput) AuthenticationAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionIpsecConfig) *string { return v.AuthenticationAlgorithm }).(pulumi.StringPtrOutput)
}

// The encryption algorithm of IPSec negotiation. Possible values: `aes128`, `aes192`, `aes256`, `aes512`, `3des`. (Default: `aes128`).
func (o VpnConnectionIpsecConfigOutput) EncryptionAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionIpsecConfig) *string { return v.EncryptionAlgorithm }).(pulumi.StringPtrOutput)
}

// The id list of Local subnet.
func (o VpnConnectionIpsecConfigOutput) LocalSubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpnConnectionIpsecConfig) []string { return v.LocalSubnetIds }).(pulumi.StringArrayOutput)
}

// Whether the PFS of IPSec negotiation is on or off, `disable` as off, The Diffie-Hellman group as open.  Possible values: `disable`, `1`, `2`, `5`, `14`, `15`, `16`. (Default:`disable`)
func (o VpnConnectionIpsecConfigOutput) PfsDhGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionIpsecConfig) *string { return v.PfsDhGroup }).(pulumi.StringPtrOutput)
}

// The security protocol of IPSec negotiation. Possible values: `esp`, `ah`. (Default:`esp`)
func (o VpnConnectionIpsecConfigOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionIpsecConfig) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The ip address list of remote subnet.
func (o VpnConnectionIpsecConfigOutput) RemoteSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpnConnectionIpsecConfig) []string { return v.RemoteSubnets }).(pulumi.StringArrayOutput)
}

// The Security Association lifecycle as the result of IPSec negotiation. Unit: second. Range: 1200-604800. (Default: `3600`)
func (o VpnConnectionIpsecConfigOutput) SaLifeTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnConnectionIpsecConfig) *int { return v.SaLifeTime }).(pulumi.IntPtrOutput)
}

// The Security Association lifecycle in bytes as the result of IPSec negotiation. Unit: second. Range: 1200-604800. (Default: `3600`)
func (o VpnConnectionIpsecConfigOutput) SaLifeTimeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnConnectionIpsecConfig) *int { return v.SaLifeTimeBytes }).(pulumi.IntPtrOutput)
}

type VpnConnectionIpsecConfigPtrOutput struct{ *pulumi.OutputState }

func (VpnConnectionIpsecConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnConnectionIpsecConfig)(nil)).Elem()
}

func (o VpnConnectionIpsecConfigPtrOutput) ToVpnConnectionIpsecConfigPtrOutput() VpnConnectionIpsecConfigPtrOutput {
	return o
}

func (o VpnConnectionIpsecConfigPtrOutput) ToVpnConnectionIpsecConfigPtrOutputWithContext(ctx context.Context) VpnConnectionIpsecConfigPtrOutput {
	return o
}

func (o VpnConnectionIpsecConfigPtrOutput) Elem() VpnConnectionIpsecConfigOutput {
	return o.ApplyT(func(v *VpnConnectionIpsecConfig) VpnConnectionIpsecConfig { return *v }).(VpnConnectionIpsecConfigOutput)
}

// The authentication algorithm of IPSec negotiation. Possible values: `sha1`, `md5`. (Default: `sha1`)
func (o VpnConnectionIpsecConfigPtrOutput) AuthenticationAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionIpsecConfig) *string { return v.AuthenticationAlgorithm }).(pulumi.StringPtrOutput)
}

// The encryption algorithm of IPSec negotiation. Possible values: `aes128`, `aes192`, `aes256`, `aes512`, `3des`. (Default: `aes128`).
func (o VpnConnectionIpsecConfigPtrOutput) EncryptionAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionIpsecConfig) *string { return v.EncryptionAlgorithm }).(pulumi.StringPtrOutput)
}

// The id list of Local subnet.
func (o VpnConnectionIpsecConfigPtrOutput) LocalSubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpnConnectionIpsecConfig) []string { return v.LocalSubnetIds }).(pulumi.StringArrayOutput)
}

// Whether the PFS of IPSec negotiation is on or off, `disable` as off, The Diffie-Hellman group as open.  Possible values: `disable`, `1`, `2`, `5`, `14`, `15`, `16`. (Default:`disable`)
func (o VpnConnectionIpsecConfigPtrOutput) PfsDhGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionIpsecConfig) *string { return v.PfsDhGroup }).(pulumi.StringPtrOutput)
}

// The security protocol of IPSec negotiation. Possible values: `esp`, `ah`. (Default:`esp`)
func (o VpnConnectionIpsecConfigPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionIpsecConfig) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The ip address list of remote subnet.
func (o VpnConnectionIpsecConfigPtrOutput) RemoteSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpnConnectionIpsecConfig) []string { return v.RemoteSubnets }).(pulumi.StringArrayOutput)
}

// The Security Association lifecycle as the result of IPSec negotiation. Unit: second. Range: 1200-604800. (Default: `3600`)
func (o VpnConnectionIpsecConfigPtrOutput) SaLifeTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnConnectionIpsecConfig) *int { return v.SaLifeTime }).(pulumi.IntPtrOutput)
}

// The Security Association lifecycle in bytes as the result of IPSec negotiation. Unit: second. Range: 1200-604800. (Default: `3600`)
func (o VpnConnectionIpsecConfigPtrOutput) SaLifeTimeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnConnectionIpsecConfig) *int { return v.SaLifeTimeBytes }).(pulumi.IntPtrOutput)
}

type LookupVpnConnectionsVpnConnection struct {
	// The time of creation for VPN Connection, formatted in RFC3339 time string.
	CreateTime string `pulumi:"createTime"`
	// The ID of VPN Customer Gateway.
	CustomerGatewayId string `pulumi:"customerGatewayId"`
	// The ID of VPN Connection.
	Id string `pulumi:"id"`
	// It is a nested type which documented below.
	IkeConfigs []LookupVpnConnectionsVpnConnectionIkeConfig `pulumi:"ikeConfigs"`
	// It is a nested type which documented below.
	IpsecConfigs []LookupVpnConnectionsVpnConnectionIpsecConfig `pulumi:"ipsecConfigs"`
	// The name of the VPN Connection.
	Name string `pulumi:"name"`
	// The remarks of VPN Connection.
	Remark string `pulumi:"remark"`
	// A tag assigned to VPN Connection.
	Tag string `pulumi:"tag"`
	// The ID of VPC linked to the VPN Connection.
	VpcId string `pulumi:"vpcId"`
	// The ID of VPN Gateway.
	VpnGatewayId string `pulumi:"vpnGatewayId"`
}

type LookupVpnConnectionsVpnConnectionInput interface {
	pulumi.Input

	ToLookupVpnConnectionsVpnConnectionOutput() LookupVpnConnectionsVpnConnectionOutput
	ToLookupVpnConnectionsVpnConnectionOutputWithContext(context.Context) LookupVpnConnectionsVpnConnectionOutput
}

type LookupVpnConnectionsVpnConnectionArgs struct {
	// The time of creation for VPN Connection, formatted in RFC3339 time string.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The ID of VPN Customer Gateway.
	CustomerGatewayId pulumi.StringInput `pulumi:"customerGatewayId"`
	// The ID of VPN Connection.
	Id pulumi.StringInput `pulumi:"id"`
	// It is a nested type which documented below.
	IkeConfigs LookupVpnConnectionsVpnConnectionIkeConfigArrayInput `pulumi:"ikeConfigs"`
	// It is a nested type which documented below.
	IpsecConfigs LookupVpnConnectionsVpnConnectionIpsecConfigArrayInput `pulumi:"ipsecConfigs"`
	// The name of the VPN Connection.
	Name pulumi.StringInput `pulumi:"name"`
	// The remarks of VPN Connection.
	Remark pulumi.StringInput `pulumi:"remark"`
	// A tag assigned to VPN Connection.
	Tag pulumi.StringInput `pulumi:"tag"`
	// The ID of VPC linked to the VPN Connection.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// The ID of VPN Gateway.
	VpnGatewayId pulumi.StringInput `pulumi:"vpnGatewayId"`
}

func (LookupVpnConnectionsVpnConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpnConnectionsVpnConnection)(nil)).Elem()
}

func (i LookupVpnConnectionsVpnConnectionArgs) ToLookupVpnConnectionsVpnConnectionOutput() LookupVpnConnectionsVpnConnectionOutput {
	return i.ToLookupVpnConnectionsVpnConnectionOutputWithContext(context.Background())
}

func (i LookupVpnConnectionsVpnConnectionArgs) ToLookupVpnConnectionsVpnConnectionOutputWithContext(ctx context.Context) LookupVpnConnectionsVpnConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LookupVpnConnectionsVpnConnectionOutput)
}

type LookupVpnConnectionsVpnConnectionArrayInput interface {
	pulumi.Input

	ToLookupVpnConnectionsVpnConnectionArrayOutput() LookupVpnConnectionsVpnConnectionArrayOutput
	ToLookupVpnConnectionsVpnConnectionArrayOutputWithContext(context.Context) LookupVpnConnectionsVpnConnectionArrayOutput
}

type LookupVpnConnectionsVpnConnectionArray []LookupVpnConnectionsVpnConnectionInput

func (LookupVpnConnectionsVpnConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LookupVpnConnectionsVpnConnection)(nil)).Elem()
}

func (i LookupVpnConnectionsVpnConnectionArray) ToLookupVpnConnectionsVpnConnectionArrayOutput() LookupVpnConnectionsVpnConnectionArrayOutput {
	return i.ToLookupVpnConnectionsVpnConnectionArrayOutputWithContext(context.Background())
}

func (i LookupVpnConnectionsVpnConnectionArray) ToLookupVpnConnectionsVpnConnectionArrayOutputWithContext(ctx context.Context) LookupVpnConnectionsVpnConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LookupVpnConnectionsVpnConnectionArrayOutput)
}

type LookupVpnConnectionsVpnConnectionOutput struct{ *pulumi.OutputState }

func (LookupVpnConnectionsVpnConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpnConnectionsVpnConnection)(nil)).Elem()
}

func (o LookupVpnConnectionsVpnConnectionOutput) ToLookupVpnConnectionsVpnConnectionOutput() LookupVpnConnectionsVpnConnectionOutput {
	return o
}

func (o LookupVpnConnectionsVpnConnectionOutput) ToLookupVpnConnectionsVpnConnectionOutputWithContext(ctx context.Context) LookupVpnConnectionsVpnConnectionOutput {
	return o
}

// The time of creation for VPN Connection, formatted in RFC3339 time string.
func (o LookupVpnConnectionsVpnConnectionOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnConnectionsVpnConnection) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The ID of VPN Customer Gateway.
func (o LookupVpnConnectionsVpnConnectionOutput) CustomerGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnConnectionsVpnConnection) string { return v.CustomerGatewayId }).(pulumi.StringOutput)
}

// The ID of VPN Connection.
func (o LookupVpnConnectionsVpnConnectionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnConnectionsVpnConnection) string { return v.Id }).(pulumi.StringOutput)
}

// It is a nested type which documented below.
func (o LookupVpnConnectionsVpnConnectionOutput) IkeConfigs() LookupVpnConnectionsVpnConnectionIkeConfigArrayOutput {
	return o.ApplyT(func(v LookupVpnConnectionsVpnConnection) []LookupVpnConnectionsVpnConnectionIkeConfig {
		return v.IkeConfigs
	}).(LookupVpnConnectionsVpnConnectionIkeConfigArrayOutput)
}

// It is a nested type which documented below.
func (o LookupVpnConnectionsVpnConnectionOutput) IpsecConfigs() LookupVpnConnectionsVpnConnectionIpsecConfigArrayOutput {
	return o.ApplyT(func(v LookupVpnConnectionsVpnConnection) []LookupVpnConnectionsVpnConnectionIpsecConfig {
		return v.IpsecConfigs
	}).(LookupVpnConnectionsVpnConnectionIpsecConfigArrayOutput)
}

// The name of the VPN Connection.
func (o LookupVpnConnectionsVpnConnectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnConnectionsVpnConnection) string { return v.Name }).(pulumi.StringOutput)
}

// The remarks of VPN Connection.
func (o LookupVpnConnectionsVpnConnectionOutput) Remark() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnConnectionsVpnConnection) string { return v.Remark }).(pulumi.StringOutput)
}

// A tag assigned to VPN Connection.
func (o LookupVpnConnectionsVpnConnectionOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnConnectionsVpnConnection) string { return v.Tag }).(pulumi.StringOutput)
}

// The ID of VPC linked to the VPN Connection.
func (o LookupVpnConnectionsVpnConnectionOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnConnectionsVpnConnection) string { return v.VpcId }).(pulumi.StringOutput)
}

// The ID of VPN Gateway.
func (o LookupVpnConnectionsVpnConnectionOutput) VpnGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnConnectionsVpnConnection) string { return v.VpnGatewayId }).(pulumi.StringOutput)
}

type LookupVpnConnectionsVpnConnectionArrayOutput struct{ *pulumi.OutputState }

func (LookupVpnConnectionsVpnConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LookupVpnConnectionsVpnConnection)(nil)).Elem()
}

func (o LookupVpnConnectionsVpnConnectionArrayOutput) ToLookupVpnConnectionsVpnConnectionArrayOutput() LookupVpnConnectionsVpnConnectionArrayOutput {
	return o
}

func (o LookupVpnConnectionsVpnConnectionArrayOutput) ToLookupVpnConnectionsVpnConnectionArrayOutputWithContext(ctx context.Context) LookupVpnConnectionsVpnConnectionArrayOutput {
	return o
}

func (o LookupVpnConnectionsVpnConnectionArrayOutput) Index(i pulumi.IntInput) LookupVpnConnectionsVpnConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LookupVpnConnectionsVpnConnection {
		return vs[0].([]LookupVpnConnectionsVpnConnection)[vs[1].(int)]
	}).(LookupVpnConnectionsVpnConnectionOutput)
}

type LookupVpnConnectionsVpnConnectionIkeConfig struct {
	// The authentication algorithm of IPSec negotiation.
	AuthenticationAlgorithm string `pulumi:"authenticationAlgorithm"`
	// The Diffie-Hellman group used by IKE negotiation.
	DhGroup string `pulumi:"dhGroup"`
	// The encryption algorithm of IPSec negotiation.
	EncryptionAlgorithm string `pulumi:"encryptionAlgorithm"`
	// The negotiation exchange mode of IKE V1 of VPN gateway.
	ExchangeMode string `pulumi:"exchangeMode"`
	// The version of the IKE protocol.
	IkeVersion string `pulumi:"ikeVersion"`
	// The identification of the VPN gateway.
	LocalId string `pulumi:"localId"`
	// The key used for authentication between the VPN gateway and the Customer gateway.
	PreSharedKey string `pulumi:"preSharedKey"`
	// The identification of the Customer gateway.
	RemoteId string `pulumi:"remoteId"`
	// The Security Association lifecycle as the result of IPSec negotiation.
	SaLifeTime int `pulumi:"saLifeTime"`
}

type LookupVpnConnectionsVpnConnectionIkeConfigInput interface {
	pulumi.Input

	ToLookupVpnConnectionsVpnConnectionIkeConfigOutput() LookupVpnConnectionsVpnConnectionIkeConfigOutput
	ToLookupVpnConnectionsVpnConnectionIkeConfigOutputWithContext(context.Context) LookupVpnConnectionsVpnConnectionIkeConfigOutput
}

type LookupVpnConnectionsVpnConnectionIkeConfigArgs struct {
	// The authentication algorithm of IPSec negotiation.
	AuthenticationAlgorithm pulumi.StringInput `pulumi:"authenticationAlgorithm"`
	// The Diffie-Hellman group used by IKE negotiation.
	DhGroup pulumi.StringInput `pulumi:"dhGroup"`
	// The encryption algorithm of IPSec negotiation.
	EncryptionAlgorithm pulumi.StringInput `pulumi:"encryptionAlgorithm"`
	// The negotiation exchange mode of IKE V1 of VPN gateway.
	ExchangeMode pulumi.StringInput `pulumi:"exchangeMode"`
	// The version of the IKE protocol.
	IkeVersion pulumi.StringInput `pulumi:"ikeVersion"`
	// The identification of the VPN gateway.
	LocalId pulumi.StringInput `pulumi:"localId"`
	// The key used for authentication between the VPN gateway and the Customer gateway.
	PreSharedKey pulumi.StringInput `pulumi:"preSharedKey"`
	// The identification of the Customer gateway.
	RemoteId pulumi.StringInput `pulumi:"remoteId"`
	// The Security Association lifecycle as the result of IPSec negotiation.
	SaLifeTime pulumi.IntInput `pulumi:"saLifeTime"`
}

func (LookupVpnConnectionsVpnConnectionIkeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpnConnectionsVpnConnectionIkeConfig)(nil)).Elem()
}

func (i LookupVpnConnectionsVpnConnectionIkeConfigArgs) ToLookupVpnConnectionsVpnConnectionIkeConfigOutput() LookupVpnConnectionsVpnConnectionIkeConfigOutput {
	return i.ToLookupVpnConnectionsVpnConnectionIkeConfigOutputWithContext(context.Background())
}

func (i LookupVpnConnectionsVpnConnectionIkeConfigArgs) ToLookupVpnConnectionsVpnConnectionIkeConfigOutputWithContext(ctx context.Context) LookupVpnConnectionsVpnConnectionIkeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LookupVpnConnectionsVpnConnectionIkeConfigOutput)
}

type LookupVpnConnectionsVpnConnectionIkeConfigArrayInput interface {
	pulumi.Input

	ToLookupVpnConnectionsVpnConnectionIkeConfigArrayOutput() LookupVpnConnectionsVpnConnectionIkeConfigArrayOutput
	ToLookupVpnConnectionsVpnConnectionIkeConfigArrayOutputWithContext(context.Context) LookupVpnConnectionsVpnConnectionIkeConfigArrayOutput
}

type LookupVpnConnectionsVpnConnectionIkeConfigArray []LookupVpnConnectionsVpnConnectionIkeConfigInput

func (LookupVpnConnectionsVpnConnectionIkeConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LookupVpnConnectionsVpnConnectionIkeConfig)(nil)).Elem()
}

func (i LookupVpnConnectionsVpnConnectionIkeConfigArray) ToLookupVpnConnectionsVpnConnectionIkeConfigArrayOutput() LookupVpnConnectionsVpnConnectionIkeConfigArrayOutput {
	return i.ToLookupVpnConnectionsVpnConnectionIkeConfigArrayOutputWithContext(context.Background())
}

func (i LookupVpnConnectionsVpnConnectionIkeConfigArray) ToLookupVpnConnectionsVpnConnectionIkeConfigArrayOutputWithContext(ctx context.Context) LookupVpnConnectionsVpnConnectionIkeConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LookupVpnConnectionsVpnConnectionIkeConfigArrayOutput)
}

type LookupVpnConnectionsVpnConnectionIkeConfigOutput struct{ *pulumi.OutputState }

func (LookupVpnConnectionsVpnConnectionIkeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpnConnectionsVpnConnectionIkeConfig)(nil)).Elem()
}

func (o LookupVpnConnectionsVpnConnectionIkeConfigOutput) ToLookupVpnConnectionsVpnConnectionIkeConfigOutput() LookupVpnConnectionsVpnConnectionIkeConfigOutput {
	return o
}

func (o LookupVpnConnectionsVpnConnectionIkeConfigOutput) ToLookupVpnConnectionsVpnConnectionIkeConfigOutputWithContext(ctx context.Context) LookupVpnConnectionsVpnConnectionIkeConfigOutput {
	return o
}

// The authentication algorithm of IPSec negotiation.
func (o LookupVpnConnectionsVpnConnectionIkeConfigOutput) AuthenticationAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnConnectionsVpnConnectionIkeConfig) string { return v.AuthenticationAlgorithm }).(pulumi.StringOutput)
}

// The Diffie-Hellman group used by IKE negotiation.
func (o LookupVpnConnectionsVpnConnectionIkeConfigOutput) DhGroup() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnConnectionsVpnConnectionIkeConfig) string { return v.DhGroup }).(pulumi.StringOutput)
}

// The encryption algorithm of IPSec negotiation.
func (o LookupVpnConnectionsVpnConnectionIkeConfigOutput) EncryptionAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnConnectionsVpnConnectionIkeConfig) string { return v.EncryptionAlgorithm }).(pulumi.StringOutput)
}

// The negotiation exchange mode of IKE V1 of VPN gateway.
func (o LookupVpnConnectionsVpnConnectionIkeConfigOutput) ExchangeMode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnConnectionsVpnConnectionIkeConfig) string { return v.ExchangeMode }).(pulumi.StringOutput)
}

// The version of the IKE protocol.
func (o LookupVpnConnectionsVpnConnectionIkeConfigOutput) IkeVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnConnectionsVpnConnectionIkeConfig) string { return v.IkeVersion }).(pulumi.StringOutput)
}

// The identification of the VPN gateway.
func (o LookupVpnConnectionsVpnConnectionIkeConfigOutput) LocalId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnConnectionsVpnConnectionIkeConfig) string { return v.LocalId }).(pulumi.StringOutput)
}

// The key used for authentication between the VPN gateway and the Customer gateway.
func (o LookupVpnConnectionsVpnConnectionIkeConfigOutput) PreSharedKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnConnectionsVpnConnectionIkeConfig) string { return v.PreSharedKey }).(pulumi.StringOutput)
}

// The identification of the Customer gateway.
func (o LookupVpnConnectionsVpnConnectionIkeConfigOutput) RemoteId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnConnectionsVpnConnectionIkeConfig) string { return v.RemoteId }).(pulumi.StringOutput)
}

// The Security Association lifecycle as the result of IPSec negotiation.
func (o LookupVpnConnectionsVpnConnectionIkeConfigOutput) SaLifeTime() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnConnectionsVpnConnectionIkeConfig) int { return v.SaLifeTime }).(pulumi.IntOutput)
}

type LookupVpnConnectionsVpnConnectionIkeConfigArrayOutput struct{ *pulumi.OutputState }

func (LookupVpnConnectionsVpnConnectionIkeConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LookupVpnConnectionsVpnConnectionIkeConfig)(nil)).Elem()
}

func (o LookupVpnConnectionsVpnConnectionIkeConfigArrayOutput) ToLookupVpnConnectionsVpnConnectionIkeConfigArrayOutput() LookupVpnConnectionsVpnConnectionIkeConfigArrayOutput {
	return o
}

func (o LookupVpnConnectionsVpnConnectionIkeConfigArrayOutput) ToLookupVpnConnectionsVpnConnectionIkeConfigArrayOutputWithContext(ctx context.Context) LookupVpnConnectionsVpnConnectionIkeConfigArrayOutput {
	return o
}

func (o LookupVpnConnectionsVpnConnectionIkeConfigArrayOutput) Index(i pulumi.IntInput) LookupVpnConnectionsVpnConnectionIkeConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LookupVpnConnectionsVpnConnectionIkeConfig {
		return vs[0].([]LookupVpnConnectionsVpnConnectionIkeConfig)[vs[1].(int)]
	}).(LookupVpnConnectionsVpnConnectionIkeConfigOutput)
}

type LookupVpnConnectionsVpnConnectionIpsecConfig struct {
	// The authentication algorithm of IPSec negotiation.
	AuthenticationAlgorithm string `pulumi:"authenticationAlgorithm"`
	// The encryption algorithm of IPSec negotiation.
	EncryptionAlgorithm string `pulumi:"encryptionAlgorithm"`
	// The id list of Local subnet.
	LocalSubnetIds []string `pulumi:"localSubnetIds"`
	// Whether the PFS of IPSec negotiation is on or off, `disable` as off, The Diffie-Hellman group as open.
	PfsDhGroup string `pulumi:"pfsDhGroup"`
	// The security protocol of IPSec negotiation.
	Protocol string `pulumi:"protocol"`
	// The ip address list of remote subnet.
	RemoteSubnets []string `pulumi:"remoteSubnets"`
	// The Security Association lifecycle as the result of IPSec negotiation.
	SaLifeTime int `pulumi:"saLifeTime"`
	// The Security Association lifecycle in bytes as the result of IPSec negotiation.
	SaLifeTimeBytes int `pulumi:"saLifeTimeBytes"`
}

type LookupVpnConnectionsVpnConnectionIpsecConfigInput interface {
	pulumi.Input

	ToLookupVpnConnectionsVpnConnectionIpsecConfigOutput() LookupVpnConnectionsVpnConnectionIpsecConfigOutput
	ToLookupVpnConnectionsVpnConnectionIpsecConfigOutputWithContext(context.Context) LookupVpnConnectionsVpnConnectionIpsecConfigOutput
}

type LookupVpnConnectionsVpnConnectionIpsecConfigArgs struct {
	// The authentication algorithm of IPSec negotiation.
	AuthenticationAlgorithm pulumi.StringInput `pulumi:"authenticationAlgorithm"`
	// The encryption algorithm of IPSec negotiation.
	EncryptionAlgorithm pulumi.StringInput `pulumi:"encryptionAlgorithm"`
	// The id list of Local subnet.
	LocalSubnetIds pulumi.StringArrayInput `pulumi:"localSubnetIds"`
	// Whether the PFS of IPSec negotiation is on or off, `disable` as off, The Diffie-Hellman group as open.
	PfsDhGroup pulumi.StringInput `pulumi:"pfsDhGroup"`
	// The security protocol of IPSec negotiation.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The ip address list of remote subnet.
	RemoteSubnets pulumi.StringArrayInput `pulumi:"remoteSubnets"`
	// The Security Association lifecycle as the result of IPSec negotiation.
	SaLifeTime pulumi.IntInput `pulumi:"saLifeTime"`
	// The Security Association lifecycle in bytes as the result of IPSec negotiation.
	SaLifeTimeBytes pulumi.IntInput `pulumi:"saLifeTimeBytes"`
}

func (LookupVpnConnectionsVpnConnectionIpsecConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpnConnectionsVpnConnectionIpsecConfig)(nil)).Elem()
}

func (i LookupVpnConnectionsVpnConnectionIpsecConfigArgs) ToLookupVpnConnectionsVpnConnectionIpsecConfigOutput() LookupVpnConnectionsVpnConnectionIpsecConfigOutput {
	return i.ToLookupVpnConnectionsVpnConnectionIpsecConfigOutputWithContext(context.Background())
}

func (i LookupVpnConnectionsVpnConnectionIpsecConfigArgs) ToLookupVpnConnectionsVpnConnectionIpsecConfigOutputWithContext(ctx context.Context) LookupVpnConnectionsVpnConnectionIpsecConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LookupVpnConnectionsVpnConnectionIpsecConfigOutput)
}

type LookupVpnConnectionsVpnConnectionIpsecConfigArrayInput interface {
	pulumi.Input

	ToLookupVpnConnectionsVpnConnectionIpsecConfigArrayOutput() LookupVpnConnectionsVpnConnectionIpsecConfigArrayOutput
	ToLookupVpnConnectionsVpnConnectionIpsecConfigArrayOutputWithContext(context.Context) LookupVpnConnectionsVpnConnectionIpsecConfigArrayOutput
}

type LookupVpnConnectionsVpnConnectionIpsecConfigArray []LookupVpnConnectionsVpnConnectionIpsecConfigInput

func (LookupVpnConnectionsVpnConnectionIpsecConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LookupVpnConnectionsVpnConnectionIpsecConfig)(nil)).Elem()
}

func (i LookupVpnConnectionsVpnConnectionIpsecConfigArray) ToLookupVpnConnectionsVpnConnectionIpsecConfigArrayOutput() LookupVpnConnectionsVpnConnectionIpsecConfigArrayOutput {
	return i.ToLookupVpnConnectionsVpnConnectionIpsecConfigArrayOutputWithContext(context.Background())
}

func (i LookupVpnConnectionsVpnConnectionIpsecConfigArray) ToLookupVpnConnectionsVpnConnectionIpsecConfigArrayOutputWithContext(ctx context.Context) LookupVpnConnectionsVpnConnectionIpsecConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LookupVpnConnectionsVpnConnectionIpsecConfigArrayOutput)
}

type LookupVpnConnectionsVpnConnectionIpsecConfigOutput struct{ *pulumi.OutputState }

func (LookupVpnConnectionsVpnConnectionIpsecConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpnConnectionsVpnConnectionIpsecConfig)(nil)).Elem()
}

func (o LookupVpnConnectionsVpnConnectionIpsecConfigOutput) ToLookupVpnConnectionsVpnConnectionIpsecConfigOutput() LookupVpnConnectionsVpnConnectionIpsecConfigOutput {
	return o
}

func (o LookupVpnConnectionsVpnConnectionIpsecConfigOutput) ToLookupVpnConnectionsVpnConnectionIpsecConfigOutputWithContext(ctx context.Context) LookupVpnConnectionsVpnConnectionIpsecConfigOutput {
	return o
}

// The authentication algorithm of IPSec negotiation.
func (o LookupVpnConnectionsVpnConnectionIpsecConfigOutput) AuthenticationAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnConnectionsVpnConnectionIpsecConfig) string { return v.AuthenticationAlgorithm }).(pulumi.StringOutput)
}

// The encryption algorithm of IPSec negotiation.
func (o LookupVpnConnectionsVpnConnectionIpsecConfigOutput) EncryptionAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnConnectionsVpnConnectionIpsecConfig) string { return v.EncryptionAlgorithm }).(pulumi.StringOutput)
}

// The id list of Local subnet.
func (o LookupVpnConnectionsVpnConnectionIpsecConfigOutput) LocalSubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVpnConnectionsVpnConnectionIpsecConfig) []string { return v.LocalSubnetIds }).(pulumi.StringArrayOutput)
}

// Whether the PFS of IPSec negotiation is on or off, `disable` as off, The Diffie-Hellman group as open.
func (o LookupVpnConnectionsVpnConnectionIpsecConfigOutput) PfsDhGroup() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnConnectionsVpnConnectionIpsecConfig) string { return v.PfsDhGroup }).(pulumi.StringOutput)
}

// The security protocol of IPSec negotiation.
func (o LookupVpnConnectionsVpnConnectionIpsecConfigOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnConnectionsVpnConnectionIpsecConfig) string { return v.Protocol }).(pulumi.StringOutput)
}

// The ip address list of remote subnet.
func (o LookupVpnConnectionsVpnConnectionIpsecConfigOutput) RemoteSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVpnConnectionsVpnConnectionIpsecConfig) []string { return v.RemoteSubnets }).(pulumi.StringArrayOutput)
}

// The Security Association lifecycle as the result of IPSec negotiation.
func (o LookupVpnConnectionsVpnConnectionIpsecConfigOutput) SaLifeTime() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnConnectionsVpnConnectionIpsecConfig) int { return v.SaLifeTime }).(pulumi.IntOutput)
}

// The Security Association lifecycle in bytes as the result of IPSec negotiation.
func (o LookupVpnConnectionsVpnConnectionIpsecConfigOutput) SaLifeTimeBytes() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpnConnectionsVpnConnectionIpsecConfig) int { return v.SaLifeTimeBytes }).(pulumi.IntOutput)
}

type LookupVpnConnectionsVpnConnectionIpsecConfigArrayOutput struct{ *pulumi.OutputState }

func (LookupVpnConnectionsVpnConnectionIpsecConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LookupVpnConnectionsVpnConnectionIpsecConfig)(nil)).Elem()
}

func (o LookupVpnConnectionsVpnConnectionIpsecConfigArrayOutput) ToLookupVpnConnectionsVpnConnectionIpsecConfigArrayOutput() LookupVpnConnectionsVpnConnectionIpsecConfigArrayOutput {
	return o
}

func (o LookupVpnConnectionsVpnConnectionIpsecConfigArrayOutput) ToLookupVpnConnectionsVpnConnectionIpsecConfigArrayOutputWithContext(ctx context.Context) LookupVpnConnectionsVpnConnectionIpsecConfigArrayOutput {
	return o
}

func (o LookupVpnConnectionsVpnConnectionIpsecConfigArrayOutput) Index(i pulumi.IntInput) LookupVpnConnectionsVpnConnectionIpsecConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LookupVpnConnectionsVpnConnectionIpsecConfig {
		return vs[0].([]LookupVpnConnectionsVpnConnectionIpsecConfig)[vs[1].(int)]
	}).(LookupVpnConnectionsVpnConnectionIpsecConfigOutput)
}

type LookupVpnCustomerGatewaysVpnCustomerGateway struct {
	// The time of creation for VPN Customer Gateway, formatted in RFC3339 time string.
	CreateTime string `pulumi:"createTime"`
	// The ID of VPN Customer Gateway.
	Id string `pulumi:"id"`
	// The ip address of the VPN Customer Gateway.
	IpAddress string `pulumi:"ipAddress"`
	// The name of the VPN Customer Gateway.
	Name string `pulumi:"name"`
	// The remarks of VPN Customer Gateway.
	Remark string `pulumi:"remark"`
	// A tag assigned to VPN Customer Gateway.
	Tag string `pulumi:"tag"`
}

type LookupVpnCustomerGatewaysVpnCustomerGatewayInput interface {
	pulumi.Input

	ToLookupVpnCustomerGatewaysVpnCustomerGatewayOutput() LookupVpnCustomerGatewaysVpnCustomerGatewayOutput
	ToLookupVpnCustomerGatewaysVpnCustomerGatewayOutputWithContext(context.Context) LookupVpnCustomerGatewaysVpnCustomerGatewayOutput
}

type LookupVpnCustomerGatewaysVpnCustomerGatewayArgs struct {
	// The time of creation for VPN Customer Gateway, formatted in RFC3339 time string.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The ID of VPN Customer Gateway.
	Id pulumi.StringInput `pulumi:"id"`
	// The ip address of the VPN Customer Gateway.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// The name of the VPN Customer Gateway.
	Name pulumi.StringInput `pulumi:"name"`
	// The remarks of VPN Customer Gateway.
	Remark pulumi.StringInput `pulumi:"remark"`
	// A tag assigned to VPN Customer Gateway.
	Tag pulumi.StringInput `pulumi:"tag"`
}

func (LookupVpnCustomerGatewaysVpnCustomerGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpnCustomerGatewaysVpnCustomerGateway)(nil)).Elem()
}

func (i LookupVpnCustomerGatewaysVpnCustomerGatewayArgs) ToLookupVpnCustomerGatewaysVpnCustomerGatewayOutput() LookupVpnCustomerGatewaysVpnCustomerGatewayOutput {
	return i.ToLookupVpnCustomerGatewaysVpnCustomerGatewayOutputWithContext(context.Background())
}

func (i LookupVpnCustomerGatewaysVpnCustomerGatewayArgs) ToLookupVpnCustomerGatewaysVpnCustomerGatewayOutputWithContext(ctx context.Context) LookupVpnCustomerGatewaysVpnCustomerGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LookupVpnCustomerGatewaysVpnCustomerGatewayOutput)
}

type LookupVpnCustomerGatewaysVpnCustomerGatewayArrayInput interface {
	pulumi.Input

	ToLookupVpnCustomerGatewaysVpnCustomerGatewayArrayOutput() LookupVpnCustomerGatewaysVpnCustomerGatewayArrayOutput
	ToLookupVpnCustomerGatewaysVpnCustomerGatewayArrayOutputWithContext(context.Context) LookupVpnCustomerGatewaysVpnCustomerGatewayArrayOutput
}

type LookupVpnCustomerGatewaysVpnCustomerGatewayArray []LookupVpnCustomerGatewaysVpnCustomerGatewayInput

func (LookupVpnCustomerGatewaysVpnCustomerGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LookupVpnCustomerGatewaysVpnCustomerGateway)(nil)).Elem()
}

func (i LookupVpnCustomerGatewaysVpnCustomerGatewayArray) ToLookupVpnCustomerGatewaysVpnCustomerGatewayArrayOutput() LookupVpnCustomerGatewaysVpnCustomerGatewayArrayOutput {
	return i.ToLookupVpnCustomerGatewaysVpnCustomerGatewayArrayOutputWithContext(context.Background())
}

func (i LookupVpnCustomerGatewaysVpnCustomerGatewayArray) ToLookupVpnCustomerGatewaysVpnCustomerGatewayArrayOutputWithContext(ctx context.Context) LookupVpnCustomerGatewaysVpnCustomerGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LookupVpnCustomerGatewaysVpnCustomerGatewayArrayOutput)
}

type LookupVpnCustomerGatewaysVpnCustomerGatewayOutput struct{ *pulumi.OutputState }

func (LookupVpnCustomerGatewaysVpnCustomerGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpnCustomerGatewaysVpnCustomerGateway)(nil)).Elem()
}

func (o LookupVpnCustomerGatewaysVpnCustomerGatewayOutput) ToLookupVpnCustomerGatewaysVpnCustomerGatewayOutput() LookupVpnCustomerGatewaysVpnCustomerGatewayOutput {
	return o
}

func (o LookupVpnCustomerGatewaysVpnCustomerGatewayOutput) ToLookupVpnCustomerGatewaysVpnCustomerGatewayOutputWithContext(ctx context.Context) LookupVpnCustomerGatewaysVpnCustomerGatewayOutput {
	return o
}

// The time of creation for VPN Customer Gateway, formatted in RFC3339 time string.
func (o LookupVpnCustomerGatewaysVpnCustomerGatewayOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnCustomerGatewaysVpnCustomerGateway) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The ID of VPN Customer Gateway.
func (o LookupVpnCustomerGatewaysVpnCustomerGatewayOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnCustomerGatewaysVpnCustomerGateway) string { return v.Id }).(pulumi.StringOutput)
}

// The ip address of the VPN Customer Gateway.
func (o LookupVpnCustomerGatewaysVpnCustomerGatewayOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnCustomerGatewaysVpnCustomerGateway) string { return v.IpAddress }).(pulumi.StringOutput)
}

// The name of the VPN Customer Gateway.
func (o LookupVpnCustomerGatewaysVpnCustomerGatewayOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnCustomerGatewaysVpnCustomerGateway) string { return v.Name }).(pulumi.StringOutput)
}

// The remarks of VPN Customer Gateway.
func (o LookupVpnCustomerGatewaysVpnCustomerGatewayOutput) Remark() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnCustomerGatewaysVpnCustomerGateway) string { return v.Remark }).(pulumi.StringOutput)
}

// A tag assigned to VPN Customer Gateway.
func (o LookupVpnCustomerGatewaysVpnCustomerGatewayOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnCustomerGatewaysVpnCustomerGateway) string { return v.Tag }).(pulumi.StringOutput)
}

type LookupVpnCustomerGatewaysVpnCustomerGatewayArrayOutput struct{ *pulumi.OutputState }

func (LookupVpnCustomerGatewaysVpnCustomerGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LookupVpnCustomerGatewaysVpnCustomerGateway)(nil)).Elem()
}

func (o LookupVpnCustomerGatewaysVpnCustomerGatewayArrayOutput) ToLookupVpnCustomerGatewaysVpnCustomerGatewayArrayOutput() LookupVpnCustomerGatewaysVpnCustomerGatewayArrayOutput {
	return o
}

func (o LookupVpnCustomerGatewaysVpnCustomerGatewayArrayOutput) ToLookupVpnCustomerGatewaysVpnCustomerGatewayArrayOutputWithContext(ctx context.Context) LookupVpnCustomerGatewaysVpnCustomerGatewayArrayOutput {
	return o
}

func (o LookupVpnCustomerGatewaysVpnCustomerGatewayArrayOutput) Index(i pulumi.IntInput) LookupVpnCustomerGatewaysVpnCustomerGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LookupVpnCustomerGatewaysVpnCustomerGateway {
		return vs[0].([]LookupVpnCustomerGatewaysVpnCustomerGateway)[vs[1].(int)]
	}).(LookupVpnCustomerGatewaysVpnCustomerGatewayOutput)
}

type LookupVpnGatewaysVpnGateway struct {
	// Whether to renew an VPN Gateway automatically or not.
	AutoRenew bool `pulumi:"autoRenew"`
	// The charge type of VPN Gateway.
	ChargeType string `pulumi:"chargeType"`
	// The time of creation for VPN Gateway, formatted in RFC3339 time string.
	CreateTime string `pulumi:"createTime"`
	// The expiration time for VPN Gateway, formatted in RFC3339 time string.
	ExpireTime string `pulumi:"expireTime"`
	// The type of the VPN Gateway.
	Grade string `pulumi:"grade"`
	// The ID of VPN Gateway.
	Id string `pulumi:"id"`
	// It is a nested type which documented below.
	IpSets []LookupVpnGatewaysVpnGatewayIpSet `pulumi:"ipSets"`
	// The name of the VPN Gateway.
	Name string `pulumi:"name"`
	// The remarks of VPN Gateway.
	Remark string `pulumi:"remark"`
	// A tag assigned to VPN Gateway.
	Tag string `pulumi:"tag"`
	// The ID of VPC linked to the VPN Gateway.
	VpcId string `pulumi:"vpcId"`
}

type LookupVpnGatewaysVpnGatewayInput interface {
	pulumi.Input

	ToLookupVpnGatewaysVpnGatewayOutput() LookupVpnGatewaysVpnGatewayOutput
	ToLookupVpnGatewaysVpnGatewayOutputWithContext(context.Context) LookupVpnGatewaysVpnGatewayOutput
}

type LookupVpnGatewaysVpnGatewayArgs struct {
	// Whether to renew an VPN Gateway automatically or not.
	AutoRenew pulumi.BoolInput `pulumi:"autoRenew"`
	// The charge type of VPN Gateway.
	ChargeType pulumi.StringInput `pulumi:"chargeType"`
	// The time of creation for VPN Gateway, formatted in RFC3339 time string.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The expiration time for VPN Gateway, formatted in RFC3339 time string.
	ExpireTime pulumi.StringInput `pulumi:"expireTime"`
	// The type of the VPN Gateway.
	Grade pulumi.StringInput `pulumi:"grade"`
	// The ID of VPN Gateway.
	Id pulumi.StringInput `pulumi:"id"`
	// It is a nested type which documented below.
	IpSets LookupVpnGatewaysVpnGatewayIpSetArrayInput `pulumi:"ipSets"`
	// The name of the VPN Gateway.
	Name pulumi.StringInput `pulumi:"name"`
	// The remarks of VPN Gateway.
	Remark pulumi.StringInput `pulumi:"remark"`
	// A tag assigned to VPN Gateway.
	Tag pulumi.StringInput `pulumi:"tag"`
	// The ID of VPC linked to the VPN Gateway.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (LookupVpnGatewaysVpnGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpnGatewaysVpnGateway)(nil)).Elem()
}

func (i LookupVpnGatewaysVpnGatewayArgs) ToLookupVpnGatewaysVpnGatewayOutput() LookupVpnGatewaysVpnGatewayOutput {
	return i.ToLookupVpnGatewaysVpnGatewayOutputWithContext(context.Background())
}

func (i LookupVpnGatewaysVpnGatewayArgs) ToLookupVpnGatewaysVpnGatewayOutputWithContext(ctx context.Context) LookupVpnGatewaysVpnGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LookupVpnGatewaysVpnGatewayOutput)
}

type LookupVpnGatewaysVpnGatewayArrayInput interface {
	pulumi.Input

	ToLookupVpnGatewaysVpnGatewayArrayOutput() LookupVpnGatewaysVpnGatewayArrayOutput
	ToLookupVpnGatewaysVpnGatewayArrayOutputWithContext(context.Context) LookupVpnGatewaysVpnGatewayArrayOutput
}

type LookupVpnGatewaysVpnGatewayArray []LookupVpnGatewaysVpnGatewayInput

func (LookupVpnGatewaysVpnGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LookupVpnGatewaysVpnGateway)(nil)).Elem()
}

func (i LookupVpnGatewaysVpnGatewayArray) ToLookupVpnGatewaysVpnGatewayArrayOutput() LookupVpnGatewaysVpnGatewayArrayOutput {
	return i.ToLookupVpnGatewaysVpnGatewayArrayOutputWithContext(context.Background())
}

func (i LookupVpnGatewaysVpnGatewayArray) ToLookupVpnGatewaysVpnGatewayArrayOutputWithContext(ctx context.Context) LookupVpnGatewaysVpnGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LookupVpnGatewaysVpnGatewayArrayOutput)
}

type LookupVpnGatewaysVpnGatewayOutput struct{ *pulumi.OutputState }

func (LookupVpnGatewaysVpnGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpnGatewaysVpnGateway)(nil)).Elem()
}

func (o LookupVpnGatewaysVpnGatewayOutput) ToLookupVpnGatewaysVpnGatewayOutput() LookupVpnGatewaysVpnGatewayOutput {
	return o
}

func (o LookupVpnGatewaysVpnGatewayOutput) ToLookupVpnGatewaysVpnGatewayOutputWithContext(ctx context.Context) LookupVpnGatewaysVpnGatewayOutput {
	return o
}

// Whether to renew an VPN Gateway automatically or not.
func (o LookupVpnGatewaysVpnGatewayOutput) AutoRenew() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpnGatewaysVpnGateway) bool { return v.AutoRenew }).(pulumi.BoolOutput)
}

// The charge type of VPN Gateway.
func (o LookupVpnGatewaysVpnGatewayOutput) ChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnGatewaysVpnGateway) string { return v.ChargeType }).(pulumi.StringOutput)
}

// The time of creation for VPN Gateway, formatted in RFC3339 time string.
func (o LookupVpnGatewaysVpnGatewayOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnGatewaysVpnGateway) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The expiration time for VPN Gateway, formatted in RFC3339 time string.
func (o LookupVpnGatewaysVpnGatewayOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnGatewaysVpnGateway) string { return v.ExpireTime }).(pulumi.StringOutput)
}

// The type of the VPN Gateway.
func (o LookupVpnGatewaysVpnGatewayOutput) Grade() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnGatewaysVpnGateway) string { return v.Grade }).(pulumi.StringOutput)
}

// The ID of VPN Gateway.
func (o LookupVpnGatewaysVpnGatewayOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnGatewaysVpnGateway) string { return v.Id }).(pulumi.StringOutput)
}

// It is a nested type which documented below.
func (o LookupVpnGatewaysVpnGatewayOutput) IpSets() LookupVpnGatewaysVpnGatewayIpSetArrayOutput {
	return o.ApplyT(func(v LookupVpnGatewaysVpnGateway) []LookupVpnGatewaysVpnGatewayIpSet { return v.IpSets }).(LookupVpnGatewaysVpnGatewayIpSetArrayOutput)
}

// The name of the VPN Gateway.
func (o LookupVpnGatewaysVpnGatewayOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnGatewaysVpnGateway) string { return v.Name }).(pulumi.StringOutput)
}

// The remarks of VPN Gateway.
func (o LookupVpnGatewaysVpnGatewayOutput) Remark() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnGatewaysVpnGateway) string { return v.Remark }).(pulumi.StringOutput)
}

// A tag assigned to VPN Gateway.
func (o LookupVpnGatewaysVpnGatewayOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnGatewaysVpnGateway) string { return v.Tag }).(pulumi.StringOutput)
}

// The ID of VPC linked to the VPN Gateway.
func (o LookupVpnGatewaysVpnGatewayOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnGatewaysVpnGateway) string { return v.VpcId }).(pulumi.StringOutput)
}

type LookupVpnGatewaysVpnGatewayArrayOutput struct{ *pulumi.OutputState }

func (LookupVpnGatewaysVpnGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LookupVpnGatewaysVpnGateway)(nil)).Elem()
}

func (o LookupVpnGatewaysVpnGatewayArrayOutput) ToLookupVpnGatewaysVpnGatewayArrayOutput() LookupVpnGatewaysVpnGatewayArrayOutput {
	return o
}

func (o LookupVpnGatewaysVpnGatewayArrayOutput) ToLookupVpnGatewaysVpnGatewayArrayOutputWithContext(ctx context.Context) LookupVpnGatewaysVpnGatewayArrayOutput {
	return o
}

func (o LookupVpnGatewaysVpnGatewayArrayOutput) Index(i pulumi.IntInput) LookupVpnGatewaysVpnGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LookupVpnGatewaysVpnGateway {
		return vs[0].([]LookupVpnGatewaysVpnGateway)[vs[1].(int)]
	}).(LookupVpnGatewaysVpnGatewayOutput)
}

type LookupVpnGatewaysVpnGatewayIpSet struct {
	// Type of Elastic IP routes.
	InternetType string `pulumi:"internetType"`
	// Elastic IP address.
	Ip string `pulumi:"ip"`
}

type LookupVpnGatewaysVpnGatewayIpSetInput interface {
	pulumi.Input

	ToLookupVpnGatewaysVpnGatewayIpSetOutput() LookupVpnGatewaysVpnGatewayIpSetOutput
	ToLookupVpnGatewaysVpnGatewayIpSetOutputWithContext(context.Context) LookupVpnGatewaysVpnGatewayIpSetOutput
}

type LookupVpnGatewaysVpnGatewayIpSetArgs struct {
	// Type of Elastic IP routes.
	InternetType pulumi.StringInput `pulumi:"internetType"`
	// Elastic IP address.
	Ip pulumi.StringInput `pulumi:"ip"`
}

func (LookupVpnGatewaysVpnGatewayIpSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpnGatewaysVpnGatewayIpSet)(nil)).Elem()
}

func (i LookupVpnGatewaysVpnGatewayIpSetArgs) ToLookupVpnGatewaysVpnGatewayIpSetOutput() LookupVpnGatewaysVpnGatewayIpSetOutput {
	return i.ToLookupVpnGatewaysVpnGatewayIpSetOutputWithContext(context.Background())
}

func (i LookupVpnGatewaysVpnGatewayIpSetArgs) ToLookupVpnGatewaysVpnGatewayIpSetOutputWithContext(ctx context.Context) LookupVpnGatewaysVpnGatewayIpSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LookupVpnGatewaysVpnGatewayIpSetOutput)
}

type LookupVpnGatewaysVpnGatewayIpSetArrayInput interface {
	pulumi.Input

	ToLookupVpnGatewaysVpnGatewayIpSetArrayOutput() LookupVpnGatewaysVpnGatewayIpSetArrayOutput
	ToLookupVpnGatewaysVpnGatewayIpSetArrayOutputWithContext(context.Context) LookupVpnGatewaysVpnGatewayIpSetArrayOutput
}

type LookupVpnGatewaysVpnGatewayIpSetArray []LookupVpnGatewaysVpnGatewayIpSetInput

func (LookupVpnGatewaysVpnGatewayIpSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LookupVpnGatewaysVpnGatewayIpSet)(nil)).Elem()
}

func (i LookupVpnGatewaysVpnGatewayIpSetArray) ToLookupVpnGatewaysVpnGatewayIpSetArrayOutput() LookupVpnGatewaysVpnGatewayIpSetArrayOutput {
	return i.ToLookupVpnGatewaysVpnGatewayIpSetArrayOutputWithContext(context.Background())
}

func (i LookupVpnGatewaysVpnGatewayIpSetArray) ToLookupVpnGatewaysVpnGatewayIpSetArrayOutputWithContext(ctx context.Context) LookupVpnGatewaysVpnGatewayIpSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LookupVpnGatewaysVpnGatewayIpSetArrayOutput)
}

type LookupVpnGatewaysVpnGatewayIpSetOutput struct{ *pulumi.OutputState }

func (LookupVpnGatewaysVpnGatewayIpSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpnGatewaysVpnGatewayIpSet)(nil)).Elem()
}

func (o LookupVpnGatewaysVpnGatewayIpSetOutput) ToLookupVpnGatewaysVpnGatewayIpSetOutput() LookupVpnGatewaysVpnGatewayIpSetOutput {
	return o
}

func (o LookupVpnGatewaysVpnGatewayIpSetOutput) ToLookupVpnGatewaysVpnGatewayIpSetOutputWithContext(ctx context.Context) LookupVpnGatewaysVpnGatewayIpSetOutput {
	return o
}

// Type of Elastic IP routes.
func (o LookupVpnGatewaysVpnGatewayIpSetOutput) InternetType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnGatewaysVpnGatewayIpSet) string { return v.InternetType }).(pulumi.StringOutput)
}

// Elastic IP address.
func (o LookupVpnGatewaysVpnGatewayIpSetOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpnGatewaysVpnGatewayIpSet) string { return v.Ip }).(pulumi.StringOutput)
}

type LookupVpnGatewaysVpnGatewayIpSetArrayOutput struct{ *pulumi.OutputState }

func (LookupVpnGatewaysVpnGatewayIpSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LookupVpnGatewaysVpnGatewayIpSet)(nil)).Elem()
}

func (o LookupVpnGatewaysVpnGatewayIpSetArrayOutput) ToLookupVpnGatewaysVpnGatewayIpSetArrayOutput() LookupVpnGatewaysVpnGatewayIpSetArrayOutput {
	return o
}

func (o LookupVpnGatewaysVpnGatewayIpSetArrayOutput) ToLookupVpnGatewaysVpnGatewayIpSetArrayOutputWithContext(ctx context.Context) LookupVpnGatewaysVpnGatewayIpSetArrayOutput {
	return o
}

func (o LookupVpnGatewaysVpnGatewayIpSetArrayOutput) Index(i pulumi.IntInput) LookupVpnGatewaysVpnGatewayIpSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LookupVpnGatewaysVpnGatewayIpSet {
		return vs[0].([]LookupVpnGatewaysVpnGatewayIpSet)[vs[1].(int)]
	}).(LookupVpnGatewaysVpnGatewayIpSetOutput)
}

func init() {
	pulumi.RegisterOutputType(VpnConnectionIkeConfigOutput{})
	pulumi.RegisterOutputType(VpnConnectionIkeConfigPtrOutput{})
	pulumi.RegisterOutputType(VpnConnectionIpsecConfigOutput{})
	pulumi.RegisterOutputType(VpnConnectionIpsecConfigPtrOutput{})
	pulumi.RegisterOutputType(LookupVpnConnectionsVpnConnectionOutput{})
	pulumi.RegisterOutputType(LookupVpnConnectionsVpnConnectionArrayOutput{})
	pulumi.RegisterOutputType(LookupVpnConnectionsVpnConnectionIkeConfigOutput{})
	pulumi.RegisterOutputType(LookupVpnConnectionsVpnConnectionIkeConfigArrayOutput{})
	pulumi.RegisterOutputType(LookupVpnConnectionsVpnConnectionIpsecConfigOutput{})
	pulumi.RegisterOutputType(LookupVpnConnectionsVpnConnectionIpsecConfigArrayOutput{})
	pulumi.RegisterOutputType(LookupVpnCustomerGatewaysVpnCustomerGatewayOutput{})
	pulumi.RegisterOutputType(LookupVpnCustomerGatewaysVpnCustomerGatewayArrayOutput{})
	pulumi.RegisterOutputType(LookupVpnGatewaysVpnGatewayOutput{})
	pulumi.RegisterOutputType(LookupVpnGatewaysVpnGatewayArrayOutput{})
	pulumi.RegisterOutputType(LookupVpnGatewaysVpnGatewayIpSetOutput{})
	pulumi.RegisterOutputType(LookupVpnGatewaysVpnGatewayIpSetArrayOutput{})
}
