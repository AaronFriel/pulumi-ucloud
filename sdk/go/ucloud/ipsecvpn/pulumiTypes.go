// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ipsecvpn

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type VPNConnectionIkeConfig struct {
	// The authentication algorithm of IPSec negotiation. Possible values: `sha1`, `md5`. (Default: `sha1`)
	AuthenticationAlgorithm *string `pulumi:"authenticationAlgorithm"`
	// The Diffie-Hellman group used by IKE negotiation. Possible values: `1`, `2`, `5`, `14`, `15`, `16`. (Default:`15`)
	DhGroup *string `pulumi:"dhGroup"`
	// The encryption algorithm of IPSec negotiation. Possible values: `aes128`, `aes192`, `aes256`, `aes512`, `3des`. (Default: `aes128`).
	EncryptionAlgorithm *string `pulumi:"encryptionAlgorithm"`
	// The negotiation exchange mode of IKE V1 of VPN gateway. Possible values: `main` (main mode), `aggressive` (aggressive mode). (Default: `main`)
	ExchangeMode *string `pulumi:"exchangeMode"`
	// The version of the IKE protocol which only be supported IKE V1 protocol at present. Possible values: ikev1. (Default: ikev1)
	IkeVersion *string `pulumi:"ikeVersion"`
	// The identification of the VPN gateway.
	LocalId *string `pulumi:"localId"`
	// The key used for authentication between the VPN gateway and the Customer gateway which contains 1-128 characters and only support English, numbers and special characters: `!@#$%^&*()_+-=[]:,./'~`.
	PreSharedKey string `pulumi:"preSharedKey"`
	// The identification of the Customer gateway.
	RemoteId *string `pulumi:"remoteId"`
	// The Security Association lifecycle as the result of IPSec negotiation. Unit: second. Range: 1200-604800. (Default: `3600`)
	SaLifeTime *int `pulumi:"saLifeTime"`
}

// VPNConnectionIkeConfigInput is an input type that accepts VPNConnectionIkeConfigArgs and VPNConnectionIkeConfigOutput values.
// You can construct a concrete instance of `VPNConnectionIkeConfigInput` via:
//
//          VPNConnectionIkeConfigArgs{...}
type VPNConnectionIkeConfigInput interface {
	pulumi.Input

	ToVPNConnectionIkeConfigOutput() VPNConnectionIkeConfigOutput
	ToVPNConnectionIkeConfigOutputWithContext(context.Context) VPNConnectionIkeConfigOutput
}

type VPNConnectionIkeConfigArgs struct {
	// The authentication algorithm of IPSec negotiation. Possible values: `sha1`, `md5`. (Default: `sha1`)
	AuthenticationAlgorithm pulumi.StringPtrInput `pulumi:"authenticationAlgorithm"`
	// The Diffie-Hellman group used by IKE negotiation. Possible values: `1`, `2`, `5`, `14`, `15`, `16`. (Default:`15`)
	DhGroup pulumi.StringPtrInput `pulumi:"dhGroup"`
	// The encryption algorithm of IPSec negotiation. Possible values: `aes128`, `aes192`, `aes256`, `aes512`, `3des`. (Default: `aes128`).
	EncryptionAlgorithm pulumi.StringPtrInput `pulumi:"encryptionAlgorithm"`
	// The negotiation exchange mode of IKE V1 of VPN gateway. Possible values: `main` (main mode), `aggressive` (aggressive mode). (Default: `main`)
	ExchangeMode pulumi.StringPtrInput `pulumi:"exchangeMode"`
	// The version of the IKE protocol which only be supported IKE V1 protocol at present. Possible values: ikev1. (Default: ikev1)
	IkeVersion pulumi.StringPtrInput `pulumi:"ikeVersion"`
	// The identification of the VPN gateway.
	LocalId pulumi.StringPtrInput `pulumi:"localId"`
	// The key used for authentication between the VPN gateway and the Customer gateway which contains 1-128 characters and only support English, numbers and special characters: `!@#$%^&*()_+-=[]:,./'~`.
	PreSharedKey pulumi.StringInput `pulumi:"preSharedKey"`
	// The identification of the Customer gateway.
	RemoteId pulumi.StringPtrInput `pulumi:"remoteId"`
	// The Security Association lifecycle as the result of IPSec negotiation. Unit: second. Range: 1200-604800. (Default: `3600`)
	SaLifeTime pulumi.IntPtrInput `pulumi:"saLifeTime"`
}

func (VPNConnectionIkeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VPNConnectionIkeConfig)(nil)).Elem()
}

func (i VPNConnectionIkeConfigArgs) ToVPNConnectionIkeConfigOutput() VPNConnectionIkeConfigOutput {
	return i.ToVPNConnectionIkeConfigOutputWithContext(context.Background())
}

func (i VPNConnectionIkeConfigArgs) ToVPNConnectionIkeConfigOutputWithContext(ctx context.Context) VPNConnectionIkeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPNConnectionIkeConfigOutput)
}

func (i VPNConnectionIkeConfigArgs) ToVPNConnectionIkeConfigPtrOutput() VPNConnectionIkeConfigPtrOutput {
	return i.ToVPNConnectionIkeConfigPtrOutputWithContext(context.Background())
}

func (i VPNConnectionIkeConfigArgs) ToVPNConnectionIkeConfigPtrOutputWithContext(ctx context.Context) VPNConnectionIkeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPNConnectionIkeConfigOutput).ToVPNConnectionIkeConfigPtrOutputWithContext(ctx)
}

// VPNConnectionIkeConfigPtrInput is an input type that accepts VPNConnectionIkeConfigArgs, VPNConnectionIkeConfigPtr and VPNConnectionIkeConfigPtrOutput values.
// You can construct a concrete instance of `VPNConnectionIkeConfigPtrInput` via:
//
//          VPNConnectionIkeConfigArgs{...}
//
//  or:
//
//          nil
type VPNConnectionIkeConfigPtrInput interface {
	pulumi.Input

	ToVPNConnectionIkeConfigPtrOutput() VPNConnectionIkeConfigPtrOutput
	ToVPNConnectionIkeConfigPtrOutputWithContext(context.Context) VPNConnectionIkeConfigPtrOutput
}

type vpnconnectionIkeConfigPtrType VPNConnectionIkeConfigArgs

func VPNConnectionIkeConfigPtr(v *VPNConnectionIkeConfigArgs) VPNConnectionIkeConfigPtrInput {
	return (*vpnconnectionIkeConfigPtrType)(v)
}

func (*vpnconnectionIkeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VPNConnectionIkeConfig)(nil)).Elem()
}

func (i *vpnconnectionIkeConfigPtrType) ToVPNConnectionIkeConfigPtrOutput() VPNConnectionIkeConfigPtrOutput {
	return i.ToVPNConnectionIkeConfigPtrOutputWithContext(context.Background())
}

func (i *vpnconnectionIkeConfigPtrType) ToVPNConnectionIkeConfigPtrOutputWithContext(ctx context.Context) VPNConnectionIkeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPNConnectionIkeConfigPtrOutput)
}

type VPNConnectionIkeConfigOutput struct{ *pulumi.OutputState }

func (VPNConnectionIkeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VPNConnectionIkeConfig)(nil)).Elem()
}

func (o VPNConnectionIkeConfigOutput) ToVPNConnectionIkeConfigOutput() VPNConnectionIkeConfigOutput {
	return o
}

func (o VPNConnectionIkeConfigOutput) ToVPNConnectionIkeConfigOutputWithContext(ctx context.Context) VPNConnectionIkeConfigOutput {
	return o
}

func (o VPNConnectionIkeConfigOutput) ToVPNConnectionIkeConfigPtrOutput() VPNConnectionIkeConfigPtrOutput {
	return o.ToVPNConnectionIkeConfigPtrOutputWithContext(context.Background())
}

func (o VPNConnectionIkeConfigOutput) ToVPNConnectionIkeConfigPtrOutputWithContext(ctx context.Context) VPNConnectionIkeConfigPtrOutput {
	return o.ApplyT(func(v VPNConnectionIkeConfig) *VPNConnectionIkeConfig {
		return &v
	}).(VPNConnectionIkeConfigPtrOutput)
}

// The authentication algorithm of IPSec negotiation. Possible values: `sha1`, `md5`. (Default: `sha1`)
func (o VPNConnectionIkeConfigOutput) AuthenticationAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VPNConnectionIkeConfig) *string { return v.AuthenticationAlgorithm }).(pulumi.StringPtrOutput)
}

// The Diffie-Hellman group used by IKE negotiation. Possible values: `1`, `2`, `5`, `14`, `15`, `16`. (Default:`15`)
func (o VPNConnectionIkeConfigOutput) DhGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VPNConnectionIkeConfig) *string { return v.DhGroup }).(pulumi.StringPtrOutput)
}

// The encryption algorithm of IPSec negotiation. Possible values: `aes128`, `aes192`, `aes256`, `aes512`, `3des`. (Default: `aes128`).
func (o VPNConnectionIkeConfigOutput) EncryptionAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VPNConnectionIkeConfig) *string { return v.EncryptionAlgorithm }).(pulumi.StringPtrOutput)
}

// The negotiation exchange mode of IKE V1 of VPN gateway. Possible values: `main` (main mode), `aggressive` (aggressive mode). (Default: `main`)
func (o VPNConnectionIkeConfigOutput) ExchangeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VPNConnectionIkeConfig) *string { return v.ExchangeMode }).(pulumi.StringPtrOutput)
}

// The version of the IKE protocol which only be supported IKE V1 protocol at present. Possible values: ikev1. (Default: ikev1)
func (o VPNConnectionIkeConfigOutput) IkeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VPNConnectionIkeConfig) *string { return v.IkeVersion }).(pulumi.StringPtrOutput)
}

// The identification of the VPN gateway.
func (o VPNConnectionIkeConfigOutput) LocalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VPNConnectionIkeConfig) *string { return v.LocalId }).(pulumi.StringPtrOutput)
}

// The key used for authentication between the VPN gateway and the Customer gateway which contains 1-128 characters and only support English, numbers and special characters: `!@#$%^&*()_+-=[]:,./'~`.
func (o VPNConnectionIkeConfigOutput) PreSharedKey() pulumi.StringOutput {
	return o.ApplyT(func(v VPNConnectionIkeConfig) string { return v.PreSharedKey }).(pulumi.StringOutput)
}

// The identification of the Customer gateway.
func (o VPNConnectionIkeConfigOutput) RemoteId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VPNConnectionIkeConfig) *string { return v.RemoteId }).(pulumi.StringPtrOutput)
}

// The Security Association lifecycle as the result of IPSec negotiation. Unit: second. Range: 1200-604800. (Default: `3600`)
func (o VPNConnectionIkeConfigOutput) SaLifeTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VPNConnectionIkeConfig) *int { return v.SaLifeTime }).(pulumi.IntPtrOutput)
}

type VPNConnectionIkeConfigPtrOutput struct{ *pulumi.OutputState }

func (VPNConnectionIkeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VPNConnectionIkeConfig)(nil)).Elem()
}

func (o VPNConnectionIkeConfigPtrOutput) ToVPNConnectionIkeConfigPtrOutput() VPNConnectionIkeConfigPtrOutput {
	return o
}

func (o VPNConnectionIkeConfigPtrOutput) ToVPNConnectionIkeConfigPtrOutputWithContext(ctx context.Context) VPNConnectionIkeConfigPtrOutput {
	return o
}

func (o VPNConnectionIkeConfigPtrOutput) Elem() VPNConnectionIkeConfigOutput {
	return o.ApplyT(func(v *VPNConnectionIkeConfig) VPNConnectionIkeConfig { return *v }).(VPNConnectionIkeConfigOutput)
}

// The authentication algorithm of IPSec negotiation. Possible values: `sha1`, `md5`. (Default: `sha1`)
func (o VPNConnectionIkeConfigPtrOutput) AuthenticationAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VPNConnectionIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.AuthenticationAlgorithm
	}).(pulumi.StringPtrOutput)
}

// The Diffie-Hellman group used by IKE negotiation. Possible values: `1`, `2`, `5`, `14`, `15`, `16`. (Default:`15`)
func (o VPNConnectionIkeConfigPtrOutput) DhGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VPNConnectionIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.DhGroup
	}).(pulumi.StringPtrOutput)
}

// The encryption algorithm of IPSec negotiation. Possible values: `aes128`, `aes192`, `aes256`, `aes512`, `3des`. (Default: `aes128`).
func (o VPNConnectionIkeConfigPtrOutput) EncryptionAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VPNConnectionIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.EncryptionAlgorithm
	}).(pulumi.StringPtrOutput)
}

// The negotiation exchange mode of IKE V1 of VPN gateway. Possible values: `main` (main mode), `aggressive` (aggressive mode). (Default: `main`)
func (o VPNConnectionIkeConfigPtrOutput) ExchangeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VPNConnectionIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.ExchangeMode
	}).(pulumi.StringPtrOutput)
}

// The version of the IKE protocol which only be supported IKE V1 protocol at present. Possible values: ikev1. (Default: ikev1)
func (o VPNConnectionIkeConfigPtrOutput) IkeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VPNConnectionIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.IkeVersion
	}).(pulumi.StringPtrOutput)
}

// The identification of the VPN gateway.
func (o VPNConnectionIkeConfigPtrOutput) LocalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VPNConnectionIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.LocalId
	}).(pulumi.StringPtrOutput)
}

// The key used for authentication between the VPN gateway and the Customer gateway which contains 1-128 characters and only support English, numbers and special characters: `!@#$%^&*()_+-=[]:,./'~`.
func (o VPNConnectionIkeConfigPtrOutput) PreSharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VPNConnectionIkeConfig) *string {
		if v == nil {
			return nil
		}
		return &v.PreSharedKey
	}).(pulumi.StringPtrOutput)
}

// The identification of the Customer gateway.
func (o VPNConnectionIkeConfigPtrOutput) RemoteId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VPNConnectionIkeConfig) *string {
		if v == nil {
			return nil
		}
		return v.RemoteId
	}).(pulumi.StringPtrOutput)
}

// The Security Association lifecycle as the result of IPSec negotiation. Unit: second. Range: 1200-604800. (Default: `3600`)
func (o VPNConnectionIkeConfigPtrOutput) SaLifeTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VPNConnectionIkeConfig) *int {
		if v == nil {
			return nil
		}
		return v.SaLifeTime
	}).(pulumi.IntPtrOutput)
}

type VPNConnectionIpsecConfig struct {
	// The authentication algorithm of IPSec negotiation. Possible values: `sha1`, `md5`. (Default: `sha1`)
	AuthenticationAlgorithm *string `pulumi:"authenticationAlgorithm"`
	// The encryption algorithm of IPSec negotiation. Possible values: `aes128`, `aes192`, `aes256`, `aes512`, `3des`. (Default: `aes128`).
	EncryptionAlgorithm *string `pulumi:"encryptionAlgorithm"`
	// The id list of Local subnet.
	LocalSubnetIds []string `pulumi:"localSubnetIds"`
	// Whether the PFS of IPSec negotiation is on or off, `disable` as off, The Diffie-Hellman group as open.  Possible values: `disable`, `1`, `2`, `5`, `14`, `15`, `16`. (Default:`disable`)
	PfsDhGroup *string `pulumi:"pfsDhGroup"`
	// The security protocol of IPSec negotiation. Possible values: `esp`, `ah`. (Default:`esp`)
	Protocol *string `pulumi:"protocol"`
	// The ip address list of remote subnet.
	RemoteSubnets []string `pulumi:"remoteSubnets"`
	// The Security Association lifecycle as the result of IPSec negotiation. Unit: second. Range: 1200-604800. (Default: `3600`)
	SaLifeTime *int `pulumi:"saLifeTime"`
	// The Security Association lifecycle in bytes as the result of IPSec negotiation. Unit: second. Range: 1200-604800. (Default: `3600`)
	SaLifeTimeBytes *int `pulumi:"saLifeTimeBytes"`
}

// VPNConnectionIpsecConfigInput is an input type that accepts VPNConnectionIpsecConfigArgs and VPNConnectionIpsecConfigOutput values.
// You can construct a concrete instance of `VPNConnectionIpsecConfigInput` via:
//
//          VPNConnectionIpsecConfigArgs{...}
type VPNConnectionIpsecConfigInput interface {
	pulumi.Input

	ToVPNConnectionIpsecConfigOutput() VPNConnectionIpsecConfigOutput
	ToVPNConnectionIpsecConfigOutputWithContext(context.Context) VPNConnectionIpsecConfigOutput
}

type VPNConnectionIpsecConfigArgs struct {
	// The authentication algorithm of IPSec negotiation. Possible values: `sha1`, `md5`. (Default: `sha1`)
	AuthenticationAlgorithm pulumi.StringPtrInput `pulumi:"authenticationAlgorithm"`
	// The encryption algorithm of IPSec negotiation. Possible values: `aes128`, `aes192`, `aes256`, `aes512`, `3des`. (Default: `aes128`).
	EncryptionAlgorithm pulumi.StringPtrInput `pulumi:"encryptionAlgorithm"`
	// The id list of Local subnet.
	LocalSubnetIds pulumi.StringArrayInput `pulumi:"localSubnetIds"`
	// Whether the PFS of IPSec negotiation is on or off, `disable` as off, The Diffie-Hellman group as open.  Possible values: `disable`, `1`, `2`, `5`, `14`, `15`, `16`. (Default:`disable`)
	PfsDhGroup pulumi.StringPtrInput `pulumi:"pfsDhGroup"`
	// The security protocol of IPSec negotiation. Possible values: `esp`, `ah`. (Default:`esp`)
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// The ip address list of remote subnet.
	RemoteSubnets pulumi.StringArrayInput `pulumi:"remoteSubnets"`
	// The Security Association lifecycle as the result of IPSec negotiation. Unit: second. Range: 1200-604800. (Default: `3600`)
	SaLifeTime pulumi.IntPtrInput `pulumi:"saLifeTime"`
	// The Security Association lifecycle in bytes as the result of IPSec negotiation. Unit: second. Range: 1200-604800. (Default: `3600`)
	SaLifeTimeBytes pulumi.IntPtrInput `pulumi:"saLifeTimeBytes"`
}

func (VPNConnectionIpsecConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VPNConnectionIpsecConfig)(nil)).Elem()
}

func (i VPNConnectionIpsecConfigArgs) ToVPNConnectionIpsecConfigOutput() VPNConnectionIpsecConfigOutput {
	return i.ToVPNConnectionIpsecConfigOutputWithContext(context.Background())
}

func (i VPNConnectionIpsecConfigArgs) ToVPNConnectionIpsecConfigOutputWithContext(ctx context.Context) VPNConnectionIpsecConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPNConnectionIpsecConfigOutput)
}

func (i VPNConnectionIpsecConfigArgs) ToVPNConnectionIpsecConfigPtrOutput() VPNConnectionIpsecConfigPtrOutput {
	return i.ToVPNConnectionIpsecConfigPtrOutputWithContext(context.Background())
}

func (i VPNConnectionIpsecConfigArgs) ToVPNConnectionIpsecConfigPtrOutputWithContext(ctx context.Context) VPNConnectionIpsecConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPNConnectionIpsecConfigOutput).ToVPNConnectionIpsecConfigPtrOutputWithContext(ctx)
}

// VPNConnectionIpsecConfigPtrInput is an input type that accepts VPNConnectionIpsecConfigArgs, VPNConnectionIpsecConfigPtr and VPNConnectionIpsecConfigPtrOutput values.
// You can construct a concrete instance of `VPNConnectionIpsecConfigPtrInput` via:
//
//          VPNConnectionIpsecConfigArgs{...}
//
//  or:
//
//          nil
type VPNConnectionIpsecConfigPtrInput interface {
	pulumi.Input

	ToVPNConnectionIpsecConfigPtrOutput() VPNConnectionIpsecConfigPtrOutput
	ToVPNConnectionIpsecConfigPtrOutputWithContext(context.Context) VPNConnectionIpsecConfigPtrOutput
}

type vpnconnectionIpsecConfigPtrType VPNConnectionIpsecConfigArgs

func VPNConnectionIpsecConfigPtr(v *VPNConnectionIpsecConfigArgs) VPNConnectionIpsecConfigPtrInput {
	return (*vpnconnectionIpsecConfigPtrType)(v)
}

func (*vpnconnectionIpsecConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VPNConnectionIpsecConfig)(nil)).Elem()
}

func (i *vpnconnectionIpsecConfigPtrType) ToVPNConnectionIpsecConfigPtrOutput() VPNConnectionIpsecConfigPtrOutput {
	return i.ToVPNConnectionIpsecConfigPtrOutputWithContext(context.Background())
}

func (i *vpnconnectionIpsecConfigPtrType) ToVPNConnectionIpsecConfigPtrOutputWithContext(ctx context.Context) VPNConnectionIpsecConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPNConnectionIpsecConfigPtrOutput)
}

type VPNConnectionIpsecConfigOutput struct{ *pulumi.OutputState }

func (VPNConnectionIpsecConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VPNConnectionIpsecConfig)(nil)).Elem()
}

func (o VPNConnectionIpsecConfigOutput) ToVPNConnectionIpsecConfigOutput() VPNConnectionIpsecConfigOutput {
	return o
}

func (o VPNConnectionIpsecConfigOutput) ToVPNConnectionIpsecConfigOutputWithContext(ctx context.Context) VPNConnectionIpsecConfigOutput {
	return o
}

func (o VPNConnectionIpsecConfigOutput) ToVPNConnectionIpsecConfigPtrOutput() VPNConnectionIpsecConfigPtrOutput {
	return o.ToVPNConnectionIpsecConfigPtrOutputWithContext(context.Background())
}

func (o VPNConnectionIpsecConfigOutput) ToVPNConnectionIpsecConfigPtrOutputWithContext(ctx context.Context) VPNConnectionIpsecConfigPtrOutput {
	return o.ApplyT(func(v VPNConnectionIpsecConfig) *VPNConnectionIpsecConfig {
		return &v
	}).(VPNConnectionIpsecConfigPtrOutput)
}

// The authentication algorithm of IPSec negotiation. Possible values: `sha1`, `md5`. (Default: `sha1`)
func (o VPNConnectionIpsecConfigOutput) AuthenticationAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VPNConnectionIpsecConfig) *string { return v.AuthenticationAlgorithm }).(pulumi.StringPtrOutput)
}

// The encryption algorithm of IPSec negotiation. Possible values: `aes128`, `aes192`, `aes256`, `aes512`, `3des`. (Default: `aes128`).
func (o VPNConnectionIpsecConfigOutput) EncryptionAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VPNConnectionIpsecConfig) *string { return v.EncryptionAlgorithm }).(pulumi.StringPtrOutput)
}

// The id list of Local subnet.
func (o VPNConnectionIpsecConfigOutput) LocalSubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VPNConnectionIpsecConfig) []string { return v.LocalSubnetIds }).(pulumi.StringArrayOutput)
}

// Whether the PFS of IPSec negotiation is on or off, `disable` as off, The Diffie-Hellman group as open.  Possible values: `disable`, `1`, `2`, `5`, `14`, `15`, `16`. (Default:`disable`)
func (o VPNConnectionIpsecConfigOutput) PfsDhGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VPNConnectionIpsecConfig) *string { return v.PfsDhGroup }).(pulumi.StringPtrOutput)
}

// The security protocol of IPSec negotiation. Possible values: `esp`, `ah`. (Default:`esp`)
func (o VPNConnectionIpsecConfigOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VPNConnectionIpsecConfig) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The ip address list of remote subnet.
func (o VPNConnectionIpsecConfigOutput) RemoteSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VPNConnectionIpsecConfig) []string { return v.RemoteSubnets }).(pulumi.StringArrayOutput)
}

// The Security Association lifecycle as the result of IPSec negotiation. Unit: second. Range: 1200-604800. (Default: `3600`)
func (o VPNConnectionIpsecConfigOutput) SaLifeTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VPNConnectionIpsecConfig) *int { return v.SaLifeTime }).(pulumi.IntPtrOutput)
}

// The Security Association lifecycle in bytes as the result of IPSec negotiation. Unit: second. Range: 1200-604800. (Default: `3600`)
func (o VPNConnectionIpsecConfigOutput) SaLifeTimeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VPNConnectionIpsecConfig) *int { return v.SaLifeTimeBytes }).(pulumi.IntPtrOutput)
}

type VPNConnectionIpsecConfigPtrOutput struct{ *pulumi.OutputState }

func (VPNConnectionIpsecConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VPNConnectionIpsecConfig)(nil)).Elem()
}

func (o VPNConnectionIpsecConfigPtrOutput) ToVPNConnectionIpsecConfigPtrOutput() VPNConnectionIpsecConfigPtrOutput {
	return o
}

func (o VPNConnectionIpsecConfigPtrOutput) ToVPNConnectionIpsecConfigPtrOutputWithContext(ctx context.Context) VPNConnectionIpsecConfigPtrOutput {
	return o
}

func (o VPNConnectionIpsecConfigPtrOutput) Elem() VPNConnectionIpsecConfigOutput {
	return o.ApplyT(func(v *VPNConnectionIpsecConfig) VPNConnectionIpsecConfig { return *v }).(VPNConnectionIpsecConfigOutput)
}

// The authentication algorithm of IPSec negotiation. Possible values: `sha1`, `md5`. (Default: `sha1`)
func (o VPNConnectionIpsecConfigPtrOutput) AuthenticationAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VPNConnectionIpsecConfig) *string {
		if v == nil {
			return nil
		}
		return v.AuthenticationAlgorithm
	}).(pulumi.StringPtrOutput)
}

// The encryption algorithm of IPSec negotiation. Possible values: `aes128`, `aes192`, `aes256`, `aes512`, `3des`. (Default: `aes128`).
func (o VPNConnectionIpsecConfigPtrOutput) EncryptionAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VPNConnectionIpsecConfig) *string {
		if v == nil {
			return nil
		}
		return v.EncryptionAlgorithm
	}).(pulumi.StringPtrOutput)
}

// The id list of Local subnet.
func (o VPNConnectionIpsecConfigPtrOutput) LocalSubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VPNConnectionIpsecConfig) []string {
		if v == nil {
			return nil
		}
		return v.LocalSubnetIds
	}).(pulumi.StringArrayOutput)
}

// Whether the PFS of IPSec negotiation is on or off, `disable` as off, The Diffie-Hellman group as open.  Possible values: `disable`, `1`, `2`, `5`, `14`, `15`, `16`. (Default:`disable`)
func (o VPNConnectionIpsecConfigPtrOutput) PfsDhGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VPNConnectionIpsecConfig) *string {
		if v == nil {
			return nil
		}
		return v.PfsDhGroup
	}).(pulumi.StringPtrOutput)
}

// The security protocol of IPSec negotiation. Possible values: `esp`, `ah`. (Default:`esp`)
func (o VPNConnectionIpsecConfigPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VPNConnectionIpsecConfig) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

// The ip address list of remote subnet.
func (o VPNConnectionIpsecConfigPtrOutput) RemoteSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VPNConnectionIpsecConfig) []string {
		if v == nil {
			return nil
		}
		return v.RemoteSubnets
	}).(pulumi.StringArrayOutput)
}

// The Security Association lifecycle as the result of IPSec negotiation. Unit: second. Range: 1200-604800. (Default: `3600`)
func (o VPNConnectionIpsecConfigPtrOutput) SaLifeTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VPNConnectionIpsecConfig) *int {
		if v == nil {
			return nil
		}
		return v.SaLifeTime
	}).(pulumi.IntPtrOutput)
}

// The Security Association lifecycle in bytes as the result of IPSec negotiation. Unit: second. Range: 1200-604800. (Default: `3600`)
func (o VPNConnectionIpsecConfigPtrOutput) SaLifeTimeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VPNConnectionIpsecConfig) *int {
		if v == nil {
			return nil
		}
		return v.SaLifeTimeBytes
	}).(pulumi.IntPtrOutput)
}

type GetVPNConnectionVpnConnection struct {
	// The time of creation for VPN Connection, formatted in RFC3339 time string.
	CreateTime string `pulumi:"createTime"`
	// The ID of VPN Customer Gateway.
	CustomerGatewayId string `pulumi:"customerGatewayId"`
	// The ID of VPN Connection.
	Id string `pulumi:"id"`
	// It is a nested type which documented below.
	IkeConfigs []GetVPNConnectionVpnConnectionIkeConfig `pulumi:"ikeConfigs"`
	// It is a nested type which documented below.
	IpsecConfigs []GetVPNConnectionVpnConnectionIpsecConfig `pulumi:"ipsecConfigs"`
	// The name of the VPN Connection.
	Name string `pulumi:"name"`
	// The remarks of VPN Connection.
	Remark string `pulumi:"remark"`
	// A tag assigned to VPN Connection.
	Tag string `pulumi:"tag"`
	// The ID of VPC linked to the VPN Connection.
	VpcId string `pulumi:"vpcId"`
	// The ID of VPN Gateway.
	VpnGatewayId string `pulumi:"vpnGatewayId"`
}

// GetVPNConnectionVpnConnectionInput is an input type that accepts GetVPNConnectionVpnConnectionArgs and GetVPNConnectionVpnConnectionOutput values.
// You can construct a concrete instance of `GetVPNConnectionVpnConnectionInput` via:
//
//          GetVPNConnectionVpnConnectionArgs{...}
type GetVPNConnectionVpnConnectionInput interface {
	pulumi.Input

	ToGetVPNConnectionVpnConnectionOutput() GetVPNConnectionVpnConnectionOutput
	ToGetVPNConnectionVpnConnectionOutputWithContext(context.Context) GetVPNConnectionVpnConnectionOutput
}

type GetVPNConnectionVpnConnectionArgs struct {
	// The time of creation for VPN Connection, formatted in RFC3339 time string.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The ID of VPN Customer Gateway.
	CustomerGatewayId pulumi.StringInput `pulumi:"customerGatewayId"`
	// The ID of VPN Connection.
	Id pulumi.StringInput `pulumi:"id"`
	// It is a nested type which documented below.
	IkeConfigs GetVPNConnectionVpnConnectionIkeConfigArrayInput `pulumi:"ikeConfigs"`
	// It is a nested type which documented below.
	IpsecConfigs GetVPNConnectionVpnConnectionIpsecConfigArrayInput `pulumi:"ipsecConfigs"`
	// The name of the VPN Connection.
	Name pulumi.StringInput `pulumi:"name"`
	// The remarks of VPN Connection.
	Remark pulumi.StringInput `pulumi:"remark"`
	// A tag assigned to VPN Connection.
	Tag pulumi.StringInput `pulumi:"tag"`
	// The ID of VPC linked to the VPN Connection.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// The ID of VPN Gateway.
	VpnGatewayId pulumi.StringInput `pulumi:"vpnGatewayId"`
}

func (GetVPNConnectionVpnConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVPNConnectionVpnConnection)(nil)).Elem()
}

func (i GetVPNConnectionVpnConnectionArgs) ToGetVPNConnectionVpnConnectionOutput() GetVPNConnectionVpnConnectionOutput {
	return i.ToGetVPNConnectionVpnConnectionOutputWithContext(context.Background())
}

func (i GetVPNConnectionVpnConnectionArgs) ToGetVPNConnectionVpnConnectionOutputWithContext(ctx context.Context) GetVPNConnectionVpnConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVPNConnectionVpnConnectionOutput)
}

// GetVPNConnectionVpnConnectionArrayInput is an input type that accepts GetVPNConnectionVpnConnectionArray and GetVPNConnectionVpnConnectionArrayOutput values.
// You can construct a concrete instance of `GetVPNConnectionVpnConnectionArrayInput` via:
//
//          GetVPNConnectionVpnConnectionArray{ GetVPNConnectionVpnConnectionArgs{...} }
type GetVPNConnectionVpnConnectionArrayInput interface {
	pulumi.Input

	ToGetVPNConnectionVpnConnectionArrayOutput() GetVPNConnectionVpnConnectionArrayOutput
	ToGetVPNConnectionVpnConnectionArrayOutputWithContext(context.Context) GetVPNConnectionVpnConnectionArrayOutput
}

type GetVPNConnectionVpnConnectionArray []GetVPNConnectionVpnConnectionInput

func (GetVPNConnectionVpnConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVPNConnectionVpnConnection)(nil)).Elem()
}

func (i GetVPNConnectionVpnConnectionArray) ToGetVPNConnectionVpnConnectionArrayOutput() GetVPNConnectionVpnConnectionArrayOutput {
	return i.ToGetVPNConnectionVpnConnectionArrayOutputWithContext(context.Background())
}

func (i GetVPNConnectionVpnConnectionArray) ToGetVPNConnectionVpnConnectionArrayOutputWithContext(ctx context.Context) GetVPNConnectionVpnConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVPNConnectionVpnConnectionArrayOutput)
}

type GetVPNConnectionVpnConnectionOutput struct{ *pulumi.OutputState }

func (GetVPNConnectionVpnConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVPNConnectionVpnConnection)(nil)).Elem()
}

func (o GetVPNConnectionVpnConnectionOutput) ToGetVPNConnectionVpnConnectionOutput() GetVPNConnectionVpnConnectionOutput {
	return o
}

func (o GetVPNConnectionVpnConnectionOutput) ToGetVPNConnectionVpnConnectionOutputWithContext(ctx context.Context) GetVPNConnectionVpnConnectionOutput {
	return o
}

// The time of creation for VPN Connection, formatted in RFC3339 time string.
func (o GetVPNConnectionVpnConnectionOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetVPNConnectionVpnConnection) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The ID of VPN Customer Gateway.
func (o GetVPNConnectionVpnConnectionOutput) CustomerGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVPNConnectionVpnConnection) string { return v.CustomerGatewayId }).(pulumi.StringOutput)
}

// The ID of VPN Connection.
func (o GetVPNConnectionVpnConnectionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVPNConnectionVpnConnection) string { return v.Id }).(pulumi.StringOutput)
}

// It is a nested type which documented below.
func (o GetVPNConnectionVpnConnectionOutput) IkeConfigs() GetVPNConnectionVpnConnectionIkeConfigArrayOutput {
	return o.ApplyT(func(v GetVPNConnectionVpnConnection) []GetVPNConnectionVpnConnectionIkeConfig { return v.IkeConfigs }).(GetVPNConnectionVpnConnectionIkeConfigArrayOutput)
}

// It is a nested type which documented below.
func (o GetVPNConnectionVpnConnectionOutput) IpsecConfigs() GetVPNConnectionVpnConnectionIpsecConfigArrayOutput {
	return o.ApplyT(func(v GetVPNConnectionVpnConnection) []GetVPNConnectionVpnConnectionIpsecConfig {
		return v.IpsecConfigs
	}).(GetVPNConnectionVpnConnectionIpsecConfigArrayOutput)
}

// The name of the VPN Connection.
func (o GetVPNConnectionVpnConnectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVPNConnectionVpnConnection) string { return v.Name }).(pulumi.StringOutput)
}

// The remarks of VPN Connection.
func (o GetVPNConnectionVpnConnectionOutput) Remark() pulumi.StringOutput {
	return o.ApplyT(func(v GetVPNConnectionVpnConnection) string { return v.Remark }).(pulumi.StringOutput)
}

// A tag assigned to VPN Connection.
func (o GetVPNConnectionVpnConnectionOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v GetVPNConnectionVpnConnection) string { return v.Tag }).(pulumi.StringOutput)
}

// The ID of VPC linked to the VPN Connection.
func (o GetVPNConnectionVpnConnectionOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVPNConnectionVpnConnection) string { return v.VpcId }).(pulumi.StringOutput)
}

// The ID of VPN Gateway.
func (o GetVPNConnectionVpnConnectionOutput) VpnGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVPNConnectionVpnConnection) string { return v.VpnGatewayId }).(pulumi.StringOutput)
}

type GetVPNConnectionVpnConnectionArrayOutput struct{ *pulumi.OutputState }

func (GetVPNConnectionVpnConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVPNConnectionVpnConnection)(nil)).Elem()
}

func (o GetVPNConnectionVpnConnectionArrayOutput) ToGetVPNConnectionVpnConnectionArrayOutput() GetVPNConnectionVpnConnectionArrayOutput {
	return o
}

func (o GetVPNConnectionVpnConnectionArrayOutput) ToGetVPNConnectionVpnConnectionArrayOutputWithContext(ctx context.Context) GetVPNConnectionVpnConnectionArrayOutput {
	return o
}

func (o GetVPNConnectionVpnConnectionArrayOutput) Index(i pulumi.IntInput) GetVPNConnectionVpnConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVPNConnectionVpnConnection {
		return vs[0].([]GetVPNConnectionVpnConnection)[vs[1].(int)]
	}).(GetVPNConnectionVpnConnectionOutput)
}

type GetVPNConnectionVpnConnectionIkeConfig struct {
	// The authentication algorithm of IPSec negotiation.
	AuthenticationAlgorithm string `pulumi:"authenticationAlgorithm"`
	// The Diffie-Hellman group used by IKE negotiation.
	DhGroup string `pulumi:"dhGroup"`
	// The encryption algorithm of IPSec negotiation.
	EncryptionAlgorithm string `pulumi:"encryptionAlgorithm"`
	// The negotiation exchange mode of IKE V1 of VPN gateway.
	ExchangeMode string `pulumi:"exchangeMode"`
	// The version of the IKE protocol.
	IkeVersion string `pulumi:"ikeVersion"`
	// The identification of the VPN gateway.
	LocalId string `pulumi:"localId"`
	// The key used for authentication between the VPN gateway and the Customer gateway.
	PreSharedKey string `pulumi:"preSharedKey"`
	// The identification of the Customer gateway.
	RemoteId string `pulumi:"remoteId"`
	// The Security Association lifecycle as the result of IPSec negotiation.
	SaLifeTime int `pulumi:"saLifeTime"`
}

// GetVPNConnectionVpnConnectionIkeConfigInput is an input type that accepts GetVPNConnectionVpnConnectionIkeConfigArgs and GetVPNConnectionVpnConnectionIkeConfigOutput values.
// You can construct a concrete instance of `GetVPNConnectionVpnConnectionIkeConfigInput` via:
//
//          GetVPNConnectionVpnConnectionIkeConfigArgs{...}
type GetVPNConnectionVpnConnectionIkeConfigInput interface {
	pulumi.Input

	ToGetVPNConnectionVpnConnectionIkeConfigOutput() GetVPNConnectionVpnConnectionIkeConfigOutput
	ToGetVPNConnectionVpnConnectionIkeConfigOutputWithContext(context.Context) GetVPNConnectionVpnConnectionIkeConfigOutput
}

type GetVPNConnectionVpnConnectionIkeConfigArgs struct {
	// The authentication algorithm of IPSec negotiation.
	AuthenticationAlgorithm pulumi.StringInput `pulumi:"authenticationAlgorithm"`
	// The Diffie-Hellman group used by IKE negotiation.
	DhGroup pulumi.StringInput `pulumi:"dhGroup"`
	// The encryption algorithm of IPSec negotiation.
	EncryptionAlgorithm pulumi.StringInput `pulumi:"encryptionAlgorithm"`
	// The negotiation exchange mode of IKE V1 of VPN gateway.
	ExchangeMode pulumi.StringInput `pulumi:"exchangeMode"`
	// The version of the IKE protocol.
	IkeVersion pulumi.StringInput `pulumi:"ikeVersion"`
	// The identification of the VPN gateway.
	LocalId pulumi.StringInput `pulumi:"localId"`
	// The key used for authentication between the VPN gateway and the Customer gateway.
	PreSharedKey pulumi.StringInput `pulumi:"preSharedKey"`
	// The identification of the Customer gateway.
	RemoteId pulumi.StringInput `pulumi:"remoteId"`
	// The Security Association lifecycle as the result of IPSec negotiation.
	SaLifeTime pulumi.IntInput `pulumi:"saLifeTime"`
}

func (GetVPNConnectionVpnConnectionIkeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVPNConnectionVpnConnectionIkeConfig)(nil)).Elem()
}

func (i GetVPNConnectionVpnConnectionIkeConfigArgs) ToGetVPNConnectionVpnConnectionIkeConfigOutput() GetVPNConnectionVpnConnectionIkeConfigOutput {
	return i.ToGetVPNConnectionVpnConnectionIkeConfigOutputWithContext(context.Background())
}

func (i GetVPNConnectionVpnConnectionIkeConfigArgs) ToGetVPNConnectionVpnConnectionIkeConfigOutputWithContext(ctx context.Context) GetVPNConnectionVpnConnectionIkeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVPNConnectionVpnConnectionIkeConfigOutput)
}

// GetVPNConnectionVpnConnectionIkeConfigArrayInput is an input type that accepts GetVPNConnectionVpnConnectionIkeConfigArray and GetVPNConnectionVpnConnectionIkeConfigArrayOutput values.
// You can construct a concrete instance of `GetVPNConnectionVpnConnectionIkeConfigArrayInput` via:
//
//          GetVPNConnectionVpnConnectionIkeConfigArray{ GetVPNConnectionVpnConnectionIkeConfigArgs{...} }
type GetVPNConnectionVpnConnectionIkeConfigArrayInput interface {
	pulumi.Input

	ToGetVPNConnectionVpnConnectionIkeConfigArrayOutput() GetVPNConnectionVpnConnectionIkeConfigArrayOutput
	ToGetVPNConnectionVpnConnectionIkeConfigArrayOutputWithContext(context.Context) GetVPNConnectionVpnConnectionIkeConfigArrayOutput
}

type GetVPNConnectionVpnConnectionIkeConfigArray []GetVPNConnectionVpnConnectionIkeConfigInput

func (GetVPNConnectionVpnConnectionIkeConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVPNConnectionVpnConnectionIkeConfig)(nil)).Elem()
}

func (i GetVPNConnectionVpnConnectionIkeConfigArray) ToGetVPNConnectionVpnConnectionIkeConfigArrayOutput() GetVPNConnectionVpnConnectionIkeConfigArrayOutput {
	return i.ToGetVPNConnectionVpnConnectionIkeConfigArrayOutputWithContext(context.Background())
}

func (i GetVPNConnectionVpnConnectionIkeConfigArray) ToGetVPNConnectionVpnConnectionIkeConfigArrayOutputWithContext(ctx context.Context) GetVPNConnectionVpnConnectionIkeConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVPNConnectionVpnConnectionIkeConfigArrayOutput)
}

type GetVPNConnectionVpnConnectionIkeConfigOutput struct{ *pulumi.OutputState }

func (GetVPNConnectionVpnConnectionIkeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVPNConnectionVpnConnectionIkeConfig)(nil)).Elem()
}

func (o GetVPNConnectionVpnConnectionIkeConfigOutput) ToGetVPNConnectionVpnConnectionIkeConfigOutput() GetVPNConnectionVpnConnectionIkeConfigOutput {
	return o
}

func (o GetVPNConnectionVpnConnectionIkeConfigOutput) ToGetVPNConnectionVpnConnectionIkeConfigOutputWithContext(ctx context.Context) GetVPNConnectionVpnConnectionIkeConfigOutput {
	return o
}

// The authentication algorithm of IPSec negotiation.
func (o GetVPNConnectionVpnConnectionIkeConfigOutput) AuthenticationAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetVPNConnectionVpnConnectionIkeConfig) string { return v.AuthenticationAlgorithm }).(pulumi.StringOutput)
}

// The Diffie-Hellman group used by IKE negotiation.
func (o GetVPNConnectionVpnConnectionIkeConfigOutput) DhGroup() pulumi.StringOutput {
	return o.ApplyT(func(v GetVPNConnectionVpnConnectionIkeConfig) string { return v.DhGroup }).(pulumi.StringOutput)
}

// The encryption algorithm of IPSec negotiation.
func (o GetVPNConnectionVpnConnectionIkeConfigOutput) EncryptionAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetVPNConnectionVpnConnectionIkeConfig) string { return v.EncryptionAlgorithm }).(pulumi.StringOutput)
}

// The negotiation exchange mode of IKE V1 of VPN gateway.
func (o GetVPNConnectionVpnConnectionIkeConfigOutput) ExchangeMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetVPNConnectionVpnConnectionIkeConfig) string { return v.ExchangeMode }).(pulumi.StringOutput)
}

// The version of the IKE protocol.
func (o GetVPNConnectionVpnConnectionIkeConfigOutput) IkeVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetVPNConnectionVpnConnectionIkeConfig) string { return v.IkeVersion }).(pulumi.StringOutput)
}

// The identification of the VPN gateway.
func (o GetVPNConnectionVpnConnectionIkeConfigOutput) LocalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVPNConnectionVpnConnectionIkeConfig) string { return v.LocalId }).(pulumi.StringOutput)
}

// The key used for authentication between the VPN gateway and the Customer gateway.
func (o GetVPNConnectionVpnConnectionIkeConfigOutput) PreSharedKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetVPNConnectionVpnConnectionIkeConfig) string { return v.PreSharedKey }).(pulumi.StringOutput)
}

// The identification of the Customer gateway.
func (o GetVPNConnectionVpnConnectionIkeConfigOutput) RemoteId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVPNConnectionVpnConnectionIkeConfig) string { return v.RemoteId }).(pulumi.StringOutput)
}

// The Security Association lifecycle as the result of IPSec negotiation.
func (o GetVPNConnectionVpnConnectionIkeConfigOutput) SaLifeTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetVPNConnectionVpnConnectionIkeConfig) int { return v.SaLifeTime }).(pulumi.IntOutput)
}

type GetVPNConnectionVpnConnectionIkeConfigArrayOutput struct{ *pulumi.OutputState }

func (GetVPNConnectionVpnConnectionIkeConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVPNConnectionVpnConnectionIkeConfig)(nil)).Elem()
}

func (o GetVPNConnectionVpnConnectionIkeConfigArrayOutput) ToGetVPNConnectionVpnConnectionIkeConfigArrayOutput() GetVPNConnectionVpnConnectionIkeConfigArrayOutput {
	return o
}

func (o GetVPNConnectionVpnConnectionIkeConfigArrayOutput) ToGetVPNConnectionVpnConnectionIkeConfigArrayOutputWithContext(ctx context.Context) GetVPNConnectionVpnConnectionIkeConfigArrayOutput {
	return o
}

func (o GetVPNConnectionVpnConnectionIkeConfigArrayOutput) Index(i pulumi.IntInput) GetVPNConnectionVpnConnectionIkeConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVPNConnectionVpnConnectionIkeConfig {
		return vs[0].([]GetVPNConnectionVpnConnectionIkeConfig)[vs[1].(int)]
	}).(GetVPNConnectionVpnConnectionIkeConfigOutput)
}

type GetVPNConnectionVpnConnectionIpsecConfig struct {
	// The authentication algorithm of IPSec negotiation.
	AuthenticationAlgorithm string `pulumi:"authenticationAlgorithm"`
	// The encryption algorithm of IPSec negotiation.
	EncryptionAlgorithm string `pulumi:"encryptionAlgorithm"`
	// The id list of Local subnet.
	LocalSubnetIds []string `pulumi:"localSubnetIds"`
	// Whether the PFS of IPSec negotiation is on or off, `disable` as off, The Diffie-Hellman group as open.
	PfsDhGroup string `pulumi:"pfsDhGroup"`
	// The security protocol of IPSec negotiation.
	Protocol string `pulumi:"protocol"`
	// The ip address list of remote subnet.
	RemoteSubnets []string `pulumi:"remoteSubnets"`
	// The Security Association lifecycle as the result of IPSec negotiation.
	SaLifeTime int `pulumi:"saLifeTime"`
	// The Security Association lifecycle in bytes as the result of IPSec negotiation.
	SaLifeTimeBytes int `pulumi:"saLifeTimeBytes"`
}

// GetVPNConnectionVpnConnectionIpsecConfigInput is an input type that accepts GetVPNConnectionVpnConnectionIpsecConfigArgs and GetVPNConnectionVpnConnectionIpsecConfigOutput values.
// You can construct a concrete instance of `GetVPNConnectionVpnConnectionIpsecConfigInput` via:
//
//          GetVPNConnectionVpnConnectionIpsecConfigArgs{...}
type GetVPNConnectionVpnConnectionIpsecConfigInput interface {
	pulumi.Input

	ToGetVPNConnectionVpnConnectionIpsecConfigOutput() GetVPNConnectionVpnConnectionIpsecConfigOutput
	ToGetVPNConnectionVpnConnectionIpsecConfigOutputWithContext(context.Context) GetVPNConnectionVpnConnectionIpsecConfigOutput
}

type GetVPNConnectionVpnConnectionIpsecConfigArgs struct {
	// The authentication algorithm of IPSec negotiation.
	AuthenticationAlgorithm pulumi.StringInput `pulumi:"authenticationAlgorithm"`
	// The encryption algorithm of IPSec negotiation.
	EncryptionAlgorithm pulumi.StringInput `pulumi:"encryptionAlgorithm"`
	// The id list of Local subnet.
	LocalSubnetIds pulumi.StringArrayInput `pulumi:"localSubnetIds"`
	// Whether the PFS of IPSec negotiation is on or off, `disable` as off, The Diffie-Hellman group as open.
	PfsDhGroup pulumi.StringInput `pulumi:"pfsDhGroup"`
	// The security protocol of IPSec negotiation.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The ip address list of remote subnet.
	RemoteSubnets pulumi.StringArrayInput `pulumi:"remoteSubnets"`
	// The Security Association lifecycle as the result of IPSec negotiation.
	SaLifeTime pulumi.IntInput `pulumi:"saLifeTime"`
	// The Security Association lifecycle in bytes as the result of IPSec negotiation.
	SaLifeTimeBytes pulumi.IntInput `pulumi:"saLifeTimeBytes"`
}

func (GetVPNConnectionVpnConnectionIpsecConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVPNConnectionVpnConnectionIpsecConfig)(nil)).Elem()
}

func (i GetVPNConnectionVpnConnectionIpsecConfigArgs) ToGetVPNConnectionVpnConnectionIpsecConfigOutput() GetVPNConnectionVpnConnectionIpsecConfigOutput {
	return i.ToGetVPNConnectionVpnConnectionIpsecConfigOutputWithContext(context.Background())
}

func (i GetVPNConnectionVpnConnectionIpsecConfigArgs) ToGetVPNConnectionVpnConnectionIpsecConfigOutputWithContext(ctx context.Context) GetVPNConnectionVpnConnectionIpsecConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVPNConnectionVpnConnectionIpsecConfigOutput)
}

// GetVPNConnectionVpnConnectionIpsecConfigArrayInput is an input type that accepts GetVPNConnectionVpnConnectionIpsecConfigArray and GetVPNConnectionVpnConnectionIpsecConfigArrayOutput values.
// You can construct a concrete instance of `GetVPNConnectionVpnConnectionIpsecConfigArrayInput` via:
//
//          GetVPNConnectionVpnConnectionIpsecConfigArray{ GetVPNConnectionVpnConnectionIpsecConfigArgs{...} }
type GetVPNConnectionVpnConnectionIpsecConfigArrayInput interface {
	pulumi.Input

	ToGetVPNConnectionVpnConnectionIpsecConfigArrayOutput() GetVPNConnectionVpnConnectionIpsecConfigArrayOutput
	ToGetVPNConnectionVpnConnectionIpsecConfigArrayOutputWithContext(context.Context) GetVPNConnectionVpnConnectionIpsecConfigArrayOutput
}

type GetVPNConnectionVpnConnectionIpsecConfigArray []GetVPNConnectionVpnConnectionIpsecConfigInput

func (GetVPNConnectionVpnConnectionIpsecConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVPNConnectionVpnConnectionIpsecConfig)(nil)).Elem()
}

func (i GetVPNConnectionVpnConnectionIpsecConfigArray) ToGetVPNConnectionVpnConnectionIpsecConfigArrayOutput() GetVPNConnectionVpnConnectionIpsecConfigArrayOutput {
	return i.ToGetVPNConnectionVpnConnectionIpsecConfigArrayOutputWithContext(context.Background())
}

func (i GetVPNConnectionVpnConnectionIpsecConfigArray) ToGetVPNConnectionVpnConnectionIpsecConfigArrayOutputWithContext(ctx context.Context) GetVPNConnectionVpnConnectionIpsecConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVPNConnectionVpnConnectionIpsecConfigArrayOutput)
}

type GetVPNConnectionVpnConnectionIpsecConfigOutput struct{ *pulumi.OutputState }

func (GetVPNConnectionVpnConnectionIpsecConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVPNConnectionVpnConnectionIpsecConfig)(nil)).Elem()
}

func (o GetVPNConnectionVpnConnectionIpsecConfigOutput) ToGetVPNConnectionVpnConnectionIpsecConfigOutput() GetVPNConnectionVpnConnectionIpsecConfigOutput {
	return o
}

func (o GetVPNConnectionVpnConnectionIpsecConfigOutput) ToGetVPNConnectionVpnConnectionIpsecConfigOutputWithContext(ctx context.Context) GetVPNConnectionVpnConnectionIpsecConfigOutput {
	return o
}

// The authentication algorithm of IPSec negotiation.
func (o GetVPNConnectionVpnConnectionIpsecConfigOutput) AuthenticationAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetVPNConnectionVpnConnectionIpsecConfig) string { return v.AuthenticationAlgorithm }).(pulumi.StringOutput)
}

// The encryption algorithm of IPSec negotiation.
func (o GetVPNConnectionVpnConnectionIpsecConfigOutput) EncryptionAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetVPNConnectionVpnConnectionIpsecConfig) string { return v.EncryptionAlgorithm }).(pulumi.StringOutput)
}

// The id list of Local subnet.
func (o GetVPNConnectionVpnConnectionIpsecConfigOutput) LocalSubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVPNConnectionVpnConnectionIpsecConfig) []string { return v.LocalSubnetIds }).(pulumi.StringArrayOutput)
}

// Whether the PFS of IPSec negotiation is on or off, `disable` as off, The Diffie-Hellman group as open.
func (o GetVPNConnectionVpnConnectionIpsecConfigOutput) PfsDhGroup() pulumi.StringOutput {
	return o.ApplyT(func(v GetVPNConnectionVpnConnectionIpsecConfig) string { return v.PfsDhGroup }).(pulumi.StringOutput)
}

// The security protocol of IPSec negotiation.
func (o GetVPNConnectionVpnConnectionIpsecConfigOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetVPNConnectionVpnConnectionIpsecConfig) string { return v.Protocol }).(pulumi.StringOutput)
}

// The ip address list of remote subnet.
func (o GetVPNConnectionVpnConnectionIpsecConfigOutput) RemoteSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVPNConnectionVpnConnectionIpsecConfig) []string { return v.RemoteSubnets }).(pulumi.StringArrayOutput)
}

// The Security Association lifecycle as the result of IPSec negotiation.
func (o GetVPNConnectionVpnConnectionIpsecConfigOutput) SaLifeTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetVPNConnectionVpnConnectionIpsecConfig) int { return v.SaLifeTime }).(pulumi.IntOutput)
}

// The Security Association lifecycle in bytes as the result of IPSec negotiation.
func (o GetVPNConnectionVpnConnectionIpsecConfigOutput) SaLifeTimeBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetVPNConnectionVpnConnectionIpsecConfig) int { return v.SaLifeTimeBytes }).(pulumi.IntOutput)
}

type GetVPNConnectionVpnConnectionIpsecConfigArrayOutput struct{ *pulumi.OutputState }

func (GetVPNConnectionVpnConnectionIpsecConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVPNConnectionVpnConnectionIpsecConfig)(nil)).Elem()
}

func (o GetVPNConnectionVpnConnectionIpsecConfigArrayOutput) ToGetVPNConnectionVpnConnectionIpsecConfigArrayOutput() GetVPNConnectionVpnConnectionIpsecConfigArrayOutput {
	return o
}

func (o GetVPNConnectionVpnConnectionIpsecConfigArrayOutput) ToGetVPNConnectionVpnConnectionIpsecConfigArrayOutputWithContext(ctx context.Context) GetVPNConnectionVpnConnectionIpsecConfigArrayOutput {
	return o
}

func (o GetVPNConnectionVpnConnectionIpsecConfigArrayOutput) Index(i pulumi.IntInput) GetVPNConnectionVpnConnectionIpsecConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVPNConnectionVpnConnectionIpsecConfig {
		return vs[0].([]GetVPNConnectionVpnConnectionIpsecConfig)[vs[1].(int)]
	}).(GetVPNConnectionVpnConnectionIpsecConfigOutput)
}

type GetVPNCustomerGatewayVpnCustomerGateway struct {
	// The time of creation for VPN Customer Gateway, formatted in RFC3339 time string.
	CreateTime string `pulumi:"createTime"`
	// The ID of VPN Customer Gateway.
	Id string `pulumi:"id"`
	// The ip address of the VPN Customer Gateway.
	IpAddress string `pulumi:"ipAddress"`
	// The name of the VPN Customer Gateway.
	Name string `pulumi:"name"`
	// The remarks of VPN Customer Gateway.
	Remark string `pulumi:"remark"`
	// A tag assigned to VPN Customer Gateway.
	Tag string `pulumi:"tag"`
}

// GetVPNCustomerGatewayVpnCustomerGatewayInput is an input type that accepts GetVPNCustomerGatewayVpnCustomerGatewayArgs and GetVPNCustomerGatewayVpnCustomerGatewayOutput values.
// You can construct a concrete instance of `GetVPNCustomerGatewayVpnCustomerGatewayInput` via:
//
//          GetVPNCustomerGatewayVpnCustomerGatewayArgs{...}
type GetVPNCustomerGatewayVpnCustomerGatewayInput interface {
	pulumi.Input

	ToGetVPNCustomerGatewayVpnCustomerGatewayOutput() GetVPNCustomerGatewayVpnCustomerGatewayOutput
	ToGetVPNCustomerGatewayVpnCustomerGatewayOutputWithContext(context.Context) GetVPNCustomerGatewayVpnCustomerGatewayOutput
}

type GetVPNCustomerGatewayVpnCustomerGatewayArgs struct {
	// The time of creation for VPN Customer Gateway, formatted in RFC3339 time string.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The ID of VPN Customer Gateway.
	Id pulumi.StringInput `pulumi:"id"`
	// The ip address of the VPN Customer Gateway.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// The name of the VPN Customer Gateway.
	Name pulumi.StringInput `pulumi:"name"`
	// The remarks of VPN Customer Gateway.
	Remark pulumi.StringInput `pulumi:"remark"`
	// A tag assigned to VPN Customer Gateway.
	Tag pulumi.StringInput `pulumi:"tag"`
}

func (GetVPNCustomerGatewayVpnCustomerGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVPNCustomerGatewayVpnCustomerGateway)(nil)).Elem()
}

func (i GetVPNCustomerGatewayVpnCustomerGatewayArgs) ToGetVPNCustomerGatewayVpnCustomerGatewayOutput() GetVPNCustomerGatewayVpnCustomerGatewayOutput {
	return i.ToGetVPNCustomerGatewayVpnCustomerGatewayOutputWithContext(context.Background())
}

func (i GetVPNCustomerGatewayVpnCustomerGatewayArgs) ToGetVPNCustomerGatewayVpnCustomerGatewayOutputWithContext(ctx context.Context) GetVPNCustomerGatewayVpnCustomerGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVPNCustomerGatewayVpnCustomerGatewayOutput)
}

// GetVPNCustomerGatewayVpnCustomerGatewayArrayInput is an input type that accepts GetVPNCustomerGatewayVpnCustomerGatewayArray and GetVPNCustomerGatewayVpnCustomerGatewayArrayOutput values.
// You can construct a concrete instance of `GetVPNCustomerGatewayVpnCustomerGatewayArrayInput` via:
//
//          GetVPNCustomerGatewayVpnCustomerGatewayArray{ GetVPNCustomerGatewayVpnCustomerGatewayArgs{...} }
type GetVPNCustomerGatewayVpnCustomerGatewayArrayInput interface {
	pulumi.Input

	ToGetVPNCustomerGatewayVpnCustomerGatewayArrayOutput() GetVPNCustomerGatewayVpnCustomerGatewayArrayOutput
	ToGetVPNCustomerGatewayVpnCustomerGatewayArrayOutputWithContext(context.Context) GetVPNCustomerGatewayVpnCustomerGatewayArrayOutput
}

type GetVPNCustomerGatewayVpnCustomerGatewayArray []GetVPNCustomerGatewayVpnCustomerGatewayInput

func (GetVPNCustomerGatewayVpnCustomerGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVPNCustomerGatewayVpnCustomerGateway)(nil)).Elem()
}

func (i GetVPNCustomerGatewayVpnCustomerGatewayArray) ToGetVPNCustomerGatewayVpnCustomerGatewayArrayOutput() GetVPNCustomerGatewayVpnCustomerGatewayArrayOutput {
	return i.ToGetVPNCustomerGatewayVpnCustomerGatewayArrayOutputWithContext(context.Background())
}

func (i GetVPNCustomerGatewayVpnCustomerGatewayArray) ToGetVPNCustomerGatewayVpnCustomerGatewayArrayOutputWithContext(ctx context.Context) GetVPNCustomerGatewayVpnCustomerGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVPNCustomerGatewayVpnCustomerGatewayArrayOutput)
}

type GetVPNCustomerGatewayVpnCustomerGatewayOutput struct{ *pulumi.OutputState }

func (GetVPNCustomerGatewayVpnCustomerGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVPNCustomerGatewayVpnCustomerGateway)(nil)).Elem()
}

func (o GetVPNCustomerGatewayVpnCustomerGatewayOutput) ToGetVPNCustomerGatewayVpnCustomerGatewayOutput() GetVPNCustomerGatewayVpnCustomerGatewayOutput {
	return o
}

func (o GetVPNCustomerGatewayVpnCustomerGatewayOutput) ToGetVPNCustomerGatewayVpnCustomerGatewayOutputWithContext(ctx context.Context) GetVPNCustomerGatewayVpnCustomerGatewayOutput {
	return o
}

// The time of creation for VPN Customer Gateway, formatted in RFC3339 time string.
func (o GetVPNCustomerGatewayVpnCustomerGatewayOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetVPNCustomerGatewayVpnCustomerGateway) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The ID of VPN Customer Gateway.
func (o GetVPNCustomerGatewayVpnCustomerGatewayOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVPNCustomerGatewayVpnCustomerGateway) string { return v.Id }).(pulumi.StringOutput)
}

// The ip address of the VPN Customer Gateway.
func (o GetVPNCustomerGatewayVpnCustomerGatewayOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetVPNCustomerGatewayVpnCustomerGateway) string { return v.IpAddress }).(pulumi.StringOutput)
}

// The name of the VPN Customer Gateway.
func (o GetVPNCustomerGatewayVpnCustomerGatewayOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVPNCustomerGatewayVpnCustomerGateway) string { return v.Name }).(pulumi.StringOutput)
}

// The remarks of VPN Customer Gateway.
func (o GetVPNCustomerGatewayVpnCustomerGatewayOutput) Remark() pulumi.StringOutput {
	return o.ApplyT(func(v GetVPNCustomerGatewayVpnCustomerGateway) string { return v.Remark }).(pulumi.StringOutput)
}

// A tag assigned to VPN Customer Gateway.
func (o GetVPNCustomerGatewayVpnCustomerGatewayOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v GetVPNCustomerGatewayVpnCustomerGateway) string { return v.Tag }).(pulumi.StringOutput)
}

type GetVPNCustomerGatewayVpnCustomerGatewayArrayOutput struct{ *pulumi.OutputState }

func (GetVPNCustomerGatewayVpnCustomerGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVPNCustomerGatewayVpnCustomerGateway)(nil)).Elem()
}

func (o GetVPNCustomerGatewayVpnCustomerGatewayArrayOutput) ToGetVPNCustomerGatewayVpnCustomerGatewayArrayOutput() GetVPNCustomerGatewayVpnCustomerGatewayArrayOutput {
	return o
}

func (o GetVPNCustomerGatewayVpnCustomerGatewayArrayOutput) ToGetVPNCustomerGatewayVpnCustomerGatewayArrayOutputWithContext(ctx context.Context) GetVPNCustomerGatewayVpnCustomerGatewayArrayOutput {
	return o
}

func (o GetVPNCustomerGatewayVpnCustomerGatewayArrayOutput) Index(i pulumi.IntInput) GetVPNCustomerGatewayVpnCustomerGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVPNCustomerGatewayVpnCustomerGateway {
		return vs[0].([]GetVPNCustomerGatewayVpnCustomerGateway)[vs[1].(int)]
	}).(GetVPNCustomerGatewayVpnCustomerGatewayOutput)
}

type GetVPNGatewayVpnGateway struct {
	// Whether to renew an VPN Gateway automatically or not.
	AutoRenew bool `pulumi:"autoRenew"`
	// The charge type of VPN Gateway.
	ChargeType string `pulumi:"chargeType"`
	// The time of creation for VPN Gateway, formatted in RFC3339 time string.
	CreateTime string `pulumi:"createTime"`
	// The expiration time for VPN Gateway, formatted in RFC3339 time string.
	ExpireTime string `pulumi:"expireTime"`
	// The type of the VPN Gateway.
	Grade string `pulumi:"grade"`
	// The ID of VPN Gateway.
	Id string `pulumi:"id"`
	// It is a nested type which documented below.
	IpSets []GetVPNGatewayVpnGatewayIpSet `pulumi:"ipSets"`
	// The name of the VPN Gateway.
	Name string `pulumi:"name"`
	// The remarks of VPN Gateway.
	Remark string `pulumi:"remark"`
	// A tag assigned to VPN Gateway.
	Tag string `pulumi:"tag"`
	// The ID of VPC linked to the VPN Gateway.
	VpcId string `pulumi:"vpcId"`
}

// GetVPNGatewayVpnGatewayInput is an input type that accepts GetVPNGatewayVpnGatewayArgs and GetVPNGatewayVpnGatewayOutput values.
// You can construct a concrete instance of `GetVPNGatewayVpnGatewayInput` via:
//
//          GetVPNGatewayVpnGatewayArgs{...}
type GetVPNGatewayVpnGatewayInput interface {
	pulumi.Input

	ToGetVPNGatewayVpnGatewayOutput() GetVPNGatewayVpnGatewayOutput
	ToGetVPNGatewayVpnGatewayOutputWithContext(context.Context) GetVPNGatewayVpnGatewayOutput
}

type GetVPNGatewayVpnGatewayArgs struct {
	// Whether to renew an VPN Gateway automatically or not.
	AutoRenew pulumi.BoolInput `pulumi:"autoRenew"`
	// The charge type of VPN Gateway.
	ChargeType pulumi.StringInput `pulumi:"chargeType"`
	// The time of creation for VPN Gateway, formatted in RFC3339 time string.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The expiration time for VPN Gateway, formatted in RFC3339 time string.
	ExpireTime pulumi.StringInput `pulumi:"expireTime"`
	// The type of the VPN Gateway.
	Grade pulumi.StringInput `pulumi:"grade"`
	// The ID of VPN Gateway.
	Id pulumi.StringInput `pulumi:"id"`
	// It is a nested type which documented below.
	IpSets GetVPNGatewayVpnGatewayIpSetArrayInput `pulumi:"ipSets"`
	// The name of the VPN Gateway.
	Name pulumi.StringInput `pulumi:"name"`
	// The remarks of VPN Gateway.
	Remark pulumi.StringInput `pulumi:"remark"`
	// A tag assigned to VPN Gateway.
	Tag pulumi.StringInput `pulumi:"tag"`
	// The ID of VPC linked to the VPN Gateway.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetVPNGatewayVpnGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVPNGatewayVpnGateway)(nil)).Elem()
}

func (i GetVPNGatewayVpnGatewayArgs) ToGetVPNGatewayVpnGatewayOutput() GetVPNGatewayVpnGatewayOutput {
	return i.ToGetVPNGatewayVpnGatewayOutputWithContext(context.Background())
}

func (i GetVPNGatewayVpnGatewayArgs) ToGetVPNGatewayVpnGatewayOutputWithContext(ctx context.Context) GetVPNGatewayVpnGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVPNGatewayVpnGatewayOutput)
}

// GetVPNGatewayVpnGatewayArrayInput is an input type that accepts GetVPNGatewayVpnGatewayArray and GetVPNGatewayVpnGatewayArrayOutput values.
// You can construct a concrete instance of `GetVPNGatewayVpnGatewayArrayInput` via:
//
//          GetVPNGatewayVpnGatewayArray{ GetVPNGatewayVpnGatewayArgs{...} }
type GetVPNGatewayVpnGatewayArrayInput interface {
	pulumi.Input

	ToGetVPNGatewayVpnGatewayArrayOutput() GetVPNGatewayVpnGatewayArrayOutput
	ToGetVPNGatewayVpnGatewayArrayOutputWithContext(context.Context) GetVPNGatewayVpnGatewayArrayOutput
}

type GetVPNGatewayVpnGatewayArray []GetVPNGatewayVpnGatewayInput

func (GetVPNGatewayVpnGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVPNGatewayVpnGateway)(nil)).Elem()
}

func (i GetVPNGatewayVpnGatewayArray) ToGetVPNGatewayVpnGatewayArrayOutput() GetVPNGatewayVpnGatewayArrayOutput {
	return i.ToGetVPNGatewayVpnGatewayArrayOutputWithContext(context.Background())
}

func (i GetVPNGatewayVpnGatewayArray) ToGetVPNGatewayVpnGatewayArrayOutputWithContext(ctx context.Context) GetVPNGatewayVpnGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVPNGatewayVpnGatewayArrayOutput)
}

type GetVPNGatewayVpnGatewayOutput struct{ *pulumi.OutputState }

func (GetVPNGatewayVpnGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVPNGatewayVpnGateway)(nil)).Elem()
}

func (o GetVPNGatewayVpnGatewayOutput) ToGetVPNGatewayVpnGatewayOutput() GetVPNGatewayVpnGatewayOutput {
	return o
}

func (o GetVPNGatewayVpnGatewayOutput) ToGetVPNGatewayVpnGatewayOutputWithContext(ctx context.Context) GetVPNGatewayVpnGatewayOutput {
	return o
}

// Whether to renew an VPN Gateway automatically or not.
func (o GetVPNGatewayVpnGatewayOutput) AutoRenew() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVPNGatewayVpnGateway) bool { return v.AutoRenew }).(pulumi.BoolOutput)
}

// The charge type of VPN Gateway.
func (o GetVPNGatewayVpnGatewayOutput) ChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetVPNGatewayVpnGateway) string { return v.ChargeType }).(pulumi.StringOutput)
}

// The time of creation for VPN Gateway, formatted in RFC3339 time string.
func (o GetVPNGatewayVpnGatewayOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetVPNGatewayVpnGateway) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The expiration time for VPN Gateway, formatted in RFC3339 time string.
func (o GetVPNGatewayVpnGatewayOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetVPNGatewayVpnGateway) string { return v.ExpireTime }).(pulumi.StringOutput)
}

// The type of the VPN Gateway.
func (o GetVPNGatewayVpnGatewayOutput) Grade() pulumi.StringOutput {
	return o.ApplyT(func(v GetVPNGatewayVpnGateway) string { return v.Grade }).(pulumi.StringOutput)
}

// The ID of VPN Gateway.
func (o GetVPNGatewayVpnGatewayOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVPNGatewayVpnGateway) string { return v.Id }).(pulumi.StringOutput)
}

// It is a nested type which documented below.
func (o GetVPNGatewayVpnGatewayOutput) IpSets() GetVPNGatewayVpnGatewayIpSetArrayOutput {
	return o.ApplyT(func(v GetVPNGatewayVpnGateway) []GetVPNGatewayVpnGatewayIpSet { return v.IpSets }).(GetVPNGatewayVpnGatewayIpSetArrayOutput)
}

// The name of the VPN Gateway.
func (o GetVPNGatewayVpnGatewayOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVPNGatewayVpnGateway) string { return v.Name }).(pulumi.StringOutput)
}

// The remarks of VPN Gateway.
func (o GetVPNGatewayVpnGatewayOutput) Remark() pulumi.StringOutput {
	return o.ApplyT(func(v GetVPNGatewayVpnGateway) string { return v.Remark }).(pulumi.StringOutput)
}

// A tag assigned to VPN Gateway.
func (o GetVPNGatewayVpnGatewayOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v GetVPNGatewayVpnGateway) string { return v.Tag }).(pulumi.StringOutput)
}

// The ID of VPC linked to the VPN Gateway.
func (o GetVPNGatewayVpnGatewayOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVPNGatewayVpnGateway) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetVPNGatewayVpnGatewayArrayOutput struct{ *pulumi.OutputState }

func (GetVPNGatewayVpnGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVPNGatewayVpnGateway)(nil)).Elem()
}

func (o GetVPNGatewayVpnGatewayArrayOutput) ToGetVPNGatewayVpnGatewayArrayOutput() GetVPNGatewayVpnGatewayArrayOutput {
	return o
}

func (o GetVPNGatewayVpnGatewayArrayOutput) ToGetVPNGatewayVpnGatewayArrayOutputWithContext(ctx context.Context) GetVPNGatewayVpnGatewayArrayOutput {
	return o
}

func (o GetVPNGatewayVpnGatewayArrayOutput) Index(i pulumi.IntInput) GetVPNGatewayVpnGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVPNGatewayVpnGateway {
		return vs[0].([]GetVPNGatewayVpnGateway)[vs[1].(int)]
	}).(GetVPNGatewayVpnGatewayOutput)
}

type GetVPNGatewayVpnGatewayIpSet struct {
	// Type of Elastic IP routes.
	InternetType string `pulumi:"internetType"`
	// Elastic IP address.
	Ip string `pulumi:"ip"`
}

// GetVPNGatewayVpnGatewayIpSetInput is an input type that accepts GetVPNGatewayVpnGatewayIpSetArgs and GetVPNGatewayVpnGatewayIpSetOutput values.
// You can construct a concrete instance of `GetVPNGatewayVpnGatewayIpSetInput` via:
//
//          GetVPNGatewayVpnGatewayIpSetArgs{...}
type GetVPNGatewayVpnGatewayIpSetInput interface {
	pulumi.Input

	ToGetVPNGatewayVpnGatewayIpSetOutput() GetVPNGatewayVpnGatewayIpSetOutput
	ToGetVPNGatewayVpnGatewayIpSetOutputWithContext(context.Context) GetVPNGatewayVpnGatewayIpSetOutput
}

type GetVPNGatewayVpnGatewayIpSetArgs struct {
	// Type of Elastic IP routes.
	InternetType pulumi.StringInput `pulumi:"internetType"`
	// Elastic IP address.
	Ip pulumi.StringInput `pulumi:"ip"`
}

func (GetVPNGatewayVpnGatewayIpSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVPNGatewayVpnGatewayIpSet)(nil)).Elem()
}

func (i GetVPNGatewayVpnGatewayIpSetArgs) ToGetVPNGatewayVpnGatewayIpSetOutput() GetVPNGatewayVpnGatewayIpSetOutput {
	return i.ToGetVPNGatewayVpnGatewayIpSetOutputWithContext(context.Background())
}

func (i GetVPNGatewayVpnGatewayIpSetArgs) ToGetVPNGatewayVpnGatewayIpSetOutputWithContext(ctx context.Context) GetVPNGatewayVpnGatewayIpSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVPNGatewayVpnGatewayIpSetOutput)
}

// GetVPNGatewayVpnGatewayIpSetArrayInput is an input type that accepts GetVPNGatewayVpnGatewayIpSetArray and GetVPNGatewayVpnGatewayIpSetArrayOutput values.
// You can construct a concrete instance of `GetVPNGatewayVpnGatewayIpSetArrayInput` via:
//
//          GetVPNGatewayVpnGatewayIpSetArray{ GetVPNGatewayVpnGatewayIpSetArgs{...} }
type GetVPNGatewayVpnGatewayIpSetArrayInput interface {
	pulumi.Input

	ToGetVPNGatewayVpnGatewayIpSetArrayOutput() GetVPNGatewayVpnGatewayIpSetArrayOutput
	ToGetVPNGatewayVpnGatewayIpSetArrayOutputWithContext(context.Context) GetVPNGatewayVpnGatewayIpSetArrayOutput
}

type GetVPNGatewayVpnGatewayIpSetArray []GetVPNGatewayVpnGatewayIpSetInput

func (GetVPNGatewayVpnGatewayIpSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVPNGatewayVpnGatewayIpSet)(nil)).Elem()
}

func (i GetVPNGatewayVpnGatewayIpSetArray) ToGetVPNGatewayVpnGatewayIpSetArrayOutput() GetVPNGatewayVpnGatewayIpSetArrayOutput {
	return i.ToGetVPNGatewayVpnGatewayIpSetArrayOutputWithContext(context.Background())
}

func (i GetVPNGatewayVpnGatewayIpSetArray) ToGetVPNGatewayVpnGatewayIpSetArrayOutputWithContext(ctx context.Context) GetVPNGatewayVpnGatewayIpSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVPNGatewayVpnGatewayIpSetArrayOutput)
}

type GetVPNGatewayVpnGatewayIpSetOutput struct{ *pulumi.OutputState }

func (GetVPNGatewayVpnGatewayIpSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVPNGatewayVpnGatewayIpSet)(nil)).Elem()
}

func (o GetVPNGatewayVpnGatewayIpSetOutput) ToGetVPNGatewayVpnGatewayIpSetOutput() GetVPNGatewayVpnGatewayIpSetOutput {
	return o
}

func (o GetVPNGatewayVpnGatewayIpSetOutput) ToGetVPNGatewayVpnGatewayIpSetOutputWithContext(ctx context.Context) GetVPNGatewayVpnGatewayIpSetOutput {
	return o
}

// Type of Elastic IP routes.
func (o GetVPNGatewayVpnGatewayIpSetOutput) InternetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetVPNGatewayVpnGatewayIpSet) string { return v.InternetType }).(pulumi.StringOutput)
}

// Elastic IP address.
func (o GetVPNGatewayVpnGatewayIpSetOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetVPNGatewayVpnGatewayIpSet) string { return v.Ip }).(pulumi.StringOutput)
}

type GetVPNGatewayVpnGatewayIpSetArrayOutput struct{ *pulumi.OutputState }

func (GetVPNGatewayVpnGatewayIpSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVPNGatewayVpnGatewayIpSet)(nil)).Elem()
}

func (o GetVPNGatewayVpnGatewayIpSetArrayOutput) ToGetVPNGatewayVpnGatewayIpSetArrayOutput() GetVPNGatewayVpnGatewayIpSetArrayOutput {
	return o
}

func (o GetVPNGatewayVpnGatewayIpSetArrayOutput) ToGetVPNGatewayVpnGatewayIpSetArrayOutputWithContext(ctx context.Context) GetVPNGatewayVpnGatewayIpSetArrayOutput {
	return o
}

func (o GetVPNGatewayVpnGatewayIpSetArrayOutput) Index(i pulumi.IntInput) GetVPNGatewayVpnGatewayIpSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVPNGatewayVpnGatewayIpSet {
		return vs[0].([]GetVPNGatewayVpnGatewayIpSet)[vs[1].(int)]
	}).(GetVPNGatewayVpnGatewayIpSetOutput)
}

func init() {
	pulumi.RegisterOutputType(VPNConnectionIkeConfigOutput{})
	pulumi.RegisterOutputType(VPNConnectionIkeConfigPtrOutput{})
	pulumi.RegisterOutputType(VPNConnectionIpsecConfigOutput{})
	pulumi.RegisterOutputType(VPNConnectionIpsecConfigPtrOutput{})
	pulumi.RegisterOutputType(GetVPNConnectionVpnConnectionOutput{})
	pulumi.RegisterOutputType(GetVPNConnectionVpnConnectionArrayOutput{})
	pulumi.RegisterOutputType(GetVPNConnectionVpnConnectionIkeConfigOutput{})
	pulumi.RegisterOutputType(GetVPNConnectionVpnConnectionIkeConfigArrayOutput{})
	pulumi.RegisterOutputType(GetVPNConnectionVpnConnectionIpsecConfigOutput{})
	pulumi.RegisterOutputType(GetVPNConnectionVpnConnectionIpsecConfigArrayOutput{})
	pulumi.RegisterOutputType(GetVPNCustomerGatewayVpnCustomerGatewayOutput{})
	pulumi.RegisterOutputType(GetVPNCustomerGatewayVpnCustomerGatewayArrayOutput{})
	pulumi.RegisterOutputType(GetVPNGatewayVpnGatewayOutput{})
	pulumi.RegisterOutputType(GetVPNGatewayVpnGatewayArrayOutput{})
	pulumi.RegisterOutputType(GetVPNGatewayVpnGatewayIpSetOutput{})
	pulumi.RegisterOutputType(GetVPNGatewayVpnGatewayIpSetArrayOutput{})
}
