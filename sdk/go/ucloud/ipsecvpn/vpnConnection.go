// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package ipsecvpn

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a IPSec VPN Gateway Connection resource.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-ucloud/blob/master/website/docs/r/vpn_connection.html.markdown.
type VpnConnection struct {
	pulumi.CustomResourceState

	// The creation time for VPN Gateway Connection, formatted in RFC3339 time string.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The grade of the VPN Gateway
	CustomerGatewayId pulumi.StringOutput `pulumi:"customerGatewayId"`
	// The configurations of IKE negotiation. Each ikeConfig supports fields documented below.
	IkeConfig VpnConnectionIkeConfigOutput `pulumi:"ikeConfig"`
	// The configurations of IPSec negotiation. Each ipsecConfig supports fields documented below.
	IpsecConfig VpnConnectionIpsecConfigOutput `pulumi:"ipsecConfig"`
	Name        pulumi.StringOutput            `pulumi:"name"`
	// The remarks of the VPN Gateway Connection. (Default: `""`).
	Remark pulumi.StringOutput `pulumi:"remark"`
	// A tag assigned to VPN Gateway Connection, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
	Tag pulumi.StringPtrOutput `pulumi:"tag"`
	// The ID of VPC linked to the VPN Gateway Connection.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
	// The ID of  the VPN Customer Gateway.
	VpnGatewayId pulumi.StringOutput `pulumi:"vpnGatewayId"`
}

// NewVpnConnection registers a new resource with the given unique name, arguments, and options.
func NewVpnConnection(ctx *pulumi.Context,
	name string, args *VpnConnectionArgs, opts ...pulumi.ResourceOption) (*VpnConnection, error) {
	if args == nil || args.CustomerGatewayId == nil {
		return nil, errors.New("missing required argument 'CustomerGatewayId'")
	}
	if args == nil || args.IkeConfig == nil {
		return nil, errors.New("missing required argument 'IkeConfig'")
	}
	if args == nil || args.IpsecConfig == nil {
		return nil, errors.New("missing required argument 'IpsecConfig'")
	}
	if args == nil || args.VpcId == nil {
		return nil, errors.New("missing required argument 'VpcId'")
	}
	if args == nil || args.VpnGatewayId == nil {
		return nil, errors.New("missing required argument 'VpnGatewayId'")
	}
	if args == nil {
		args = &VpnConnectionArgs{}
	}
	var resource VpnConnection
	err := ctx.RegisterResource("ucloud:ipsecvpn/vpnConnection:VpnConnection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpnConnection gets an existing VpnConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpnConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpnConnectionState, opts ...pulumi.ResourceOption) (*VpnConnection, error) {
	var resource VpnConnection
	err := ctx.ReadResource("ucloud:ipsecvpn/vpnConnection:VpnConnection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpnConnection resources.
type vpnConnectionState struct {
	// The creation time for VPN Gateway Connection, formatted in RFC3339 time string.
	CreateTime *string `pulumi:"createTime"`
	// The grade of the VPN Gateway
	CustomerGatewayId *string `pulumi:"customerGatewayId"`
	// The configurations of IKE negotiation. Each ikeConfig supports fields documented below.
	IkeConfig *VpnConnectionIkeConfig `pulumi:"ikeConfig"`
	// The configurations of IPSec negotiation. Each ipsecConfig supports fields documented below.
	IpsecConfig *VpnConnectionIpsecConfig `pulumi:"ipsecConfig"`
	Name        *string                   `pulumi:"name"`
	// The remarks of the VPN Gateway Connection. (Default: `""`).
	Remark *string `pulumi:"remark"`
	// A tag assigned to VPN Gateway Connection, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
	Tag *string `pulumi:"tag"`
	// The ID of VPC linked to the VPN Gateway Connection.
	VpcId *string `pulumi:"vpcId"`
	// The ID of  the VPN Customer Gateway.
	VpnGatewayId *string `pulumi:"vpnGatewayId"`
}

type VpnConnectionState struct {
	// The creation time for VPN Gateway Connection, formatted in RFC3339 time string.
	CreateTime pulumi.StringPtrInput
	// The grade of the VPN Gateway
	CustomerGatewayId pulumi.StringPtrInput
	// The configurations of IKE negotiation. Each ikeConfig supports fields documented below.
	IkeConfig VpnConnectionIkeConfigPtrInput
	// The configurations of IPSec negotiation. Each ipsecConfig supports fields documented below.
	IpsecConfig VpnConnectionIpsecConfigPtrInput
	Name        pulumi.StringPtrInput
	// The remarks of the VPN Gateway Connection. (Default: `""`).
	Remark pulumi.StringPtrInput
	// A tag assigned to VPN Gateway Connection, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
	Tag pulumi.StringPtrInput
	// The ID of VPC linked to the VPN Gateway Connection.
	VpcId pulumi.StringPtrInput
	// The ID of  the VPN Customer Gateway.
	VpnGatewayId pulumi.StringPtrInput
}

func (VpnConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpnConnectionState)(nil)).Elem()
}

type vpnConnectionArgs struct {
	// The grade of the VPN Gateway
	CustomerGatewayId string `pulumi:"customerGatewayId"`
	// The configurations of IKE negotiation. Each ikeConfig supports fields documented below.
	IkeConfig VpnConnectionIkeConfig `pulumi:"ikeConfig"`
	// The configurations of IPSec negotiation. Each ipsecConfig supports fields documented below.
	IpsecConfig VpnConnectionIpsecConfig `pulumi:"ipsecConfig"`
	Name        *string                  `pulumi:"name"`
	// The remarks of the VPN Gateway Connection. (Default: `""`).
	Remark *string `pulumi:"remark"`
	// A tag assigned to VPN Gateway Connection, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
	Tag *string `pulumi:"tag"`
	// The ID of VPC linked to the VPN Gateway Connection.
	VpcId string `pulumi:"vpcId"`
	// The ID of  the VPN Customer Gateway.
	VpnGatewayId string `pulumi:"vpnGatewayId"`
}

// The set of arguments for constructing a VpnConnection resource.
type VpnConnectionArgs struct {
	// The grade of the VPN Gateway
	CustomerGatewayId pulumi.StringInput
	// The configurations of IKE negotiation. Each ikeConfig supports fields documented below.
	IkeConfig VpnConnectionIkeConfigInput
	// The configurations of IPSec negotiation. Each ipsecConfig supports fields documented below.
	IpsecConfig VpnConnectionIpsecConfigInput
	Name        pulumi.StringPtrInput
	// The remarks of the VPN Gateway Connection. (Default: `""`).
	Remark pulumi.StringPtrInput
	// A tag assigned to VPN Gateway Connection, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
	Tag pulumi.StringPtrInput
	// The ID of VPC linked to the VPN Gateway Connection.
	VpcId pulumi.StringInput
	// The ID of  the VPN Customer Gateway.
	VpnGatewayId pulumi.StringInput
}

func (VpnConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpnConnectionArgs)(nil)).Elem()
}
