// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package ipsecvpn

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a VPN Gateway resource.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-ucloud/blob/master/website/docs/r/vpn_gateway.html.markdown.
type VpnGateway struct {
	pulumi.CustomResourceState

	// The charge type of VPN Gateway, possible values are: `year`, `month` and `dynamic` as pay by hour (specific permission required). (Default: `month`).
	ChargeType pulumi.StringOutput `pulumi:"chargeType"`
	// The creation time for VPN Gateway, formatted in RFC3339 time string.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The duration that you will buy the VPN Gateway (Default: `1`). The value is `0` when pay by month and the instance will be valid till the last day of that month. It is not required when `dynamic` (pay by hour).
	Duration pulumi.IntPtrOutput `pulumi:"duration"`
	// The ID of eip associate to the VPN Gateway.
	EipId pulumi.StringOutput `pulumi:"eipId"`
	// The expiration time for VPN Gateway, formatted in RFC3339 time string.
	ExpireTime pulumi.StringOutput `pulumi:"expireTime"`
	// The type of the VPN Gateway. Possible values: `standard`, `enhanced`. `standard` recommended application scenario: Applicable to services with bidirectional peak bandwidth of 1M~50M; `enhanced` recommended application scenario: Suitable for services with bidirectional peak bandwidths of 50M~100M.
	Grade pulumi.StringOutput `pulumi:"grade"`
	Name  pulumi.StringOutput `pulumi:"name"`
	// The remarks of the VPN Gateway. (Default: `""`).
	Remark pulumi.StringOutput `pulumi:"remark"`
	// A tag assigned to VPN Gateway, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
	// * ``
	Tag pulumi.StringPtrOutput `pulumi:"tag"`
	// The ID of VPC linked to the VPN Gateway.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
}

// NewVpnGateway registers a new resource with the given unique name, arguments, and options.
func NewVpnGateway(ctx *pulumi.Context,
	name string, args *VpnGatewayArgs, opts ...pulumi.ResourceOption) (*VpnGateway, error) {
	if args == nil || args.EipId == nil {
		return nil, errors.New("missing required argument 'EipId'")
	}
	if args == nil || args.Grade == nil {
		return nil, errors.New("missing required argument 'Grade'")
	}
	if args == nil || args.VpcId == nil {
		return nil, errors.New("missing required argument 'VpcId'")
	}
	if args == nil {
		args = &VpnGatewayArgs{}
	}
	var resource VpnGateway
	err := ctx.RegisterResource("ucloud:ipsecvpn/vpnGateway:VpnGateway", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpnGateway gets an existing VpnGateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpnGateway(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpnGatewayState, opts ...pulumi.ResourceOption) (*VpnGateway, error) {
	var resource VpnGateway
	err := ctx.ReadResource("ucloud:ipsecvpn/vpnGateway:VpnGateway", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpnGateway resources.
type vpnGatewayState struct {
	// The charge type of VPN Gateway, possible values are: `year`, `month` and `dynamic` as pay by hour (specific permission required). (Default: `month`).
	ChargeType *string `pulumi:"chargeType"`
	// The creation time for VPN Gateway, formatted in RFC3339 time string.
	CreateTime *string `pulumi:"createTime"`
	// The duration that you will buy the VPN Gateway (Default: `1`). The value is `0` when pay by month and the instance will be valid till the last day of that month. It is not required when `dynamic` (pay by hour).
	Duration *int `pulumi:"duration"`
	// The ID of eip associate to the VPN Gateway.
	EipId *string `pulumi:"eipId"`
	// The expiration time for VPN Gateway, formatted in RFC3339 time string.
	ExpireTime *string `pulumi:"expireTime"`
	// The type of the VPN Gateway. Possible values: `standard`, `enhanced`. `standard` recommended application scenario: Applicable to services with bidirectional peak bandwidth of 1M~50M; `enhanced` recommended application scenario: Suitable for services with bidirectional peak bandwidths of 50M~100M.
	Grade *string `pulumi:"grade"`
	Name  *string `pulumi:"name"`
	// The remarks of the VPN Gateway. (Default: `""`).
	Remark *string `pulumi:"remark"`
	// A tag assigned to VPN Gateway, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
	// * ``
	Tag *string `pulumi:"tag"`
	// The ID of VPC linked to the VPN Gateway.
	VpcId *string `pulumi:"vpcId"`
}

type VpnGatewayState struct {
	// The charge type of VPN Gateway, possible values are: `year`, `month` and `dynamic` as pay by hour (specific permission required). (Default: `month`).
	ChargeType pulumi.StringPtrInput
	// The creation time for VPN Gateway, formatted in RFC3339 time string.
	CreateTime pulumi.StringPtrInput
	// The duration that you will buy the VPN Gateway (Default: `1`). The value is `0` when pay by month and the instance will be valid till the last day of that month. It is not required when `dynamic` (pay by hour).
	Duration pulumi.IntPtrInput
	// The ID of eip associate to the VPN Gateway.
	EipId pulumi.StringPtrInput
	// The expiration time for VPN Gateway, formatted in RFC3339 time string.
	ExpireTime pulumi.StringPtrInput
	// The type of the VPN Gateway. Possible values: `standard`, `enhanced`. `standard` recommended application scenario: Applicable to services with bidirectional peak bandwidth of 1M~50M; `enhanced` recommended application scenario: Suitable for services with bidirectional peak bandwidths of 50M~100M.
	Grade pulumi.StringPtrInput
	Name  pulumi.StringPtrInput
	// The remarks of the VPN Gateway. (Default: `""`).
	Remark pulumi.StringPtrInput
	// A tag assigned to VPN Gateway, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
	// * ``
	Tag pulumi.StringPtrInput
	// The ID of VPC linked to the VPN Gateway.
	VpcId pulumi.StringPtrInput
}

func (VpnGatewayState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpnGatewayState)(nil)).Elem()
}

type vpnGatewayArgs struct {
	// The charge type of VPN Gateway, possible values are: `year`, `month` and `dynamic` as pay by hour (specific permission required). (Default: `month`).
	ChargeType *string `pulumi:"chargeType"`
	// The duration that you will buy the VPN Gateway (Default: `1`). The value is `0` when pay by month and the instance will be valid till the last day of that month. It is not required when `dynamic` (pay by hour).
	Duration *int `pulumi:"duration"`
	// The ID of eip associate to the VPN Gateway.
	EipId string `pulumi:"eipId"`
	// The type of the VPN Gateway. Possible values: `standard`, `enhanced`. `standard` recommended application scenario: Applicable to services with bidirectional peak bandwidth of 1M~50M; `enhanced` recommended application scenario: Suitable for services with bidirectional peak bandwidths of 50M~100M.
	Grade string  `pulumi:"grade"`
	Name  *string `pulumi:"name"`
	// The remarks of the VPN Gateway. (Default: `""`).
	Remark *string `pulumi:"remark"`
	// A tag assigned to VPN Gateway, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
	// * ``
	Tag *string `pulumi:"tag"`
	// The ID of VPC linked to the VPN Gateway.
	VpcId string `pulumi:"vpcId"`
}

// The set of arguments for constructing a VpnGateway resource.
type VpnGatewayArgs struct {
	// The charge type of VPN Gateway, possible values are: `year`, `month` and `dynamic` as pay by hour (specific permission required). (Default: `month`).
	ChargeType pulumi.StringPtrInput
	// The duration that you will buy the VPN Gateway (Default: `1`). The value is `0` when pay by month and the instance will be valid till the last day of that month. It is not required when `dynamic` (pay by hour).
	Duration pulumi.IntPtrInput
	// The ID of eip associate to the VPN Gateway.
	EipId pulumi.StringInput
	// The type of the VPN Gateway. Possible values: `standard`, `enhanced`. `standard` recommended application scenario: Applicable to services with bidirectional peak bandwidth of 1M~50M; `enhanced` recommended application scenario: Suitable for services with bidirectional peak bandwidths of 50M~100M.
	Grade pulumi.StringInput
	Name  pulumi.StringPtrInput
	// The remarks of the VPN Gateway. (Default: `""`).
	Remark pulumi.StringPtrInput
	// A tag assigned to VPN Gateway, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
	// * ``
	Tag pulumi.StringPtrInput
	// The ID of VPC linked to the VPN Gateway.
	VpcId pulumi.StringInput
}

func (VpnGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpnGatewayArgs)(nil)).Elem()
}
