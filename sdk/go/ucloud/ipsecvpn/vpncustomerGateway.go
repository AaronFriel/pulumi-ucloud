// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ipsecvpn

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a VPN Customer Gateway resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-ucloud/sdk/go/ucloud/ipsecvpn"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := ipsecvpn.NewVPNCustomerGateway(ctx, "foo", &ipsecvpn.VPNCustomerGatewayArgs{
// 			IpAddress: pulumi.String("10.0.0.1"),
// 			Tag:       pulumi.String("tf-acc"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// VPN Customer Gateway can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import ucloud:ipsecvpn/vPNCustomerGateway:VPNCustomerGateway example remotevpngw-abc123456
// ```
type VPNCustomerGateway struct {
	pulumi.CustomResourceState

	// The creation time for VPN Customer Gateway, formatted in RFC3339 time string.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The ip address of the VPN Customer Gateway.
	IpAddress pulumi.StringOutput `pulumi:"ipAddress"`
	Name      pulumi.StringOutput `pulumi:"name"`
	// The remarks of the VPN Customer Gateway. (Default: `""`).
	Remark pulumi.StringOutput `pulumi:"remark"`
	// A tag assigned to VPN Customer Gateway, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
	// * ``
	Tag pulumi.StringPtrOutput `pulumi:"tag"`
}

// NewVPNCustomerGateway registers a new resource with the given unique name, arguments, and options.
func NewVPNCustomerGateway(ctx *pulumi.Context,
	name string, args *VPNCustomerGatewayArgs, opts ...pulumi.ResourceOption) (*VPNCustomerGateway, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IpAddress == nil {
		return nil, errors.New("invalid value for required argument 'IpAddress'")
	}
	var resource VPNCustomerGateway
	err := ctx.RegisterResource("ucloud:ipsecvpn/vPNCustomerGateway:VPNCustomerGateway", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVPNCustomerGateway gets an existing VPNCustomerGateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVPNCustomerGateway(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VPNCustomerGatewayState, opts ...pulumi.ResourceOption) (*VPNCustomerGateway, error) {
	var resource VPNCustomerGateway
	err := ctx.ReadResource("ucloud:ipsecvpn/vPNCustomerGateway:VPNCustomerGateway", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VPNCustomerGateway resources.
type vpncustomerGatewayState struct {
	// The creation time for VPN Customer Gateway, formatted in RFC3339 time string.
	CreateTime *string `pulumi:"createTime"`
	// The ip address of the VPN Customer Gateway.
	IpAddress *string `pulumi:"ipAddress"`
	Name      *string `pulumi:"name"`
	// The remarks of the VPN Customer Gateway. (Default: `""`).
	Remark *string `pulumi:"remark"`
	// A tag assigned to VPN Customer Gateway, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
	// * ``
	Tag *string `pulumi:"tag"`
}

type VPNCustomerGatewayState struct {
	// The creation time for VPN Customer Gateway, formatted in RFC3339 time string.
	CreateTime pulumi.StringPtrInput
	// The ip address of the VPN Customer Gateway.
	IpAddress pulumi.StringPtrInput
	Name      pulumi.StringPtrInput
	// The remarks of the VPN Customer Gateway. (Default: `""`).
	Remark pulumi.StringPtrInput
	// A tag assigned to VPN Customer Gateway, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
	// * ``
	Tag pulumi.StringPtrInput
}

func (VPNCustomerGatewayState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpncustomerGatewayState)(nil)).Elem()
}

type vpncustomerGatewayArgs struct {
	// The ip address of the VPN Customer Gateway.
	IpAddress string  `pulumi:"ipAddress"`
	Name      *string `pulumi:"name"`
	// The remarks of the VPN Customer Gateway. (Default: `""`).
	Remark *string `pulumi:"remark"`
	// A tag assigned to VPN Customer Gateway, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
	// * ``
	Tag *string `pulumi:"tag"`
}

// The set of arguments for constructing a VPNCustomerGateway resource.
type VPNCustomerGatewayArgs struct {
	// The ip address of the VPN Customer Gateway.
	IpAddress pulumi.StringInput
	Name      pulumi.StringPtrInput
	// The remarks of the VPN Customer Gateway. (Default: `""`).
	Remark pulumi.StringPtrInput
	// A tag assigned to VPN Customer Gateway, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
	// * ``
	Tag pulumi.StringPtrInput
}

func (VPNCustomerGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpncustomerGatewayArgs)(nil)).Elem()
}

type VPNCustomerGatewayInput interface {
	pulumi.Input

	ToVPNCustomerGatewayOutput() VPNCustomerGatewayOutput
	ToVPNCustomerGatewayOutputWithContext(ctx context.Context) VPNCustomerGatewayOutput
}

func (*VPNCustomerGateway) ElementType() reflect.Type {
	return reflect.TypeOf((*VPNCustomerGateway)(nil))
}

func (i *VPNCustomerGateway) ToVPNCustomerGatewayOutput() VPNCustomerGatewayOutput {
	return i.ToVPNCustomerGatewayOutputWithContext(context.Background())
}

func (i *VPNCustomerGateway) ToVPNCustomerGatewayOutputWithContext(ctx context.Context) VPNCustomerGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPNCustomerGatewayOutput)
}

func (i *VPNCustomerGateway) ToVPNCustomerGatewayPtrOutput() VPNCustomerGatewayPtrOutput {
	return i.ToVPNCustomerGatewayPtrOutputWithContext(context.Background())
}

func (i *VPNCustomerGateway) ToVPNCustomerGatewayPtrOutputWithContext(ctx context.Context) VPNCustomerGatewayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPNCustomerGatewayPtrOutput)
}

type VPNCustomerGatewayPtrInput interface {
	pulumi.Input

	ToVPNCustomerGatewayPtrOutput() VPNCustomerGatewayPtrOutput
	ToVPNCustomerGatewayPtrOutputWithContext(ctx context.Context) VPNCustomerGatewayPtrOutput
}

type vpncustomerGatewayPtrType VPNCustomerGatewayArgs

func (*vpncustomerGatewayPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VPNCustomerGateway)(nil))
}

func (i *vpncustomerGatewayPtrType) ToVPNCustomerGatewayPtrOutput() VPNCustomerGatewayPtrOutput {
	return i.ToVPNCustomerGatewayPtrOutputWithContext(context.Background())
}

func (i *vpncustomerGatewayPtrType) ToVPNCustomerGatewayPtrOutputWithContext(ctx context.Context) VPNCustomerGatewayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPNCustomerGatewayPtrOutput)
}

// VPNCustomerGatewayArrayInput is an input type that accepts VPNCustomerGatewayArray and VPNCustomerGatewayArrayOutput values.
// You can construct a concrete instance of `VPNCustomerGatewayArrayInput` via:
//
//          VPNCustomerGatewayArray{ VPNCustomerGatewayArgs{...} }
type VPNCustomerGatewayArrayInput interface {
	pulumi.Input

	ToVPNCustomerGatewayArrayOutput() VPNCustomerGatewayArrayOutput
	ToVPNCustomerGatewayArrayOutputWithContext(context.Context) VPNCustomerGatewayArrayOutput
}

type VPNCustomerGatewayArray []VPNCustomerGatewayInput

func (VPNCustomerGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*VPNCustomerGateway)(nil))
}

func (i VPNCustomerGatewayArray) ToVPNCustomerGatewayArrayOutput() VPNCustomerGatewayArrayOutput {
	return i.ToVPNCustomerGatewayArrayOutputWithContext(context.Background())
}

func (i VPNCustomerGatewayArray) ToVPNCustomerGatewayArrayOutputWithContext(ctx context.Context) VPNCustomerGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPNCustomerGatewayArrayOutput)
}

// VPNCustomerGatewayMapInput is an input type that accepts VPNCustomerGatewayMap and VPNCustomerGatewayMapOutput values.
// You can construct a concrete instance of `VPNCustomerGatewayMapInput` via:
//
//          VPNCustomerGatewayMap{ "key": VPNCustomerGatewayArgs{...} }
type VPNCustomerGatewayMapInput interface {
	pulumi.Input

	ToVPNCustomerGatewayMapOutput() VPNCustomerGatewayMapOutput
	ToVPNCustomerGatewayMapOutputWithContext(context.Context) VPNCustomerGatewayMapOutput
}

type VPNCustomerGatewayMap map[string]VPNCustomerGatewayInput

func (VPNCustomerGatewayMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*VPNCustomerGateway)(nil))
}

func (i VPNCustomerGatewayMap) ToVPNCustomerGatewayMapOutput() VPNCustomerGatewayMapOutput {
	return i.ToVPNCustomerGatewayMapOutputWithContext(context.Background())
}

func (i VPNCustomerGatewayMap) ToVPNCustomerGatewayMapOutputWithContext(ctx context.Context) VPNCustomerGatewayMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPNCustomerGatewayMapOutput)
}

type VPNCustomerGatewayOutput struct {
	*pulumi.OutputState
}

func (VPNCustomerGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VPNCustomerGateway)(nil))
}

func (o VPNCustomerGatewayOutput) ToVPNCustomerGatewayOutput() VPNCustomerGatewayOutput {
	return o
}

func (o VPNCustomerGatewayOutput) ToVPNCustomerGatewayOutputWithContext(ctx context.Context) VPNCustomerGatewayOutput {
	return o
}

func (o VPNCustomerGatewayOutput) ToVPNCustomerGatewayPtrOutput() VPNCustomerGatewayPtrOutput {
	return o.ToVPNCustomerGatewayPtrOutputWithContext(context.Background())
}

func (o VPNCustomerGatewayOutput) ToVPNCustomerGatewayPtrOutputWithContext(ctx context.Context) VPNCustomerGatewayPtrOutput {
	return o.ApplyT(func(v VPNCustomerGateway) *VPNCustomerGateway {
		return &v
	}).(VPNCustomerGatewayPtrOutput)
}

type VPNCustomerGatewayPtrOutput struct {
	*pulumi.OutputState
}

func (VPNCustomerGatewayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VPNCustomerGateway)(nil))
}

func (o VPNCustomerGatewayPtrOutput) ToVPNCustomerGatewayPtrOutput() VPNCustomerGatewayPtrOutput {
	return o
}

func (o VPNCustomerGatewayPtrOutput) ToVPNCustomerGatewayPtrOutputWithContext(ctx context.Context) VPNCustomerGatewayPtrOutput {
	return o
}

type VPNCustomerGatewayArrayOutput struct{ *pulumi.OutputState }

func (VPNCustomerGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VPNCustomerGateway)(nil))
}

func (o VPNCustomerGatewayArrayOutput) ToVPNCustomerGatewayArrayOutput() VPNCustomerGatewayArrayOutput {
	return o
}

func (o VPNCustomerGatewayArrayOutput) ToVPNCustomerGatewayArrayOutputWithContext(ctx context.Context) VPNCustomerGatewayArrayOutput {
	return o
}

func (o VPNCustomerGatewayArrayOutput) Index(i pulumi.IntInput) VPNCustomerGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VPNCustomerGateway {
		return vs[0].([]VPNCustomerGateway)[vs[1].(int)]
	}).(VPNCustomerGatewayOutput)
}

type VPNCustomerGatewayMapOutput struct{ *pulumi.OutputState }

func (VPNCustomerGatewayMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]VPNCustomerGateway)(nil))
}

func (o VPNCustomerGatewayMapOutput) ToVPNCustomerGatewayMapOutput() VPNCustomerGatewayMapOutput {
	return o
}

func (o VPNCustomerGatewayMapOutput) ToVPNCustomerGatewayMapOutputWithContext(ctx context.Context) VPNCustomerGatewayMapOutput {
	return o
}

func (o VPNCustomerGatewayMapOutput) MapIndex(k pulumi.StringInput) VPNCustomerGatewayOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) VPNCustomerGateway {
		return vs[0].(map[string]VPNCustomerGateway)[vs[1].(string)]
	}).(VPNCustomerGatewayOutput)
}

func init() {
	pulumi.RegisterOutputType(VPNCustomerGatewayOutput{})
	pulumi.RegisterOutputType(VPNCustomerGatewayPtrOutput{})
	pulumi.RegisterOutputType(VPNCustomerGatewayArrayOutput{})
	pulumi.RegisterOutputType(VPNCustomerGatewayMapOutput{})
}
