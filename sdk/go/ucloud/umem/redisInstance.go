// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package umem

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// The UCloud Redis instance is a key-value online storage service compatible with the Redis protocol.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-ucloud/blob/master/website/docs/r/redis_instance.html.markdown.
type RedisInstance struct {
	s *pulumi.ResourceState
}

// NewRedisInstance registers a new resource with the given unique name, arguments, and options.
func NewRedisInstance(ctx *pulumi.Context,
	name string, args *RedisInstanceArgs, opts ...pulumi.ResourceOpt) (*RedisInstance, error) {
	if args == nil || args.AvailabilityZone == nil {
		return nil, errors.New("missing required argument 'AvailabilityZone'")
	}
	if args == nil || args.InstanceType == nil {
		return nil, errors.New("missing required argument 'InstanceType'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["availabilityZone"] = nil
		inputs["chargeType"] = nil
		inputs["duration"] = nil
		inputs["engineVersion"] = nil
		inputs["instanceType"] = nil
		inputs["name"] = nil
		inputs["password"] = nil
		inputs["subnetId"] = nil
		inputs["tag"] = nil
		inputs["vpcId"] = nil
	} else {
		inputs["availabilityZone"] = args.AvailabilityZone
		inputs["chargeType"] = args.ChargeType
		inputs["duration"] = args.Duration
		inputs["engineVersion"] = args.EngineVersion
		inputs["instanceType"] = args.InstanceType
		inputs["name"] = args.Name
		inputs["password"] = args.Password
		inputs["subnetId"] = args.SubnetId
		inputs["tag"] = args.Tag
		inputs["vpcId"] = args.VpcId
	}
	inputs["createTime"] = nil
	inputs["expireTime"] = nil
	inputs["ipSets"] = nil
	inputs["status"] = nil
	s, err := ctx.RegisterResource("ucloud:umem/redisInstance:RedisInstance", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &RedisInstance{s: s}, nil
}

// GetRedisInstance gets an existing RedisInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRedisInstance(ctx *pulumi.Context,
	name string, id pulumi.ID, state *RedisInstanceState, opts ...pulumi.ResourceOpt) (*RedisInstance, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["availabilityZone"] = state.AvailabilityZone
		inputs["chargeType"] = state.ChargeType
		inputs["createTime"] = state.CreateTime
		inputs["duration"] = state.Duration
		inputs["engineVersion"] = state.EngineVersion
		inputs["expireTime"] = state.ExpireTime
		inputs["instanceType"] = state.InstanceType
		inputs["ipSets"] = state.IpSets
		inputs["name"] = state.Name
		inputs["password"] = state.Password
		inputs["status"] = state.Status
		inputs["subnetId"] = state.SubnetId
		inputs["tag"] = state.Tag
		inputs["vpcId"] = state.VpcId
	}
	s, err := ctx.ReadResource("ucloud:umem/redisInstance:RedisInstance", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &RedisInstance{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *RedisInstance) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *RedisInstance) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// Availability zone where Redis instance is located. Such as: "cn-bj2-02". You may refer to [list of availability zone](https://docs.ucloud.cn/api/summary/regionlist)
func (r *RedisInstance) AvailabilityZone() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["availabilityZone"])
}

// The charge type of Redis instance, possible values are: `year`, `month` and `dynamic` as pay by hour (specific permission required). (Default: `month`).
func (r *RedisInstance) ChargeType() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["chargeType"])
}

// The creation time of Redis instance, formatted by RFC3339 time string.
func (r *RedisInstance) CreateTime() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["createTime"])
}

// The duration that you will buy the Redis instance (Default: `1`). The value is `0` when pay by month and the instance will be valid till the last day of that month. It is not required when `dynamic` (pay by hour).
func (r *RedisInstance) Duration() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["duration"])
}

// The version of engine of active-standby Redis. Possible values are: 3.0, 3.2 and 4.0.
func (r *RedisInstance) EngineVersion() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["engineVersion"])
}

// The expiration time of Redis instance, formatted by RFC3339 time string.
func (r *RedisInstance) ExpireTime() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["expireTime"])
}

func (r *RedisInstance) InstanceType() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["instanceType"])
}

// ip_set is a nested type. ipSet documented below.
func (r *RedisInstance) IpSets() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["ipSets"])
}

func (r *RedisInstance) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// The password for  active-standby Redis instance which should have 6-36 characters. It must contain at least 3 items of Capital letters, small letter, numbers and special characters. The special characters include `-_`.
func (r *RedisInstance) Password() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["password"])
}

// The status of KV Redis instance.
func (r *RedisInstance) Status() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["status"])
}

// The ID of subnet linked to the Redis instance.
func (r *RedisInstance) SubnetId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["subnetId"])
}

// A tag assigned to Redis instance, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
func (r *RedisInstance) Tag() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["tag"])
}

// The ID of VPC linked to the Redis instance.
func (r *RedisInstance) VpcId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["vpcId"])
}

// Input properties used for looking up and filtering RedisInstance resources.
type RedisInstanceState struct {
	// Availability zone where Redis instance is located. Such as: "cn-bj2-02". You may refer to [list of availability zone](https://docs.ucloud.cn/api/summary/regionlist)
	AvailabilityZone interface{}
	// The charge type of Redis instance, possible values are: `year`, `month` and `dynamic` as pay by hour (specific permission required). (Default: `month`).
	ChargeType interface{}
	// The creation time of Redis instance, formatted by RFC3339 time string.
	CreateTime interface{}
	// The duration that you will buy the Redis instance (Default: `1`). The value is `0` when pay by month and the instance will be valid till the last day of that month. It is not required when `dynamic` (pay by hour).
	Duration interface{}
	// The version of engine of active-standby Redis. Possible values are: 3.0, 3.2 and 4.0.
	EngineVersion interface{}
	// The expiration time of Redis instance, formatted by RFC3339 time string.
	ExpireTime   interface{}
	InstanceType interface{}
	// ip_set is a nested type. ipSet documented below.
	IpSets interface{}
	Name   interface{}
	// The password for  active-standby Redis instance which should have 6-36 characters. It must contain at least 3 items of Capital letters, small letter, numbers and special characters. The special characters include `-_`.
	Password interface{}
	// The status of KV Redis instance.
	Status interface{}
	// The ID of subnet linked to the Redis instance.
	SubnetId interface{}
	// A tag assigned to Redis instance, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
	Tag interface{}
	// The ID of VPC linked to the Redis instance.
	VpcId interface{}
}

// The set of arguments for constructing a RedisInstance resource.
type RedisInstanceArgs struct {
	// Availability zone where Redis instance is located. Such as: "cn-bj2-02". You may refer to [list of availability zone](https://docs.ucloud.cn/api/summary/regionlist)
	AvailabilityZone interface{}
	// The charge type of Redis instance, possible values are: `year`, `month` and `dynamic` as pay by hour (specific permission required). (Default: `month`).
	ChargeType interface{}
	// The duration that you will buy the Redis instance (Default: `1`). The value is `0` when pay by month and the instance will be valid till the last day of that month. It is not required when `dynamic` (pay by hour).
	Duration interface{}
	// The version of engine of active-standby Redis. Possible values are: 3.0, 3.2 and 4.0.
	EngineVersion interface{}
	InstanceType  interface{}
	Name          interface{}
	// The password for  active-standby Redis instance which should have 6-36 characters. It must contain at least 3 items of Capital letters, small letter, numbers and special characters. The special characters include `-_`.
	Password interface{}
	// The ID of subnet linked to the Redis instance.
	SubnetId interface{}
	// A tag assigned to Redis instance, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
	Tag interface{}
	// The ID of VPC linked to the Redis instance.
	VpcId interface{}
}
