// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package uaccount

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source providers a list of projects owned by user according to finance permission and name.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-ucloud/sdk/go/ucloud/uaccount"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := false
// 		example, err := uaccount.GetProject(ctx, &uaccount.GetProjectArgs{
// 			IsFinance: &opt0,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("first", example.Projects[0].Id)
// 		return nil
// 	})
// }
// ```
func GetProject(ctx *pulumi.Context, args *GetProjectArgs, opts ...pulumi.InvokeOption) (*GetProjectResult, error) {
	var rv GetProjectResult
	err := ctx.Invoke("ucloud:uaccount/getProject:getProject", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getProject.
type GetProjectArgs struct {
	// To identify if the current account is granted with financial permission.
	IsFinance *bool `pulumi:"isFinance"`
	// A regex string to filter resulting projects by name.
	NameRegex  *string `pulumi:"nameRegex"`
	OutputFile *string `pulumi:"outputFile"`
}

// A collection of values returned by getProject.
type GetProjectResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string  `pulumi:"id"`
	IsFinance  *bool   `pulumi:"isFinance"`
	NameRegex  *string `pulumi:"nameRegex"`
	OutputFile *string `pulumi:"outputFile"`
	// It is a nested type which documented below.
	Projects []GetProjectProject `pulumi:"projects"`
	// Total number of projects that satisfy the condition.
	TotalCount int `pulumi:"totalCount"`
}
