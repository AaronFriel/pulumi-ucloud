// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package uaccount

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GetProjectProject struct {
	// The time of creation for instance, formatted in RFC3339 time string.
	CreateTime string `pulumi:"createTime"`
	// The ID of project defined.
	Id string `pulumi:"id"`
	// The number of members belongs to the defined project.
	MemberCount int `pulumi:"memberCount"`
	// The name of the defined project.
	Name string `pulumi:"name"`
	// The ID of the parent project where the sub project belongs to.
	ParentId string `pulumi:"parentId"`
	// The name of the parent project where the sub project belongs to.
	ParentName string `pulumi:"parentName"`
	// The number of the resounce instance belong/s to the defined project.
	ResourceCount int `pulumi:"resourceCount"`
}

// GetProjectProjectInput is an input type that accepts GetProjectProjectArgs and GetProjectProjectOutput values.
// You can construct a concrete instance of `GetProjectProjectInput` via:
//
//          GetProjectProjectArgs{...}
type GetProjectProjectInput interface {
	pulumi.Input

	ToGetProjectProjectOutput() GetProjectProjectOutput
	ToGetProjectProjectOutputWithContext(context.Context) GetProjectProjectOutput
}

type GetProjectProjectArgs struct {
	// The time of creation for instance, formatted in RFC3339 time string.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The ID of project defined.
	Id pulumi.StringInput `pulumi:"id"`
	// The number of members belongs to the defined project.
	MemberCount pulumi.IntInput `pulumi:"memberCount"`
	// The name of the defined project.
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of the parent project where the sub project belongs to.
	ParentId pulumi.StringInput `pulumi:"parentId"`
	// The name of the parent project where the sub project belongs to.
	ParentName pulumi.StringInput `pulumi:"parentName"`
	// The number of the resounce instance belong/s to the defined project.
	ResourceCount pulumi.IntInput `pulumi:"resourceCount"`
}

func (GetProjectProjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectProject)(nil)).Elem()
}

func (i GetProjectProjectArgs) ToGetProjectProjectOutput() GetProjectProjectOutput {
	return i.ToGetProjectProjectOutputWithContext(context.Background())
}

func (i GetProjectProjectArgs) ToGetProjectProjectOutputWithContext(ctx context.Context) GetProjectProjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectProjectOutput)
}

// GetProjectProjectArrayInput is an input type that accepts GetProjectProjectArray and GetProjectProjectArrayOutput values.
// You can construct a concrete instance of `GetProjectProjectArrayInput` via:
//
//          GetProjectProjectArray{ GetProjectProjectArgs{...} }
type GetProjectProjectArrayInput interface {
	pulumi.Input

	ToGetProjectProjectArrayOutput() GetProjectProjectArrayOutput
	ToGetProjectProjectArrayOutputWithContext(context.Context) GetProjectProjectArrayOutput
}

type GetProjectProjectArray []GetProjectProjectInput

func (GetProjectProjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectProject)(nil)).Elem()
}

func (i GetProjectProjectArray) ToGetProjectProjectArrayOutput() GetProjectProjectArrayOutput {
	return i.ToGetProjectProjectArrayOutputWithContext(context.Background())
}

func (i GetProjectProjectArray) ToGetProjectProjectArrayOutputWithContext(ctx context.Context) GetProjectProjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectProjectArrayOutput)
}

type GetProjectProjectOutput struct{ *pulumi.OutputState }

func (GetProjectProjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectProject)(nil)).Elem()
}

func (o GetProjectProjectOutput) ToGetProjectProjectOutput() GetProjectProjectOutput {
	return o
}

func (o GetProjectProjectOutput) ToGetProjectProjectOutputWithContext(ctx context.Context) GetProjectProjectOutput {
	return o
}

// The time of creation for instance, formatted in RFC3339 time string.
func (o GetProjectProjectOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectProject) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The ID of project defined.
func (o GetProjectProjectOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectProject) string { return v.Id }).(pulumi.StringOutput)
}

// The number of members belongs to the defined project.
func (o GetProjectProjectOutput) MemberCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectProject) int { return v.MemberCount }).(pulumi.IntOutput)
}

// The name of the defined project.
func (o GetProjectProjectOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectProject) string { return v.Name }).(pulumi.StringOutput)
}

// The ID of the parent project where the sub project belongs to.
func (o GetProjectProjectOutput) ParentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectProject) string { return v.ParentId }).(pulumi.StringOutput)
}

// The name of the parent project where the sub project belongs to.
func (o GetProjectProjectOutput) ParentName() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectProject) string { return v.ParentName }).(pulumi.StringOutput)
}

// The number of the resounce instance belong/s to the defined project.
func (o GetProjectProjectOutput) ResourceCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectProject) int { return v.ResourceCount }).(pulumi.IntOutput)
}

type GetProjectProjectArrayOutput struct{ *pulumi.OutputState }

func (GetProjectProjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectProject)(nil)).Elem()
}

func (o GetProjectProjectArrayOutput) ToGetProjectProjectArrayOutput() GetProjectProjectArrayOutput {
	return o
}

func (o GetProjectProjectArrayOutput) ToGetProjectProjectArrayOutputWithContext(ctx context.Context) GetProjectProjectArrayOutput {
	return o
}

func (o GetProjectProjectArrayOutput) Index(i pulumi.IntInput) GetProjectProjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectProject {
		return vs[0].([]GetProjectProject)[vs[1].(int)]
	}).(GetProjectProjectOutput)
}

type GetZoneZone struct {
	// The ID of availability zone.
	Id string `pulumi:"id"`
}

// GetZoneZoneInput is an input type that accepts GetZoneZoneArgs and GetZoneZoneOutput values.
// You can construct a concrete instance of `GetZoneZoneInput` via:
//
//          GetZoneZoneArgs{...}
type GetZoneZoneInput interface {
	pulumi.Input

	ToGetZoneZoneOutput() GetZoneZoneOutput
	ToGetZoneZoneOutputWithContext(context.Context) GetZoneZoneOutput
}

type GetZoneZoneArgs struct {
	// The ID of availability zone.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetZoneZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZoneZone)(nil)).Elem()
}

func (i GetZoneZoneArgs) ToGetZoneZoneOutput() GetZoneZoneOutput {
	return i.ToGetZoneZoneOutputWithContext(context.Background())
}

func (i GetZoneZoneArgs) ToGetZoneZoneOutputWithContext(ctx context.Context) GetZoneZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZoneZoneOutput)
}

// GetZoneZoneArrayInput is an input type that accepts GetZoneZoneArray and GetZoneZoneArrayOutput values.
// You can construct a concrete instance of `GetZoneZoneArrayInput` via:
//
//          GetZoneZoneArray{ GetZoneZoneArgs{...} }
type GetZoneZoneArrayInput interface {
	pulumi.Input

	ToGetZoneZoneArrayOutput() GetZoneZoneArrayOutput
	ToGetZoneZoneArrayOutputWithContext(context.Context) GetZoneZoneArrayOutput
}

type GetZoneZoneArray []GetZoneZoneInput

func (GetZoneZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZoneZone)(nil)).Elem()
}

func (i GetZoneZoneArray) ToGetZoneZoneArrayOutput() GetZoneZoneArrayOutput {
	return i.ToGetZoneZoneArrayOutputWithContext(context.Background())
}

func (i GetZoneZoneArray) ToGetZoneZoneArrayOutputWithContext(ctx context.Context) GetZoneZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZoneZoneArrayOutput)
}

type GetZoneZoneOutput struct{ *pulumi.OutputState }

func (GetZoneZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZoneZone)(nil)).Elem()
}

func (o GetZoneZoneOutput) ToGetZoneZoneOutput() GetZoneZoneOutput {
	return o
}

func (o GetZoneZoneOutput) ToGetZoneZoneOutputWithContext(ctx context.Context) GetZoneZoneOutput {
	return o
}

// The ID of availability zone.
func (o GetZoneZoneOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneZone) string { return v.Id }).(pulumi.StringOutput)
}

type GetZoneZoneArrayOutput struct{ *pulumi.OutputState }

func (GetZoneZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZoneZone)(nil)).Elem()
}

func (o GetZoneZoneArrayOutput) ToGetZoneZoneArrayOutput() GetZoneZoneArrayOutput {
	return o
}

func (o GetZoneZoneArrayOutput) ToGetZoneZoneArrayOutputWithContext(ctx context.Context) GetZoneZoneArrayOutput {
	return o
}

func (o GetZoneZoneArrayOutput) Index(i pulumi.IntInput) GetZoneZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZoneZone {
		return vs[0].([]GetZoneZone)[vs[1].(int)]
	}).(GetZoneZoneOutput)
}

func init() {
	pulumi.RegisterOutputType(GetProjectProjectOutput{})
	pulumi.RegisterOutputType(GetProjectProjectArrayOutput{})
	pulumi.RegisterOutputType(GetZoneZoneOutput{})
	pulumi.RegisterOutputType(GetZoneZoneArrayOutput{})
}
