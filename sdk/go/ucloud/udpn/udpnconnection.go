// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package udpn

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// UDPN (UCloud Dedicated Private Network)ï¼Œyou can use Dedicated Private Network to achieve high-speed, stable, secure, and dedicated communications between different data centers. The most frequent scenario is to create network connection of clusters across regions.
//
// > **VPC Peering Connections with UDPN Connection** The cross-region Dedicated Private Network must be established if the two VPCs located in different regions are expected to be connected.
//
// > **Note** The additional packet head will be added and included in the overall length of packet due to the tunneling UDPN adopted. Since the number of the bytes of packet head is fixed, the bigger data packet is, the less usage will be taken for the packet head.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-ucloud/sdk/go/ucloud/udpn"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := udpn.NewUDPNConnection(ctx, "example", &udpn.UDPNConnectionArgs{
// 			Bandwidth:  pulumi.Int(2),
// 			PeerRegion: pulumi.String("cn-sh2"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// UDPN connection can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import ucloud:udpn/uDPNConnection:UDPNConnection example udpn-abc123456
// ```
type UDPNConnection struct {
	pulumi.CustomResourceState

	// Maximum bandwidth to the elastic public network, measured in Mbps (Mega bit per second). range from 2 - 1000M. The default value is "1"
	Bandwidth pulumi.IntPtrOutput `pulumi:"bandwidth"`
	// Charge type. Possible values are: "year" as pay by year, "month" as pay by month, "dynamic" as pay by hour. The default value is "month".
	ChargeType pulumi.StringPtrOutput `pulumi:"chargeType"`
	// The time of creation for UDPN connection, formatted by RFC3339 time string.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The duration that you will buy the resource, the default value is "1". It is not required when "dynamic" (pay by hour), the value is "0" when pay by month and the instance will be valid till the last day of that month.
	Duration pulumi.IntPtrOutput `pulumi:"duration"`
	// The expiration time for UDPN connection, formatted by RFC3339 time string.
	ExpireTime pulumi.StringOutput `pulumi:"expireTime"`
	// The correspondent region of dedicated connection, please refer to the region and [availability zone list](https://docs.ucloud.cn/api/summary/regionlist) and [UDPN price list](https://docs.ucloud.cn/network/udpn/udpn_price).
	PeerRegion pulumi.StringOutput `pulumi:"peerRegion"`
}

// NewUDPNConnection registers a new resource with the given unique name, arguments, and options.
func NewUDPNConnection(ctx *pulumi.Context,
	name string, args *UDPNConnectionArgs, opts ...pulumi.ResourceOption) (*UDPNConnection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PeerRegion == nil {
		return nil, errors.New("invalid value for required argument 'PeerRegion'")
	}
	var resource UDPNConnection
	err := ctx.RegisterResource("ucloud:udpn/uDPNConnection:UDPNConnection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUDPNConnection gets an existing UDPNConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUDPNConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UDPNConnectionState, opts ...pulumi.ResourceOption) (*UDPNConnection, error) {
	var resource UDPNConnection
	err := ctx.ReadResource("ucloud:udpn/uDPNConnection:UDPNConnection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UDPNConnection resources.
type udpnconnectionState struct {
	// Maximum bandwidth to the elastic public network, measured in Mbps (Mega bit per second). range from 2 - 1000M. The default value is "1"
	Bandwidth *int `pulumi:"bandwidth"`
	// Charge type. Possible values are: "year" as pay by year, "month" as pay by month, "dynamic" as pay by hour. The default value is "month".
	ChargeType *string `pulumi:"chargeType"`
	// The time of creation for UDPN connection, formatted by RFC3339 time string.
	CreateTime *string `pulumi:"createTime"`
	// The duration that you will buy the resource, the default value is "1". It is not required when "dynamic" (pay by hour), the value is "0" when pay by month and the instance will be valid till the last day of that month.
	Duration *int `pulumi:"duration"`
	// The expiration time for UDPN connection, formatted by RFC3339 time string.
	ExpireTime *string `pulumi:"expireTime"`
	// The correspondent region of dedicated connection, please refer to the region and [availability zone list](https://docs.ucloud.cn/api/summary/regionlist) and [UDPN price list](https://docs.ucloud.cn/network/udpn/udpn_price).
	PeerRegion *string `pulumi:"peerRegion"`
}

type UDPNConnectionState struct {
	// Maximum bandwidth to the elastic public network, measured in Mbps (Mega bit per second). range from 2 - 1000M. The default value is "1"
	Bandwidth pulumi.IntPtrInput
	// Charge type. Possible values are: "year" as pay by year, "month" as pay by month, "dynamic" as pay by hour. The default value is "month".
	ChargeType pulumi.StringPtrInput
	// The time of creation for UDPN connection, formatted by RFC3339 time string.
	CreateTime pulumi.StringPtrInput
	// The duration that you will buy the resource, the default value is "1". It is not required when "dynamic" (pay by hour), the value is "0" when pay by month and the instance will be valid till the last day of that month.
	Duration pulumi.IntPtrInput
	// The expiration time for UDPN connection, formatted by RFC3339 time string.
	ExpireTime pulumi.StringPtrInput
	// The correspondent region of dedicated connection, please refer to the region and [availability zone list](https://docs.ucloud.cn/api/summary/regionlist) and [UDPN price list](https://docs.ucloud.cn/network/udpn/udpn_price).
	PeerRegion pulumi.StringPtrInput
}

func (UDPNConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*udpnconnectionState)(nil)).Elem()
}

type udpnconnectionArgs struct {
	// Maximum bandwidth to the elastic public network, measured in Mbps (Mega bit per second). range from 2 - 1000M. The default value is "1"
	Bandwidth *int `pulumi:"bandwidth"`
	// Charge type. Possible values are: "year" as pay by year, "month" as pay by month, "dynamic" as pay by hour. The default value is "month".
	ChargeType *string `pulumi:"chargeType"`
	// The duration that you will buy the resource, the default value is "1". It is not required when "dynamic" (pay by hour), the value is "0" when pay by month and the instance will be valid till the last day of that month.
	Duration *int `pulumi:"duration"`
	// The correspondent region of dedicated connection, please refer to the region and [availability zone list](https://docs.ucloud.cn/api/summary/regionlist) and [UDPN price list](https://docs.ucloud.cn/network/udpn/udpn_price).
	PeerRegion string `pulumi:"peerRegion"`
}

// The set of arguments for constructing a UDPNConnection resource.
type UDPNConnectionArgs struct {
	// Maximum bandwidth to the elastic public network, measured in Mbps (Mega bit per second). range from 2 - 1000M. The default value is "1"
	Bandwidth pulumi.IntPtrInput
	// Charge type. Possible values are: "year" as pay by year, "month" as pay by month, "dynamic" as pay by hour. The default value is "month".
	ChargeType pulumi.StringPtrInput
	// The duration that you will buy the resource, the default value is "1". It is not required when "dynamic" (pay by hour), the value is "0" when pay by month and the instance will be valid till the last day of that month.
	Duration pulumi.IntPtrInput
	// The correspondent region of dedicated connection, please refer to the region and [availability zone list](https://docs.ucloud.cn/api/summary/regionlist) and [UDPN price list](https://docs.ucloud.cn/network/udpn/udpn_price).
	PeerRegion pulumi.StringInput
}

func (UDPNConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*udpnconnectionArgs)(nil)).Elem()
}

type UDPNConnectionInput interface {
	pulumi.Input

	ToUDPNConnectionOutput() UDPNConnectionOutput
	ToUDPNConnectionOutputWithContext(ctx context.Context) UDPNConnectionOutput
}

func (*UDPNConnection) ElementType() reflect.Type {
	return reflect.TypeOf((*UDPNConnection)(nil))
}

func (i *UDPNConnection) ToUDPNConnectionOutput() UDPNConnectionOutput {
	return i.ToUDPNConnectionOutputWithContext(context.Background())
}

func (i *UDPNConnection) ToUDPNConnectionOutputWithContext(ctx context.Context) UDPNConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UDPNConnectionOutput)
}

func (i *UDPNConnection) ToUDPNConnectionPtrOutput() UDPNConnectionPtrOutput {
	return i.ToUDPNConnectionPtrOutputWithContext(context.Background())
}

func (i *UDPNConnection) ToUDPNConnectionPtrOutputWithContext(ctx context.Context) UDPNConnectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UDPNConnectionPtrOutput)
}

type UDPNConnectionPtrInput interface {
	pulumi.Input

	ToUDPNConnectionPtrOutput() UDPNConnectionPtrOutput
	ToUDPNConnectionPtrOutputWithContext(ctx context.Context) UDPNConnectionPtrOutput
}

type udpnconnectionPtrType UDPNConnectionArgs

func (*udpnconnectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UDPNConnection)(nil))
}

func (i *udpnconnectionPtrType) ToUDPNConnectionPtrOutput() UDPNConnectionPtrOutput {
	return i.ToUDPNConnectionPtrOutputWithContext(context.Background())
}

func (i *udpnconnectionPtrType) ToUDPNConnectionPtrOutputWithContext(ctx context.Context) UDPNConnectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UDPNConnectionPtrOutput)
}

// UDPNConnectionArrayInput is an input type that accepts UDPNConnectionArray and UDPNConnectionArrayOutput values.
// You can construct a concrete instance of `UDPNConnectionArrayInput` via:
//
//          UDPNConnectionArray{ UDPNConnectionArgs{...} }
type UDPNConnectionArrayInput interface {
	pulumi.Input

	ToUDPNConnectionArrayOutput() UDPNConnectionArrayOutput
	ToUDPNConnectionArrayOutputWithContext(context.Context) UDPNConnectionArrayOutput
}

type UDPNConnectionArray []UDPNConnectionInput

func (UDPNConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*UDPNConnection)(nil))
}

func (i UDPNConnectionArray) ToUDPNConnectionArrayOutput() UDPNConnectionArrayOutput {
	return i.ToUDPNConnectionArrayOutputWithContext(context.Background())
}

func (i UDPNConnectionArray) ToUDPNConnectionArrayOutputWithContext(ctx context.Context) UDPNConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UDPNConnectionArrayOutput)
}

// UDPNConnectionMapInput is an input type that accepts UDPNConnectionMap and UDPNConnectionMapOutput values.
// You can construct a concrete instance of `UDPNConnectionMapInput` via:
//
//          UDPNConnectionMap{ "key": UDPNConnectionArgs{...} }
type UDPNConnectionMapInput interface {
	pulumi.Input

	ToUDPNConnectionMapOutput() UDPNConnectionMapOutput
	ToUDPNConnectionMapOutputWithContext(context.Context) UDPNConnectionMapOutput
}

type UDPNConnectionMap map[string]UDPNConnectionInput

func (UDPNConnectionMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*UDPNConnection)(nil))
}

func (i UDPNConnectionMap) ToUDPNConnectionMapOutput() UDPNConnectionMapOutput {
	return i.ToUDPNConnectionMapOutputWithContext(context.Background())
}

func (i UDPNConnectionMap) ToUDPNConnectionMapOutputWithContext(ctx context.Context) UDPNConnectionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UDPNConnectionMapOutput)
}

type UDPNConnectionOutput struct {
	*pulumi.OutputState
}

func (UDPNConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UDPNConnection)(nil))
}

func (o UDPNConnectionOutput) ToUDPNConnectionOutput() UDPNConnectionOutput {
	return o
}

func (o UDPNConnectionOutput) ToUDPNConnectionOutputWithContext(ctx context.Context) UDPNConnectionOutput {
	return o
}

func (o UDPNConnectionOutput) ToUDPNConnectionPtrOutput() UDPNConnectionPtrOutput {
	return o.ToUDPNConnectionPtrOutputWithContext(context.Background())
}

func (o UDPNConnectionOutput) ToUDPNConnectionPtrOutputWithContext(ctx context.Context) UDPNConnectionPtrOutput {
	return o.ApplyT(func(v UDPNConnection) *UDPNConnection {
		return &v
	}).(UDPNConnectionPtrOutput)
}

type UDPNConnectionPtrOutput struct {
	*pulumi.OutputState
}

func (UDPNConnectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UDPNConnection)(nil))
}

func (o UDPNConnectionPtrOutput) ToUDPNConnectionPtrOutput() UDPNConnectionPtrOutput {
	return o
}

func (o UDPNConnectionPtrOutput) ToUDPNConnectionPtrOutputWithContext(ctx context.Context) UDPNConnectionPtrOutput {
	return o
}

type UDPNConnectionArrayOutput struct{ *pulumi.OutputState }

func (UDPNConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UDPNConnection)(nil))
}

func (o UDPNConnectionArrayOutput) ToUDPNConnectionArrayOutput() UDPNConnectionArrayOutput {
	return o
}

func (o UDPNConnectionArrayOutput) ToUDPNConnectionArrayOutputWithContext(ctx context.Context) UDPNConnectionArrayOutput {
	return o
}

func (o UDPNConnectionArrayOutput) Index(i pulumi.IntInput) UDPNConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UDPNConnection {
		return vs[0].([]UDPNConnection)[vs[1].(int)]
	}).(UDPNConnectionOutput)
}

type UDPNConnectionMapOutput struct{ *pulumi.OutputState }

func (UDPNConnectionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UDPNConnection)(nil))
}

func (o UDPNConnectionMapOutput) ToUDPNConnectionMapOutput() UDPNConnectionMapOutput {
	return o
}

func (o UDPNConnectionMapOutput) ToUDPNConnectionMapOutputWithContext(ctx context.Context) UDPNConnectionMapOutput {
	return o
}

func (o UDPNConnectionMapOutput) MapIndex(k pulumi.StringInput) UDPNConnectionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UDPNConnection {
		return vs[0].(map[string]UDPNConnection)[vs[1].(string)]
	}).(UDPNConnectionOutput)
}

func init() {
	pulumi.RegisterOutputType(UDPNConnectionOutput{})
	pulumi.RegisterOutputType(UDPNConnectionPtrOutput{})
	pulumi.RegisterOutputType(UDPNConnectionArrayOutput{})
	pulumi.RegisterOutputType(UDPNConnectionMapOutput{})
}
