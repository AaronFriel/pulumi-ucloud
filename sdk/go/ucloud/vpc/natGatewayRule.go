// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package vpc

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a Nat Gateway resource.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-ucloud/blob/master/website/docs/r/nat_gateway_rule.html.markdown.
type NatGatewayRule struct {
	pulumi.CustomResourceState

	// The private ip of instance bound to the jNAT gateway.
	DstIp pulumi.StringOutput `pulumi:"dstIp"`
	// The range of port numbers of the private ip, range: 1-65535. (eg: `port` or `port1-port2`).
	DstPortRange pulumi.StringOutput `pulumi:"dstPortRange"`
	Name         pulumi.StringOutput `pulumi:"name"`
	// The ID of the Nat Gateway.
	NatGatewayId pulumi.StringOutput `pulumi:"natGatewayId"`
	// The protocol of the Nat Gateway Rule. Possible values: `tcp`, `udp`.
	Protocol pulumi.StringOutput `pulumi:"protocol"`
	// The ID of eip associate to the Nat Gateway.
	SrcEipId pulumi.StringOutput `pulumi:"srcEipId"`
	// The range of port numbers of the eip, range: 1-65535. (eg: `port` or `port1-port2`).
	SrcPortRange pulumi.StringOutput `pulumi:"srcPortRange"`
}

// NewNatGatewayRule registers a new resource with the given unique name, arguments, and options.
func NewNatGatewayRule(ctx *pulumi.Context,
	name string, args *NatGatewayRuleArgs, opts ...pulumi.ResourceOption) (*NatGatewayRule, error) {
	if args == nil || args.DstIp == nil {
		return nil, errors.New("missing required argument 'DstIp'")
	}
	if args == nil || args.DstPortRange == nil {
		return nil, errors.New("missing required argument 'DstPortRange'")
	}
	if args == nil || args.NatGatewayId == nil {
		return nil, errors.New("missing required argument 'NatGatewayId'")
	}
	if args == nil || args.Protocol == nil {
		return nil, errors.New("missing required argument 'Protocol'")
	}
	if args == nil || args.SrcEipId == nil {
		return nil, errors.New("missing required argument 'SrcEipId'")
	}
	if args == nil || args.SrcPortRange == nil {
		return nil, errors.New("missing required argument 'SrcPortRange'")
	}
	if args == nil {
		args = &NatGatewayRuleArgs{}
	}
	var resource NatGatewayRule
	err := ctx.RegisterResource("ucloud:vpc/natGatewayRule:NatGatewayRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNatGatewayRule gets an existing NatGatewayRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNatGatewayRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NatGatewayRuleState, opts ...pulumi.ResourceOption) (*NatGatewayRule, error) {
	var resource NatGatewayRule
	err := ctx.ReadResource("ucloud:vpc/natGatewayRule:NatGatewayRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NatGatewayRule resources.
type natGatewayRuleState struct {
	// The private ip of instance bound to the jNAT gateway.
	DstIp *string `pulumi:"dstIp"`
	// The range of port numbers of the private ip, range: 1-65535. (eg: `port` or `port1-port2`).
	DstPortRange *string `pulumi:"dstPortRange"`
	Name         *string `pulumi:"name"`
	// The ID of the Nat Gateway.
	NatGatewayId *string `pulumi:"natGatewayId"`
	// The protocol of the Nat Gateway Rule. Possible values: `tcp`, `udp`.
	Protocol *string `pulumi:"protocol"`
	// The ID of eip associate to the Nat Gateway.
	SrcEipId *string `pulumi:"srcEipId"`
	// The range of port numbers of the eip, range: 1-65535. (eg: `port` or `port1-port2`).
	SrcPortRange *string `pulumi:"srcPortRange"`
}

type NatGatewayRuleState struct {
	// The private ip of instance bound to the jNAT gateway.
	DstIp pulumi.StringPtrInput
	// The range of port numbers of the private ip, range: 1-65535. (eg: `port` or `port1-port2`).
	DstPortRange pulumi.StringPtrInput
	Name         pulumi.StringPtrInput
	// The ID of the Nat Gateway.
	NatGatewayId pulumi.StringPtrInput
	// The protocol of the Nat Gateway Rule. Possible values: `tcp`, `udp`.
	Protocol pulumi.StringPtrInput
	// The ID of eip associate to the Nat Gateway.
	SrcEipId pulumi.StringPtrInput
	// The range of port numbers of the eip, range: 1-65535. (eg: `port` or `port1-port2`).
	SrcPortRange pulumi.StringPtrInput
}

func (NatGatewayRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*natGatewayRuleState)(nil)).Elem()
}

type natGatewayRuleArgs struct {
	// The private ip of instance bound to the jNAT gateway.
	DstIp string `pulumi:"dstIp"`
	// The range of port numbers of the private ip, range: 1-65535. (eg: `port` or `port1-port2`).
	DstPortRange string  `pulumi:"dstPortRange"`
	Name         *string `pulumi:"name"`
	// The ID of the Nat Gateway.
	NatGatewayId string `pulumi:"natGatewayId"`
	// The protocol of the Nat Gateway Rule. Possible values: `tcp`, `udp`.
	Protocol string `pulumi:"protocol"`
	// The ID of eip associate to the Nat Gateway.
	SrcEipId string `pulumi:"srcEipId"`
	// The range of port numbers of the eip, range: 1-65535. (eg: `port` or `port1-port2`).
	SrcPortRange string `pulumi:"srcPortRange"`
}

// The set of arguments for constructing a NatGatewayRule resource.
type NatGatewayRuleArgs struct {
	// The private ip of instance bound to the jNAT gateway.
	DstIp pulumi.StringInput
	// The range of port numbers of the private ip, range: 1-65535. (eg: `port` or `port1-port2`).
	DstPortRange pulumi.StringInput
	Name         pulumi.StringPtrInput
	// The ID of the Nat Gateway.
	NatGatewayId pulumi.StringInput
	// The protocol of the Nat Gateway Rule. Possible values: `tcp`, `udp`.
	Protocol pulumi.StringInput
	// The ID of eip associate to the Nat Gateway.
	SrcEipId pulumi.StringInput
	// The range of port numbers of the eip, range: 1-65535. (eg: `port` or `port1-port2`).
	SrcPortRange pulumi.StringInput
}

func (NatGatewayRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*natGatewayRuleArgs)(nil)).Elem()
}
