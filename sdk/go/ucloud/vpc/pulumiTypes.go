// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type VpcNetworkInfo struct {
	// The CIDR block of the VPC.
	CidrBlock *string `pulumi:"cidrBlock"`
}

type VpcNetworkInfoInput interface {
	pulumi.Input

	ToVpcNetworkInfoOutput() VpcNetworkInfoOutput
	ToVpcNetworkInfoOutputWithContext(context.Context) VpcNetworkInfoOutput
}

type VpcNetworkInfoArgs struct {
	// The CIDR block of the VPC.
	CidrBlock pulumi.StringPtrInput `pulumi:"cidrBlock"`
}

func (VpcNetworkInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcNetworkInfo)(nil)).Elem()
}

func (i VpcNetworkInfoArgs) ToVpcNetworkInfoOutput() VpcNetworkInfoOutput {
	return i.ToVpcNetworkInfoOutputWithContext(context.Background())
}

func (i VpcNetworkInfoArgs) ToVpcNetworkInfoOutputWithContext(ctx context.Context) VpcNetworkInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcNetworkInfoOutput)
}

type VpcNetworkInfoArrayInput interface {
	pulumi.Input

	ToVpcNetworkInfoArrayOutput() VpcNetworkInfoArrayOutput
	ToVpcNetworkInfoArrayOutputWithContext(context.Context) VpcNetworkInfoArrayOutput
}

type VpcNetworkInfoArray []VpcNetworkInfoInput

func (VpcNetworkInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcNetworkInfo)(nil)).Elem()
}

func (i VpcNetworkInfoArray) ToVpcNetworkInfoArrayOutput() VpcNetworkInfoArrayOutput {
	return i.ToVpcNetworkInfoArrayOutputWithContext(context.Background())
}

func (i VpcNetworkInfoArray) ToVpcNetworkInfoArrayOutputWithContext(ctx context.Context) VpcNetworkInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcNetworkInfoArrayOutput)
}

type VpcNetworkInfoOutput struct{ *pulumi.OutputState }

func (VpcNetworkInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcNetworkInfo)(nil)).Elem()
}

func (o VpcNetworkInfoOutput) ToVpcNetworkInfoOutput() VpcNetworkInfoOutput {
	return o
}

func (o VpcNetworkInfoOutput) ToVpcNetworkInfoOutputWithContext(ctx context.Context) VpcNetworkInfoOutput {
	return o
}

// The CIDR block of the VPC.
func (o VpcNetworkInfoOutput) CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcNetworkInfo) *string { return v.CidrBlock }).(pulumi.StringPtrOutput)
}

type VpcNetworkInfoArrayOutput struct{ *pulumi.OutputState }

func (VpcNetworkInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcNetworkInfo)(nil)).Elem()
}

func (o VpcNetworkInfoArrayOutput) ToVpcNetworkInfoArrayOutput() VpcNetworkInfoArrayOutput {
	return o
}

func (o VpcNetworkInfoArrayOutput) ToVpcNetworkInfoArrayOutputWithContext(ctx context.Context) VpcNetworkInfoArrayOutput {
	return o
}

func (o VpcNetworkInfoArrayOutput) Index(i pulumi.IntInput) VpcNetworkInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpcNetworkInfo {
		return vs[0].([]VpcNetworkInfo)[vs[1].(int)]
	}).(VpcNetworkInfoOutput)
}

type LookupNatGatewaysNatGateway struct {
	// The time of creation for Nat Gateway, formatted in RFC3339 time string.
	CreateTime string `pulumi:"createTime"`
	// The ID of Nat Gateway.
	Id string `pulumi:"id"`
	// It is a nested type which documented below.
	IpSets []LookupNatGatewaysNatGatewayIpSet `pulumi:"ipSets"`
	// The name of the Nat Gateway.
	Name string `pulumi:"name"`
	// The remarks of Nat Gateway.
	Remark        string `pulumi:"remark"`
	SecurityGroup string `pulumi:"securityGroup"`
	// The list of subnet ID under the VPC.
	// * `securityGroup` -The ID of the associated security group.
	SubnetIds []string `pulumi:"subnetIds"`
	// A tag assigned to the Nat Gateway.
	Tag string `pulumi:"tag"`
	// The ID of VPC linked to the Nat Gateway.
	VpcId string `pulumi:"vpcId"`
}

type LookupNatGatewaysNatGatewayInput interface {
	pulumi.Input

	ToLookupNatGatewaysNatGatewayOutput() LookupNatGatewaysNatGatewayOutput
	ToLookupNatGatewaysNatGatewayOutputWithContext(context.Context) LookupNatGatewaysNatGatewayOutput
}

type LookupNatGatewaysNatGatewayArgs struct {
	// The time of creation for Nat Gateway, formatted in RFC3339 time string.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The ID of Nat Gateway.
	Id pulumi.StringInput `pulumi:"id"`
	// It is a nested type which documented below.
	IpSets LookupNatGatewaysNatGatewayIpSetArrayInput `pulumi:"ipSets"`
	// The name of the Nat Gateway.
	Name pulumi.StringInput `pulumi:"name"`
	// The remarks of Nat Gateway.
	Remark        pulumi.StringInput `pulumi:"remark"`
	SecurityGroup pulumi.StringInput `pulumi:"securityGroup"`
	// The list of subnet ID under the VPC.
	// * `securityGroup` -The ID of the associated security group.
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
	// A tag assigned to the Nat Gateway.
	Tag pulumi.StringInput `pulumi:"tag"`
	// The ID of VPC linked to the Nat Gateway.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (LookupNatGatewaysNatGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNatGatewaysNatGateway)(nil)).Elem()
}

func (i LookupNatGatewaysNatGatewayArgs) ToLookupNatGatewaysNatGatewayOutput() LookupNatGatewaysNatGatewayOutput {
	return i.ToLookupNatGatewaysNatGatewayOutputWithContext(context.Background())
}

func (i LookupNatGatewaysNatGatewayArgs) ToLookupNatGatewaysNatGatewayOutputWithContext(ctx context.Context) LookupNatGatewaysNatGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LookupNatGatewaysNatGatewayOutput)
}

type LookupNatGatewaysNatGatewayArrayInput interface {
	pulumi.Input

	ToLookupNatGatewaysNatGatewayArrayOutput() LookupNatGatewaysNatGatewayArrayOutput
	ToLookupNatGatewaysNatGatewayArrayOutputWithContext(context.Context) LookupNatGatewaysNatGatewayArrayOutput
}

type LookupNatGatewaysNatGatewayArray []LookupNatGatewaysNatGatewayInput

func (LookupNatGatewaysNatGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LookupNatGatewaysNatGateway)(nil)).Elem()
}

func (i LookupNatGatewaysNatGatewayArray) ToLookupNatGatewaysNatGatewayArrayOutput() LookupNatGatewaysNatGatewayArrayOutput {
	return i.ToLookupNatGatewaysNatGatewayArrayOutputWithContext(context.Background())
}

func (i LookupNatGatewaysNatGatewayArray) ToLookupNatGatewaysNatGatewayArrayOutputWithContext(ctx context.Context) LookupNatGatewaysNatGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LookupNatGatewaysNatGatewayArrayOutput)
}

type LookupNatGatewaysNatGatewayOutput struct{ *pulumi.OutputState }

func (LookupNatGatewaysNatGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNatGatewaysNatGateway)(nil)).Elem()
}

func (o LookupNatGatewaysNatGatewayOutput) ToLookupNatGatewaysNatGatewayOutput() LookupNatGatewaysNatGatewayOutput {
	return o
}

func (o LookupNatGatewaysNatGatewayOutput) ToLookupNatGatewaysNatGatewayOutputWithContext(ctx context.Context) LookupNatGatewaysNatGatewayOutput {
	return o
}

// The time of creation for Nat Gateway, formatted in RFC3339 time string.
func (o LookupNatGatewaysNatGatewayOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNatGatewaysNatGateway) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The ID of Nat Gateway.
func (o LookupNatGatewaysNatGatewayOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNatGatewaysNatGateway) string { return v.Id }).(pulumi.StringOutput)
}

// It is a nested type which documented below.
func (o LookupNatGatewaysNatGatewayOutput) IpSets() LookupNatGatewaysNatGatewayIpSetArrayOutput {
	return o.ApplyT(func(v LookupNatGatewaysNatGateway) []LookupNatGatewaysNatGatewayIpSet { return v.IpSets }).(LookupNatGatewaysNatGatewayIpSetArrayOutput)
}

// The name of the Nat Gateway.
func (o LookupNatGatewaysNatGatewayOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNatGatewaysNatGateway) string { return v.Name }).(pulumi.StringOutput)
}

// The remarks of Nat Gateway.
func (o LookupNatGatewaysNatGatewayOutput) Remark() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNatGatewaysNatGateway) string { return v.Remark }).(pulumi.StringOutput)
}

func (o LookupNatGatewaysNatGatewayOutput) SecurityGroup() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNatGatewaysNatGateway) string { return v.SecurityGroup }).(pulumi.StringOutput)
}

// The list of subnet ID under the VPC.
// * `securityGroup` -The ID of the associated security group.
func (o LookupNatGatewaysNatGatewayOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupNatGatewaysNatGateway) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

// A tag assigned to the Nat Gateway.
func (o LookupNatGatewaysNatGatewayOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNatGatewaysNatGateway) string { return v.Tag }).(pulumi.StringOutput)
}

// The ID of VPC linked to the Nat Gateway.
func (o LookupNatGatewaysNatGatewayOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNatGatewaysNatGateway) string { return v.VpcId }).(pulumi.StringOutput)
}

type LookupNatGatewaysNatGatewayArrayOutput struct{ *pulumi.OutputState }

func (LookupNatGatewaysNatGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LookupNatGatewaysNatGateway)(nil)).Elem()
}

func (o LookupNatGatewaysNatGatewayArrayOutput) ToLookupNatGatewaysNatGatewayArrayOutput() LookupNatGatewaysNatGatewayArrayOutput {
	return o
}

func (o LookupNatGatewaysNatGatewayArrayOutput) ToLookupNatGatewaysNatGatewayArrayOutputWithContext(ctx context.Context) LookupNatGatewaysNatGatewayArrayOutput {
	return o
}

func (o LookupNatGatewaysNatGatewayArrayOutput) Index(i pulumi.IntInput) LookupNatGatewaysNatGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LookupNatGatewaysNatGateway {
		return vs[0].([]LookupNatGatewaysNatGateway)[vs[1].(int)]
	}).(LookupNatGatewaysNatGatewayOutput)
}

type LookupNatGatewaysNatGatewayIpSet struct {
	// Type of Elastic IP routes.
	InternetType string `pulumi:"internetType"`
	// Elastic IP address.
	Ip string `pulumi:"ip"`
}

type LookupNatGatewaysNatGatewayIpSetInput interface {
	pulumi.Input

	ToLookupNatGatewaysNatGatewayIpSetOutput() LookupNatGatewaysNatGatewayIpSetOutput
	ToLookupNatGatewaysNatGatewayIpSetOutputWithContext(context.Context) LookupNatGatewaysNatGatewayIpSetOutput
}

type LookupNatGatewaysNatGatewayIpSetArgs struct {
	// Type of Elastic IP routes.
	InternetType pulumi.StringInput `pulumi:"internetType"`
	// Elastic IP address.
	Ip pulumi.StringInput `pulumi:"ip"`
}

func (LookupNatGatewaysNatGatewayIpSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNatGatewaysNatGatewayIpSet)(nil)).Elem()
}

func (i LookupNatGatewaysNatGatewayIpSetArgs) ToLookupNatGatewaysNatGatewayIpSetOutput() LookupNatGatewaysNatGatewayIpSetOutput {
	return i.ToLookupNatGatewaysNatGatewayIpSetOutputWithContext(context.Background())
}

func (i LookupNatGatewaysNatGatewayIpSetArgs) ToLookupNatGatewaysNatGatewayIpSetOutputWithContext(ctx context.Context) LookupNatGatewaysNatGatewayIpSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LookupNatGatewaysNatGatewayIpSetOutput)
}

type LookupNatGatewaysNatGatewayIpSetArrayInput interface {
	pulumi.Input

	ToLookupNatGatewaysNatGatewayIpSetArrayOutput() LookupNatGatewaysNatGatewayIpSetArrayOutput
	ToLookupNatGatewaysNatGatewayIpSetArrayOutputWithContext(context.Context) LookupNatGatewaysNatGatewayIpSetArrayOutput
}

type LookupNatGatewaysNatGatewayIpSetArray []LookupNatGatewaysNatGatewayIpSetInput

func (LookupNatGatewaysNatGatewayIpSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LookupNatGatewaysNatGatewayIpSet)(nil)).Elem()
}

func (i LookupNatGatewaysNatGatewayIpSetArray) ToLookupNatGatewaysNatGatewayIpSetArrayOutput() LookupNatGatewaysNatGatewayIpSetArrayOutput {
	return i.ToLookupNatGatewaysNatGatewayIpSetArrayOutputWithContext(context.Background())
}

func (i LookupNatGatewaysNatGatewayIpSetArray) ToLookupNatGatewaysNatGatewayIpSetArrayOutputWithContext(ctx context.Context) LookupNatGatewaysNatGatewayIpSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LookupNatGatewaysNatGatewayIpSetArrayOutput)
}

type LookupNatGatewaysNatGatewayIpSetOutput struct{ *pulumi.OutputState }

func (LookupNatGatewaysNatGatewayIpSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNatGatewaysNatGatewayIpSet)(nil)).Elem()
}

func (o LookupNatGatewaysNatGatewayIpSetOutput) ToLookupNatGatewaysNatGatewayIpSetOutput() LookupNatGatewaysNatGatewayIpSetOutput {
	return o
}

func (o LookupNatGatewaysNatGatewayIpSetOutput) ToLookupNatGatewaysNatGatewayIpSetOutputWithContext(ctx context.Context) LookupNatGatewaysNatGatewayIpSetOutput {
	return o
}

// Type of Elastic IP routes.
func (o LookupNatGatewaysNatGatewayIpSetOutput) InternetType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNatGatewaysNatGatewayIpSet) string { return v.InternetType }).(pulumi.StringOutput)
}

// Elastic IP address.
func (o LookupNatGatewaysNatGatewayIpSetOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNatGatewaysNatGatewayIpSet) string { return v.Ip }).(pulumi.StringOutput)
}

type LookupNatGatewaysNatGatewayIpSetArrayOutput struct{ *pulumi.OutputState }

func (LookupNatGatewaysNatGatewayIpSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LookupNatGatewaysNatGatewayIpSet)(nil)).Elem()
}

func (o LookupNatGatewaysNatGatewayIpSetArrayOutput) ToLookupNatGatewaysNatGatewayIpSetArrayOutput() LookupNatGatewaysNatGatewayIpSetArrayOutput {
	return o
}

func (o LookupNatGatewaysNatGatewayIpSetArrayOutput) ToLookupNatGatewaysNatGatewayIpSetArrayOutputWithContext(ctx context.Context) LookupNatGatewaysNatGatewayIpSetArrayOutput {
	return o
}

func (o LookupNatGatewaysNatGatewayIpSetArrayOutput) Index(i pulumi.IntInput) LookupNatGatewaysNatGatewayIpSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LookupNatGatewaysNatGatewayIpSet {
		return vs[0].([]LookupNatGatewaysNatGatewayIpSet)[vs[1].(int)]
	}).(LookupNatGatewaysNatGatewayIpSetOutput)
}

type LookupSubnetsSubnet struct {
	// The cidr block of the desired Subnet.
	CidrBlock string `pulumi:"cidrBlock"`
	// The time of creation of Subnet, formatted in RFC3339 time string.
	CreateTime string `pulumi:"createTime"`
	// The ID of Subnet.
	Id string `pulumi:"id"`
	// The name of Subnet.
	Name string `pulumi:"name"`
	// The remark of the Subnet.
	Remark string `pulumi:"remark"`
	// A tag assigned to Subnet.
	Tag string `pulumi:"tag"`
}

type LookupSubnetsSubnetInput interface {
	pulumi.Input

	ToLookupSubnetsSubnetOutput() LookupSubnetsSubnetOutput
	ToLookupSubnetsSubnetOutputWithContext(context.Context) LookupSubnetsSubnetOutput
}

type LookupSubnetsSubnetArgs struct {
	// The cidr block of the desired Subnet.
	CidrBlock pulumi.StringInput `pulumi:"cidrBlock"`
	// The time of creation of Subnet, formatted in RFC3339 time string.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The ID of Subnet.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of Subnet.
	Name pulumi.StringInput `pulumi:"name"`
	// The remark of the Subnet.
	Remark pulumi.StringInput `pulumi:"remark"`
	// A tag assigned to Subnet.
	Tag pulumi.StringInput `pulumi:"tag"`
}

func (LookupSubnetsSubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSubnetsSubnet)(nil)).Elem()
}

func (i LookupSubnetsSubnetArgs) ToLookupSubnetsSubnetOutput() LookupSubnetsSubnetOutput {
	return i.ToLookupSubnetsSubnetOutputWithContext(context.Background())
}

func (i LookupSubnetsSubnetArgs) ToLookupSubnetsSubnetOutputWithContext(ctx context.Context) LookupSubnetsSubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LookupSubnetsSubnetOutput)
}

type LookupSubnetsSubnetArrayInput interface {
	pulumi.Input

	ToLookupSubnetsSubnetArrayOutput() LookupSubnetsSubnetArrayOutput
	ToLookupSubnetsSubnetArrayOutputWithContext(context.Context) LookupSubnetsSubnetArrayOutput
}

type LookupSubnetsSubnetArray []LookupSubnetsSubnetInput

func (LookupSubnetsSubnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LookupSubnetsSubnet)(nil)).Elem()
}

func (i LookupSubnetsSubnetArray) ToLookupSubnetsSubnetArrayOutput() LookupSubnetsSubnetArrayOutput {
	return i.ToLookupSubnetsSubnetArrayOutputWithContext(context.Background())
}

func (i LookupSubnetsSubnetArray) ToLookupSubnetsSubnetArrayOutputWithContext(ctx context.Context) LookupSubnetsSubnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LookupSubnetsSubnetArrayOutput)
}

type LookupSubnetsSubnetOutput struct{ *pulumi.OutputState }

func (LookupSubnetsSubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSubnetsSubnet)(nil)).Elem()
}

func (o LookupSubnetsSubnetOutput) ToLookupSubnetsSubnetOutput() LookupSubnetsSubnetOutput {
	return o
}

func (o LookupSubnetsSubnetOutput) ToLookupSubnetsSubnetOutputWithContext(ctx context.Context) LookupSubnetsSubnetOutput {
	return o
}

// The cidr block of the desired Subnet.
func (o LookupSubnetsSubnetOutput) CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubnetsSubnet) string { return v.CidrBlock }).(pulumi.StringOutput)
}

// The time of creation of Subnet, formatted in RFC3339 time string.
func (o LookupSubnetsSubnetOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubnetsSubnet) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The ID of Subnet.
func (o LookupSubnetsSubnetOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubnetsSubnet) string { return v.Id }).(pulumi.StringOutput)
}

// The name of Subnet.
func (o LookupSubnetsSubnetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubnetsSubnet) string { return v.Name }).(pulumi.StringOutput)
}

// The remark of the Subnet.
func (o LookupSubnetsSubnetOutput) Remark() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubnetsSubnet) string { return v.Remark }).(pulumi.StringOutput)
}

// A tag assigned to Subnet.
func (o LookupSubnetsSubnetOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubnetsSubnet) string { return v.Tag }).(pulumi.StringOutput)
}

type LookupSubnetsSubnetArrayOutput struct{ *pulumi.OutputState }

func (LookupSubnetsSubnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LookupSubnetsSubnet)(nil)).Elem()
}

func (o LookupSubnetsSubnetArrayOutput) ToLookupSubnetsSubnetArrayOutput() LookupSubnetsSubnetArrayOutput {
	return o
}

func (o LookupSubnetsSubnetArrayOutput) ToLookupSubnetsSubnetArrayOutputWithContext(ctx context.Context) LookupSubnetsSubnetArrayOutput {
	return o
}

func (o LookupSubnetsSubnetArrayOutput) Index(i pulumi.IntInput) LookupSubnetsSubnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LookupSubnetsSubnet {
		return vs[0].([]LookupSubnetsSubnet)[vs[1].(int)]
	}).(LookupSubnetsSubnetOutput)
}

type LookupVpcsVpc struct {
	// The CIDR blocks of VPC.
	CidrBlocks []string `pulumi:"cidrBlocks"`
	// The time of creation for VPC, formatted in RFC3339 time string.
	CreateTime string `pulumi:"createTime"`
	// The ID of VPC.
	Id string `pulumi:"id"`
	// The name of VPC.
	Name string `pulumi:"name"`
	// A tag assigned to VPC.
	Tag string `pulumi:"tag"`
	// The time whenever there is a change made to VPC, formatted in RFC3339 time string.
	UpdateTime string `pulumi:"updateTime"`
}

type LookupVpcsVpcInput interface {
	pulumi.Input

	ToLookupVpcsVpcOutput() LookupVpcsVpcOutput
	ToLookupVpcsVpcOutputWithContext(context.Context) LookupVpcsVpcOutput
}

type LookupVpcsVpcArgs struct {
	// The CIDR blocks of VPC.
	CidrBlocks pulumi.StringArrayInput `pulumi:"cidrBlocks"`
	// The time of creation for VPC, formatted in RFC3339 time string.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The ID of VPC.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of VPC.
	Name pulumi.StringInput `pulumi:"name"`
	// A tag assigned to VPC.
	Tag pulumi.StringInput `pulumi:"tag"`
	// The time whenever there is a change made to VPC, formatted in RFC3339 time string.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (LookupVpcsVpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpcsVpc)(nil)).Elem()
}

func (i LookupVpcsVpcArgs) ToLookupVpcsVpcOutput() LookupVpcsVpcOutput {
	return i.ToLookupVpcsVpcOutputWithContext(context.Background())
}

func (i LookupVpcsVpcArgs) ToLookupVpcsVpcOutputWithContext(ctx context.Context) LookupVpcsVpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LookupVpcsVpcOutput)
}

type LookupVpcsVpcArrayInput interface {
	pulumi.Input

	ToLookupVpcsVpcArrayOutput() LookupVpcsVpcArrayOutput
	ToLookupVpcsVpcArrayOutputWithContext(context.Context) LookupVpcsVpcArrayOutput
}

type LookupVpcsVpcArray []LookupVpcsVpcInput

func (LookupVpcsVpcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LookupVpcsVpc)(nil)).Elem()
}

func (i LookupVpcsVpcArray) ToLookupVpcsVpcArrayOutput() LookupVpcsVpcArrayOutput {
	return i.ToLookupVpcsVpcArrayOutputWithContext(context.Background())
}

func (i LookupVpcsVpcArray) ToLookupVpcsVpcArrayOutputWithContext(ctx context.Context) LookupVpcsVpcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LookupVpcsVpcArrayOutput)
}

type LookupVpcsVpcOutput struct{ *pulumi.OutputState }

func (LookupVpcsVpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpcsVpc)(nil)).Elem()
}

func (o LookupVpcsVpcOutput) ToLookupVpcsVpcOutput() LookupVpcsVpcOutput {
	return o
}

func (o LookupVpcsVpcOutput) ToLookupVpcsVpcOutputWithContext(ctx context.Context) LookupVpcsVpcOutput {
	return o
}

// The CIDR blocks of VPC.
func (o LookupVpcsVpcOutput) CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVpcsVpc) []string { return v.CidrBlocks }).(pulumi.StringArrayOutput)
}

// The time of creation for VPC, formatted in RFC3339 time string.
func (o LookupVpcsVpcOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcsVpc) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The ID of VPC.
func (o LookupVpcsVpcOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcsVpc) string { return v.Id }).(pulumi.StringOutput)
}

// The name of VPC.
func (o LookupVpcsVpcOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcsVpc) string { return v.Name }).(pulumi.StringOutput)
}

// A tag assigned to VPC.
func (o LookupVpcsVpcOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcsVpc) string { return v.Tag }).(pulumi.StringOutput)
}

// The time whenever there is a change made to VPC, formatted in RFC3339 time string.
func (o LookupVpcsVpcOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcsVpc) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type LookupVpcsVpcArrayOutput struct{ *pulumi.OutputState }

func (LookupVpcsVpcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LookupVpcsVpc)(nil)).Elem()
}

func (o LookupVpcsVpcArrayOutput) ToLookupVpcsVpcArrayOutput() LookupVpcsVpcArrayOutput {
	return o
}

func (o LookupVpcsVpcArrayOutput) ToLookupVpcsVpcArrayOutputWithContext(ctx context.Context) LookupVpcsVpcArrayOutput {
	return o
}

func (o LookupVpcsVpcArrayOutput) Index(i pulumi.IntInput) LookupVpcsVpcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LookupVpcsVpc {
		return vs[0].([]LookupVpcsVpc)[vs[1].(int)]
	}).(LookupVpcsVpcOutput)
}

func init() {
	pulumi.RegisterOutputType(VpcNetworkInfoOutput{})
	pulumi.RegisterOutputType(VpcNetworkInfoArrayOutput{})
	pulumi.RegisterOutputType(LookupNatGatewaysNatGatewayOutput{})
	pulumi.RegisterOutputType(LookupNatGatewaysNatGatewayArrayOutput{})
	pulumi.RegisterOutputType(LookupNatGatewaysNatGatewayIpSetOutput{})
	pulumi.RegisterOutputType(LookupNatGatewaysNatGatewayIpSetArrayOutput{})
	pulumi.RegisterOutputType(LookupSubnetsSubnetOutput{})
	pulumi.RegisterOutputType(LookupSubnetsSubnetArrayOutput{})
	pulumi.RegisterOutputType(LookupVpcsVpcOutput{})
	pulumi.RegisterOutputType(LookupVpcsVpcArrayOutput{})
}
