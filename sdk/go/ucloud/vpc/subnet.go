// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package vpc

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a Subnet resource under VPC resource.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-ucloud/blob/master/website/docs/r/subnet.html.markdown.
type Subnet struct {
	pulumi.CustomResourceState

	// The cidr block of the desired subnet, format in "0.0.0.0/0", such as: `192.168.0.0/24`.
	CidrBlock pulumi.StringOutput `pulumi:"cidrBlock"`
	// The time of creation of subnet, formatted in RFC3339 time string.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	Name       pulumi.StringOutput `pulumi:"name"`
	// The remarks of the subnet. (Default: `""`).
	Remark pulumi.StringOutput `pulumi:"remark"`
	// A tag assigned to subnet, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
	Tag pulumi.StringPtrOutput `pulumi:"tag"`
	// The id of the VPC that the desired subnet belongs to.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
}

// NewSubnet registers a new resource with the given unique name, arguments, and options.
func NewSubnet(ctx *pulumi.Context,
	name string, args *SubnetArgs, opts ...pulumi.ResourceOption) (*Subnet, error) {
	if args == nil || args.CidrBlock == nil {
		return nil, errors.New("missing required argument 'CidrBlock'")
	}
	if args == nil || args.VpcId == nil {
		return nil, errors.New("missing required argument 'VpcId'")
	}
	if args == nil {
		args = &SubnetArgs{}
	}
	var resource Subnet
	err := ctx.RegisterResource("ucloud:vpc/subnet:Subnet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSubnet gets an existing Subnet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSubnet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SubnetState, opts ...pulumi.ResourceOption) (*Subnet, error) {
	var resource Subnet
	err := ctx.ReadResource("ucloud:vpc/subnet:Subnet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Subnet resources.
type subnetState struct {
	// The cidr block of the desired subnet, format in "0.0.0.0/0", such as: `192.168.0.0/24`.
	CidrBlock *string `pulumi:"cidrBlock"`
	// The time of creation of subnet, formatted in RFC3339 time string.
	CreateTime *string `pulumi:"createTime"`
	Name       *string `pulumi:"name"`
	// The remarks of the subnet. (Default: `""`).
	Remark *string `pulumi:"remark"`
	// A tag assigned to subnet, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
	Tag *string `pulumi:"tag"`
	// The id of the VPC that the desired subnet belongs to.
	VpcId *string `pulumi:"vpcId"`
}

type SubnetState struct {
	// The cidr block of the desired subnet, format in "0.0.0.0/0", such as: `192.168.0.0/24`.
	CidrBlock pulumi.StringPtrInput
	// The time of creation of subnet, formatted in RFC3339 time string.
	CreateTime pulumi.StringPtrInput
	Name       pulumi.StringPtrInput
	// The remarks of the subnet. (Default: `""`).
	Remark pulumi.StringPtrInput
	// A tag assigned to subnet, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
	Tag pulumi.StringPtrInput
	// The id of the VPC that the desired subnet belongs to.
	VpcId pulumi.StringPtrInput
}

func (SubnetState) ElementType() reflect.Type {
	return reflect.TypeOf((*subnetState)(nil)).Elem()
}

type subnetArgs struct {
	// The cidr block of the desired subnet, format in "0.0.0.0/0", such as: `192.168.0.0/24`.
	CidrBlock string  `pulumi:"cidrBlock"`
	Name      *string `pulumi:"name"`
	// The remarks of the subnet. (Default: `""`).
	Remark *string `pulumi:"remark"`
	// A tag assigned to subnet, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
	Tag *string `pulumi:"tag"`
	// The id of the VPC that the desired subnet belongs to.
	VpcId string `pulumi:"vpcId"`
}

// The set of arguments for constructing a Subnet resource.
type SubnetArgs struct {
	// The cidr block of the desired subnet, format in "0.0.0.0/0", such as: `192.168.0.0/24`.
	CidrBlock pulumi.StringInput
	Name      pulumi.StringPtrInput
	// The remarks of the subnet. (Default: `""`).
	Remark pulumi.StringPtrInput
	// A tag assigned to subnet, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
	Tag pulumi.StringPtrInput
	// The id of the VPC that the desired subnet belongs to.
	VpcId pulumi.StringInput
}

func (SubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*subnetArgs)(nil)).Elem()
}
