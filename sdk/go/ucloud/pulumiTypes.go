// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package ucloud

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type LookupProjectsProject struct {
	// The time of creation for instance, formatted in RFC3339 time string.
	CreateTime string `pulumi:"createTime"`
	// The ID of project defined.
	Id string `pulumi:"id"`
	// The number of members belongs to the defined project.
	MemberCount int `pulumi:"memberCount"`
	// The name of the defined project.
	Name string `pulumi:"name"`
	// The ID of the parent project where the sub project belongs to.
	ParentId string `pulumi:"parentId"`
	// The name of the parent project where the sub project belongs to.
	ParentName string `pulumi:"parentName"`
	// The number of the resounce instance belong/s to the defined project.
	ResourceCount int `pulumi:"resourceCount"`
}

type LookupProjectsProjectInput interface {
	pulumi.Input

	ToLookupProjectsProjectOutput() LookupProjectsProjectOutput
	ToLookupProjectsProjectOutputWithContext(context.Context) LookupProjectsProjectOutput
}

type LookupProjectsProjectArgs struct {
	// The time of creation for instance, formatted in RFC3339 time string.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The ID of project defined.
	Id pulumi.StringInput `pulumi:"id"`
	// The number of members belongs to the defined project.
	MemberCount pulumi.IntInput `pulumi:"memberCount"`
	// The name of the defined project.
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of the parent project where the sub project belongs to.
	ParentId pulumi.StringInput `pulumi:"parentId"`
	// The name of the parent project where the sub project belongs to.
	ParentName pulumi.StringInput `pulumi:"parentName"`
	// The number of the resounce instance belong/s to the defined project.
	ResourceCount pulumi.IntInput `pulumi:"resourceCount"`
}

func (LookupProjectsProjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProjectsProject)(nil)).Elem()
}

func (i LookupProjectsProjectArgs) ToLookupProjectsProjectOutput() LookupProjectsProjectOutput {
	return i.ToLookupProjectsProjectOutputWithContext(context.Background())
}

func (i LookupProjectsProjectArgs) ToLookupProjectsProjectOutputWithContext(ctx context.Context) LookupProjectsProjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LookupProjectsProjectOutput)
}

type LookupProjectsProjectArrayInput interface {
	pulumi.Input

	ToLookupProjectsProjectArrayOutput() LookupProjectsProjectArrayOutput
	ToLookupProjectsProjectArrayOutputWithContext(context.Context) LookupProjectsProjectArrayOutput
}

type LookupProjectsProjectArray []LookupProjectsProjectInput

func (LookupProjectsProjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LookupProjectsProject)(nil)).Elem()
}

func (i LookupProjectsProjectArray) ToLookupProjectsProjectArrayOutput() LookupProjectsProjectArrayOutput {
	return i.ToLookupProjectsProjectArrayOutputWithContext(context.Background())
}

func (i LookupProjectsProjectArray) ToLookupProjectsProjectArrayOutputWithContext(ctx context.Context) LookupProjectsProjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LookupProjectsProjectArrayOutput)
}

type LookupProjectsProjectOutput struct{ *pulumi.OutputState }

func (LookupProjectsProjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProjectsProject)(nil)).Elem()
}

func (o LookupProjectsProjectOutput) ToLookupProjectsProjectOutput() LookupProjectsProjectOutput {
	return o
}

func (o LookupProjectsProjectOutput) ToLookupProjectsProjectOutputWithContext(ctx context.Context) LookupProjectsProjectOutput {
	return o
}

// The time of creation for instance, formatted in RFC3339 time string.
func (o LookupProjectsProjectOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectsProject) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The ID of project defined.
func (o LookupProjectsProjectOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectsProject) string { return v.Id }).(pulumi.StringOutput)
}

// The number of members belongs to the defined project.
func (o LookupProjectsProjectOutput) MemberCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupProjectsProject) int { return v.MemberCount }).(pulumi.IntOutput)
}

// The name of the defined project.
func (o LookupProjectsProjectOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectsProject) string { return v.Name }).(pulumi.StringOutput)
}

// The ID of the parent project where the sub project belongs to.
func (o LookupProjectsProjectOutput) ParentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectsProject) string { return v.ParentId }).(pulumi.StringOutput)
}

// The name of the parent project where the sub project belongs to.
func (o LookupProjectsProjectOutput) ParentName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectsProject) string { return v.ParentName }).(pulumi.StringOutput)
}

// The number of the resounce instance belong/s to the defined project.
func (o LookupProjectsProjectOutput) ResourceCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupProjectsProject) int { return v.ResourceCount }).(pulumi.IntOutput)
}

type LookupProjectsProjectArrayOutput struct{ *pulumi.OutputState }

func (LookupProjectsProjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LookupProjectsProject)(nil)).Elem()
}

func (o LookupProjectsProjectArrayOutput) ToLookupProjectsProjectArrayOutput() LookupProjectsProjectArrayOutput {
	return o
}

func (o LookupProjectsProjectArrayOutput) ToLookupProjectsProjectArrayOutputWithContext(ctx context.Context) LookupProjectsProjectArrayOutput {
	return o
}

func (o LookupProjectsProjectArrayOutput) Index(i pulumi.IntInput) LookupProjectsProjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LookupProjectsProject {
		return vs[0].([]LookupProjectsProject)[vs[1].(int)]
	}).(LookupProjectsProjectOutput)
}

type LookupZonesZone struct {
	// The ID of availability zone.
	Id string `pulumi:"id"`
}

type LookupZonesZoneInput interface {
	pulumi.Input

	ToLookupZonesZoneOutput() LookupZonesZoneOutput
	ToLookupZonesZoneOutputWithContext(context.Context) LookupZonesZoneOutput
}

type LookupZonesZoneArgs struct {
	// The ID of availability zone.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupZonesZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZonesZone)(nil)).Elem()
}

func (i LookupZonesZoneArgs) ToLookupZonesZoneOutput() LookupZonesZoneOutput {
	return i.ToLookupZonesZoneOutputWithContext(context.Background())
}

func (i LookupZonesZoneArgs) ToLookupZonesZoneOutputWithContext(ctx context.Context) LookupZonesZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LookupZonesZoneOutput)
}

type LookupZonesZoneArrayInput interface {
	pulumi.Input

	ToLookupZonesZoneArrayOutput() LookupZonesZoneArrayOutput
	ToLookupZonesZoneArrayOutputWithContext(context.Context) LookupZonesZoneArrayOutput
}

type LookupZonesZoneArray []LookupZonesZoneInput

func (LookupZonesZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LookupZonesZone)(nil)).Elem()
}

func (i LookupZonesZoneArray) ToLookupZonesZoneArrayOutput() LookupZonesZoneArrayOutput {
	return i.ToLookupZonesZoneArrayOutputWithContext(context.Background())
}

func (i LookupZonesZoneArray) ToLookupZonesZoneArrayOutputWithContext(ctx context.Context) LookupZonesZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LookupZonesZoneArrayOutput)
}

type LookupZonesZoneOutput struct{ *pulumi.OutputState }

func (LookupZonesZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZonesZone)(nil)).Elem()
}

func (o LookupZonesZoneOutput) ToLookupZonesZoneOutput() LookupZonesZoneOutput {
	return o
}

func (o LookupZonesZoneOutput) ToLookupZonesZoneOutputWithContext(ctx context.Context) LookupZonesZoneOutput {
	return o
}

// The ID of availability zone.
func (o LookupZonesZoneOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZonesZone) string { return v.Id }).(pulumi.StringOutput)
}

type LookupZonesZoneArrayOutput struct{ *pulumi.OutputState }

func (LookupZonesZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LookupZonesZone)(nil)).Elem()
}

func (o LookupZonesZoneArrayOutput) ToLookupZonesZoneArrayOutput() LookupZonesZoneArrayOutput {
	return o
}

func (o LookupZonesZoneArrayOutput) ToLookupZonesZoneArrayOutputWithContext(ctx context.Context) LookupZonesZoneArrayOutput {
	return o
}

func (o LookupZonesZoneArrayOutput) Index(i pulumi.IntInput) LookupZonesZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LookupZonesZone {
		return vs[0].([]LookupZonesZone)[vs[1].(int)]
	}).(LookupZonesZoneOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupProjectsProjectOutput{})
	pulumi.RegisterOutputType(LookupProjectsProjectArrayOutput{})
	pulumi.RegisterOutputType(LookupZonesZoneOutput{})
	pulumi.RegisterOutputType(LookupZonesZoneArrayOutput{})
}
