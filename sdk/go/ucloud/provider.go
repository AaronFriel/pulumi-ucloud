// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package ucloud

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// The provider type for the ucloud package. By default, resources use package-wide configuration
// settings, however an explicit `Provider` instance may be created and passed during resource
// construction to achieve fine-grained programmatic control over provider settings. See the
// [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-ucloud/blob/master/website/docs/index.html.markdown.
type Provider struct {
	pulumi.ProviderResourceState
}

// NewProvider registers a new resource with the given unique name, arguments, and options.
func NewProvider(ctx *pulumi.Context,
	name string, args *ProviderArgs, opts ...pulumi.ResourceOption) (*Provider, error) {
	if args == nil {
		args = &ProviderArgs{}
	}
	if args.PrivateKey == nil {
		args.PrivateKey = pulumi.StringPtr(getEnvOrDefault("", nil, "UCLOUD_PRIVATE_KEY", "UCloud Private Key").(string))
	}
	if args.Profile == nil {
		args.Profile = pulumi.StringPtr(getEnvOrDefault("", nil, "UCLOUD_PROFILE", "UCloud Profile Name").(string))
	}
	if args.ProjectId == nil {
		args.ProjectId = pulumi.StringPtr(getEnvOrDefault("", nil, "UCLOUD_PROJECT_ID", "UCloud Project Id").(string))
	}
	if args.PublicKey == nil {
		args.PublicKey = pulumi.StringPtr(getEnvOrDefault("", nil, "UCLOUD_PUBLIC_KEY", "UCloud Public Key").(string))
	}
	if args.Region == nil {
		args.Region = pulumi.StringPtr(getEnvOrDefault("", nil, "UCLOUD_REGION", "UCLOUD_DEFAULT_REGION").(string))
	}
	if args.SharedCredentialsFile == nil {
		args.SharedCredentialsFile = pulumi.StringPtr(getEnvOrDefault("", nil, "UCLOUD_SHARED_CREDENTIAL_FILE", "Path To The Shared Credentials File").(string))
	}
	var resource Provider
	err := ctx.RegisterResource("pulumi:providers:ucloud", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

type providerArgs struct {
	// ...
	BaseUrl *string `pulumi:"baseUrl"`
	// ...
	Insecure *bool `pulumi:"insecure"`
	// ...
	MaxRetries *int `pulumi:"maxRetries"`
	// ...
	PrivateKey *string `pulumi:"privateKey"`
	// ...
	Profile *string `pulumi:"profile"`
	// ...
	ProjectId *string `pulumi:"projectId"`
	// ...
	PublicKey *string `pulumi:"publicKey"`
	// ...
	Region *string `pulumi:"region"`
	// ...
	SharedCredentialsFile *string `pulumi:"sharedCredentialsFile"`
}

// The set of arguments for constructing a Provider resource.
type ProviderArgs struct {
	// ...
	BaseUrl pulumi.StringPtrInput
	// ...
	Insecure pulumi.BoolPtrInput
	// ...
	MaxRetries pulumi.IntPtrInput
	// ...
	PrivateKey pulumi.StringPtrInput
	// ...
	Profile pulumi.StringPtrInput
	// ...
	ProjectId pulumi.StringPtrInput
	// ...
	PublicKey pulumi.StringPtrInput
	// ...
	Region pulumi.StringPtrInput
	// ...
	SharedCredentialsFile pulumi.StringPtrInput
}

func (ProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*providerArgs)(nil)).Elem()
}
