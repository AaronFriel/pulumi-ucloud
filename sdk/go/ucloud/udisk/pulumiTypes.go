// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package udisk

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GetDiskDisk struct {
	// Availability zone where Disk are located. Such as: "cn-bj2-02". You may refer to [list of availability zone](https://docs.ucloud.cn/api/summary/regionlist)
	AvailabilityZone string `pulumi:"availabilityZone"`
	// The charge type of disk. Possible values are: `year` as pay by year, `month` as pay by month, `dynamic` as pay by hour.
	ChargeType string `pulumi:"chargeType"`
	// The creation time of Disk, formatted in RFC3339 time string.
	CreateTime string `pulumi:"createTime"`
	// The size of disk. Purchase the size of disk in GB.
	DiskSize int `pulumi:"diskSize"`
	// The type of disk. Possible values are: `dataDisk`as cloud disk, `ssdDataDisk` as SSD cloud disk, `systemDisk`as system disk, `ssdSystemDisk` as SSD system disk, `rssdDataDisk` as RDMA-SSD cloud disk.
	DiskType string `pulumi:"diskType"`
	// The expiration time of disk, formatted in RFC3339 time string.
	ExpireTime string `pulumi:"expireTime"`
	// The ID of Disk.
	Id string `pulumi:"id"`
	// The name of Disk.
	Name string `pulumi:"name"`
	// The status of disk. Possible values are: `Available`, `InUse`, `Detaching`, `Initializating`, `Failed`, `Cloning`, `Restoring`, `RestoreFailed`.
	Status string `pulumi:"status"`
	// A tag assigned to Disk.
	Tag string `pulumi:"tag"`
}

// GetDiskDiskInput is an input type that accepts GetDiskDiskArgs and GetDiskDiskOutput values.
// You can construct a concrete instance of `GetDiskDiskInput` via:
//
//          GetDiskDiskArgs{...}
type GetDiskDiskInput interface {
	pulumi.Input

	ToGetDiskDiskOutput() GetDiskDiskOutput
	ToGetDiskDiskOutputWithContext(context.Context) GetDiskDiskOutput
}

type GetDiskDiskArgs struct {
	// Availability zone where Disk are located. Such as: "cn-bj2-02". You may refer to [list of availability zone](https://docs.ucloud.cn/api/summary/regionlist)
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
	// The charge type of disk. Possible values are: `year` as pay by year, `month` as pay by month, `dynamic` as pay by hour.
	ChargeType pulumi.StringInput `pulumi:"chargeType"`
	// The creation time of Disk, formatted in RFC3339 time string.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The size of disk. Purchase the size of disk in GB.
	DiskSize pulumi.IntInput `pulumi:"diskSize"`
	// The type of disk. Possible values are: `dataDisk`as cloud disk, `ssdDataDisk` as SSD cloud disk, `systemDisk`as system disk, `ssdSystemDisk` as SSD system disk, `rssdDataDisk` as RDMA-SSD cloud disk.
	DiskType pulumi.StringInput `pulumi:"diskType"`
	// The expiration time of disk, formatted in RFC3339 time string.
	ExpireTime pulumi.StringInput `pulumi:"expireTime"`
	// The ID of Disk.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of Disk.
	Name pulumi.StringInput `pulumi:"name"`
	// The status of disk. Possible values are: `Available`, `InUse`, `Detaching`, `Initializating`, `Failed`, `Cloning`, `Restoring`, `RestoreFailed`.
	Status pulumi.StringInput `pulumi:"status"`
	// A tag assigned to Disk.
	Tag pulumi.StringInput `pulumi:"tag"`
}

func (GetDiskDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDiskDisk)(nil)).Elem()
}

func (i GetDiskDiskArgs) ToGetDiskDiskOutput() GetDiskDiskOutput {
	return i.ToGetDiskDiskOutputWithContext(context.Background())
}

func (i GetDiskDiskArgs) ToGetDiskDiskOutputWithContext(ctx context.Context) GetDiskDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDiskDiskOutput)
}

// GetDiskDiskArrayInput is an input type that accepts GetDiskDiskArray and GetDiskDiskArrayOutput values.
// You can construct a concrete instance of `GetDiskDiskArrayInput` via:
//
//          GetDiskDiskArray{ GetDiskDiskArgs{...} }
type GetDiskDiskArrayInput interface {
	pulumi.Input

	ToGetDiskDiskArrayOutput() GetDiskDiskArrayOutput
	ToGetDiskDiskArrayOutputWithContext(context.Context) GetDiskDiskArrayOutput
}

type GetDiskDiskArray []GetDiskDiskInput

func (GetDiskDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDiskDisk)(nil)).Elem()
}

func (i GetDiskDiskArray) ToGetDiskDiskArrayOutput() GetDiskDiskArrayOutput {
	return i.ToGetDiskDiskArrayOutputWithContext(context.Background())
}

func (i GetDiskDiskArray) ToGetDiskDiskArrayOutputWithContext(ctx context.Context) GetDiskDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDiskDiskArrayOutput)
}

type GetDiskDiskOutput struct{ *pulumi.OutputState }

func (GetDiskDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDiskDisk)(nil)).Elem()
}

func (o GetDiskDiskOutput) ToGetDiskDiskOutput() GetDiskDiskOutput {
	return o
}

func (o GetDiskDiskOutput) ToGetDiskDiskOutputWithContext(ctx context.Context) GetDiskDiskOutput {
	return o
}

// Availability zone where Disk are located. Such as: "cn-bj2-02". You may refer to [list of availability zone](https://docs.ucloud.cn/api/summary/regionlist)
func (o GetDiskDiskOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskDisk) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// The charge type of disk. Possible values are: `year` as pay by year, `month` as pay by month, `dynamic` as pay by hour.
func (o GetDiskDiskOutput) ChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskDisk) string { return v.ChargeType }).(pulumi.StringOutput)
}

// The creation time of Disk, formatted in RFC3339 time string.
func (o GetDiskDiskOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskDisk) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The size of disk. Purchase the size of disk in GB.
func (o GetDiskDiskOutput) DiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetDiskDisk) int { return v.DiskSize }).(pulumi.IntOutput)
}

// The type of disk. Possible values are: `dataDisk`as cloud disk, `ssdDataDisk` as SSD cloud disk, `systemDisk`as system disk, `ssdSystemDisk` as SSD system disk, `rssdDataDisk` as RDMA-SSD cloud disk.
func (o GetDiskDiskOutput) DiskType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskDisk) string { return v.DiskType }).(pulumi.StringOutput)
}

// The expiration time of disk, formatted in RFC3339 time string.
func (o GetDiskDiskOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskDisk) string { return v.ExpireTime }).(pulumi.StringOutput)
}

// The ID of Disk.
func (o GetDiskDiskOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskDisk) string { return v.Id }).(pulumi.StringOutput)
}

// The name of Disk.
func (o GetDiskDiskOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskDisk) string { return v.Name }).(pulumi.StringOutput)
}

// The status of disk. Possible values are: `Available`, `InUse`, `Detaching`, `Initializating`, `Failed`, `Cloning`, `Restoring`, `RestoreFailed`.
func (o GetDiskDiskOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskDisk) string { return v.Status }).(pulumi.StringOutput)
}

// A tag assigned to Disk.
func (o GetDiskDiskOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiskDisk) string { return v.Tag }).(pulumi.StringOutput)
}

type GetDiskDiskArrayOutput struct{ *pulumi.OutputState }

func (GetDiskDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDiskDisk)(nil)).Elem()
}

func (o GetDiskDiskArrayOutput) ToGetDiskDiskArrayOutput() GetDiskDiskArrayOutput {
	return o
}

func (o GetDiskDiskArrayOutput) ToGetDiskDiskArrayOutputWithContext(ctx context.Context) GetDiskDiskArrayOutput {
	return o
}

func (o GetDiskDiskArrayOutput) Index(i pulumi.IntInput) GetDiskDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDiskDisk {
		return vs[0].([]GetDiskDisk)[vs[1].(int)]
	}).(GetDiskDiskOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDiskDiskOutput{})
	pulumi.RegisterOutputType(GetDiskDiskArrayOutput{})
}
