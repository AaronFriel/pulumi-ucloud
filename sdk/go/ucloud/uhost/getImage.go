// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package uhost

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source providers a list of available image resources according to their availability zone, image ID and other fields.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-ucloud/sdk/go/ucloud/uhost"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := "cn-bj2-02"
// 		opt1 := "base"
// 		opt2 := "^CentOS 7.[1-2] 64"
// 		opt3 := true
// 		example, err := uhost.GetImage(ctx, &uhost.GetImageArgs{
// 			AvailabilityZone: &opt0,
// 			ImageType:        &opt1,
// 			NameRegex:        &opt2,
// 			MostRecent:       &opt3,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("first", example.Images[0].Id)
// 		return nil
// 	})
// }
// ```
func GetImage(ctx *pulumi.Context, args *GetImageArgs, opts ...pulumi.InvokeOption) (*GetImageResult, error) {
	var rv GetImageResult
	err := ctx.Invoke("ucloud:uhost/getImage:getImage", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getImage.
type GetImageArgs struct {
	// Availability zone where images are located. such as: `cn-bj2-02`. You may refer to [list of availability zone](https://docs.ucloud.cn/api/summary/regionlist).
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// A list of image IDs, all the images belong to this region will be retrieved if the ID is `[]`.
	// > **Note** this argument conflicts with `imageId`.
	Ids []string `pulumi:"ids"`
	// The ID of image.
	// > **Note** this argument conflicts with `ids`.
	ImageId *string `pulumi:"imageId"`
	// The type of image. Possible values are: `base` as standard image, `business` as owned by market place, and `custom` as custom-image, all the image types will be retrieved by default.
	ImageType *string `pulumi:"imageType"`
	// If more than one result is returned, use the most recent image.
	MostRecent *bool `pulumi:"mostRecent"`
	// A regex string to filter resulting images by name. (Such as: `^CentOS 7.[1-2] 64` means CentOS 7.1 of 64-bit operating system or CentOS 7.2 of 64-bit operating system, "^Ubuntu 16.04 64" means Ubuntu 16.04 of 64-bit operating system).
	NameRegex *string `pulumi:"nameRegex"`
	// The type of OS. Possible values are: `linux` and `windows`, all the OS types will be retrieved by default.
	OsType     *string `pulumi:"osType"`
	OutputFile *string `pulumi:"outputFile"`
}

// A collection of values returned by getImage.
type GetImageResult struct {
	// Availability zone where image is located.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// The provider-assigned unique ID for this managed resource.
	Id        string   `pulumi:"id"`
	Ids       []string `pulumi:"ids"`
	ImageId   *string  `pulumi:"imageId"`
	ImageType *string  `pulumi:"imageType"`
	// It is a nested type which documented below.
	Images     []GetImageImage `pulumi:"images"`
	MostRecent *bool           `pulumi:"mostRecent"`
	NameRegex  *string         `pulumi:"nameRegex"`
	// The type of OS.
	OsType     *string `pulumi:"osType"`
	OutputFile *string `pulumi:"outputFile"`
	// Total number of images that satisfy the condition.
	TotalCount int `pulumi:"totalCount"`
}
