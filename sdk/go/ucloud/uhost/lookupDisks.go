// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package uhost

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// This data source provides a list of Disk resources according to their Disk ID and disk type.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-ucloud/blob/master/website/docs/d/disks.html.markdown.
func LookupDisks(ctx *pulumi.Context, args *LookupDisksArgs, opts ...pulumi.InvokeOption) (*LookupDisksResult, error) {
	var rv LookupDisksResult
	err := ctx.Invoke("ucloud:uhost/lookupDisks:lookupDisks", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking lookupDisks.
type LookupDisksArgs struct {
	// Availability zone where Disk are located. Such as: "cn-bj2-02". You may refer to [list of availability zone](https://docs.ucloud.cn/api/summary/regionlist)
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// The type of disk. Possible values are: `dataDisk`as cloud disk, `ssdDataDisk` as SSD cloud disk, `systemDisk`as system disk, `ssdSystemDisk` as SSD system disk, `rssdDataDisk` as RDMA-SSD cloud disk.
	DiskType *string `pulumi:"diskType"`
	// A list of Disk IDs, all the Disks belong to this region will be retrieved if the ID is `""`.
	Ids []string `pulumi:"ids"`
	// A regex string to filter resulting disks by name.
	NameRegex  *string `pulumi:"nameRegex"`
	OutputFile *string `pulumi:"outputFile"`
}

// A collection of values returned by lookupDisks.
type LookupDisksResult struct {
	// Availability zone where disk is located.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// The type of disk.
	DiskType *string `pulumi:"diskType"`
	// It is a nested type which documented below.
	Disks []LookupDisksDisk `pulumi:"disks"`
	// id is the provider-assigned unique ID for this managed resource.
	Id         string   `pulumi:"id"`
	Ids        []string `pulumi:"ids"`
	NameRegex  *string  `pulumi:"nameRegex"`
	OutputFile *string  `pulumi:"outputFile"`
	// Total number of Disks that satisfy the condition.
	TotalCount int `pulumi:"totalCount"`
}
