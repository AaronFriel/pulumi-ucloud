// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package uhost

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type InstanceDataDisks struct {
	// The size of the cloud data disk, range 20-8000, measured in GB (GigaByte).
	Size int `pulumi:"size"`
	// The type of the cloud data disk. Possible values are: `cloudNormal` and `cloudSsd` for local boot disk, `cloudSsd` for cloud SSD boot disk.
	Type string `pulumi:"type"`
}

// InstanceDataDisksInput is an input type that accepts InstanceDataDisksArgs and InstanceDataDisksOutput values.
// You can construct a concrete instance of `InstanceDataDisksInput` via:
//
//          InstanceDataDisksArgs{...}
type InstanceDataDisksInput interface {
	pulumi.Input

	ToInstanceDataDisksOutput() InstanceDataDisksOutput
	ToInstanceDataDisksOutputWithContext(context.Context) InstanceDataDisksOutput
}

type InstanceDataDisksArgs struct {
	// The size of the cloud data disk, range 20-8000, measured in GB (GigaByte).
	Size pulumi.IntInput `pulumi:"size"`
	// The type of the cloud data disk. Possible values are: `cloudNormal` and `cloudSsd` for local boot disk, `cloudSsd` for cloud SSD boot disk.
	Type pulumi.StringInput `pulumi:"type"`
}

func (InstanceDataDisksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDataDisks)(nil)).Elem()
}

func (i InstanceDataDisksArgs) ToInstanceDataDisksOutput() InstanceDataDisksOutput {
	return i.ToInstanceDataDisksOutputWithContext(context.Background())
}

func (i InstanceDataDisksArgs) ToInstanceDataDisksOutputWithContext(ctx context.Context) InstanceDataDisksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDataDisksOutput)
}

func (i InstanceDataDisksArgs) ToInstanceDataDisksPtrOutput() InstanceDataDisksPtrOutput {
	return i.ToInstanceDataDisksPtrOutputWithContext(context.Background())
}

func (i InstanceDataDisksArgs) ToInstanceDataDisksPtrOutputWithContext(ctx context.Context) InstanceDataDisksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDataDisksOutput).ToInstanceDataDisksPtrOutputWithContext(ctx)
}

// InstanceDataDisksPtrInput is an input type that accepts InstanceDataDisksArgs, InstanceDataDisksPtr and InstanceDataDisksPtrOutput values.
// You can construct a concrete instance of `InstanceDataDisksPtrInput` via:
//
//          InstanceDataDisksArgs{...}
//
//  or:
//
//          nil
type InstanceDataDisksPtrInput interface {
	pulumi.Input

	ToInstanceDataDisksPtrOutput() InstanceDataDisksPtrOutput
	ToInstanceDataDisksPtrOutputWithContext(context.Context) InstanceDataDisksPtrOutput
}

type instanceDataDisksPtrType InstanceDataDisksArgs

func InstanceDataDisksPtr(v *InstanceDataDisksArgs) InstanceDataDisksPtrInput {
	return (*instanceDataDisksPtrType)(v)
}

func (*instanceDataDisksPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceDataDisks)(nil)).Elem()
}

func (i *instanceDataDisksPtrType) ToInstanceDataDisksPtrOutput() InstanceDataDisksPtrOutput {
	return i.ToInstanceDataDisksPtrOutputWithContext(context.Background())
}

func (i *instanceDataDisksPtrType) ToInstanceDataDisksPtrOutputWithContext(ctx context.Context) InstanceDataDisksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDataDisksPtrOutput)
}

type InstanceDataDisksOutput struct{ *pulumi.OutputState }

func (InstanceDataDisksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDataDisks)(nil)).Elem()
}

func (o InstanceDataDisksOutput) ToInstanceDataDisksOutput() InstanceDataDisksOutput {
	return o
}

func (o InstanceDataDisksOutput) ToInstanceDataDisksOutputWithContext(ctx context.Context) InstanceDataDisksOutput {
	return o
}

func (o InstanceDataDisksOutput) ToInstanceDataDisksPtrOutput() InstanceDataDisksPtrOutput {
	return o.ToInstanceDataDisksPtrOutputWithContext(context.Background())
}

func (o InstanceDataDisksOutput) ToInstanceDataDisksPtrOutputWithContext(ctx context.Context) InstanceDataDisksPtrOutput {
	return o.ApplyT(func(v InstanceDataDisks) *InstanceDataDisks {
		return &v
	}).(InstanceDataDisksPtrOutput)
}

// The size of the cloud data disk, range 20-8000, measured in GB (GigaByte).
func (o InstanceDataDisksOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceDataDisks) int { return v.Size }).(pulumi.IntOutput)
}

// The type of the cloud data disk. Possible values are: `cloudNormal` and `cloudSsd` for local boot disk, `cloudSsd` for cloud SSD boot disk.
func (o InstanceDataDisksOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceDataDisks) string { return v.Type }).(pulumi.StringOutput)
}

type InstanceDataDisksPtrOutput struct{ *pulumi.OutputState }

func (InstanceDataDisksPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceDataDisks)(nil)).Elem()
}

func (o InstanceDataDisksPtrOutput) ToInstanceDataDisksPtrOutput() InstanceDataDisksPtrOutput {
	return o
}

func (o InstanceDataDisksPtrOutput) ToInstanceDataDisksPtrOutputWithContext(ctx context.Context) InstanceDataDisksPtrOutput {
	return o
}

func (o InstanceDataDisksPtrOutput) Elem() InstanceDataDisksOutput {
	return o.ApplyT(func(v *InstanceDataDisks) InstanceDataDisks { return *v }).(InstanceDataDisksOutput)
}

// The size of the cloud data disk, range 20-8000, measured in GB (GigaByte).
func (o InstanceDataDisksPtrOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceDataDisks) *int {
		if v == nil {
			return nil
		}
		return &v.Size
	}).(pulumi.IntPtrOutput)
}

// The type of the cloud data disk. Possible values are: `cloudNormal` and `cloudSsd` for local boot disk, `cloudSsd` for cloud SSD boot disk.
func (o InstanceDataDisksPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceDataDisks) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type InstanceDiskSet struct {
	// The ID of disk.
	Id *string `pulumi:"id"`
	// Specifies whether boot disk or not.
	IsBoot *bool `pulumi:"isBoot"`
	// The size of the cloud data disk, range 20-8000, measured in GB (GigaByte).
	Size *int `pulumi:"size"`
	// The type of the cloud data disk. Possible values are: `cloudNormal` and `cloudSsd` for local boot disk, `cloudSsd` for cloud SSD boot disk.
	Type *string `pulumi:"type"`
}

// InstanceDiskSetInput is an input type that accepts InstanceDiskSetArgs and InstanceDiskSetOutput values.
// You can construct a concrete instance of `InstanceDiskSetInput` via:
//
//          InstanceDiskSetArgs{...}
type InstanceDiskSetInput interface {
	pulumi.Input

	ToInstanceDiskSetOutput() InstanceDiskSetOutput
	ToInstanceDiskSetOutputWithContext(context.Context) InstanceDiskSetOutput
}

type InstanceDiskSetArgs struct {
	// The ID of disk.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Specifies whether boot disk or not.
	IsBoot pulumi.BoolPtrInput `pulumi:"isBoot"`
	// The size of the cloud data disk, range 20-8000, measured in GB (GigaByte).
	Size pulumi.IntPtrInput `pulumi:"size"`
	// The type of the cloud data disk. Possible values are: `cloudNormal` and `cloudSsd` for local boot disk, `cloudSsd` for cloud SSD boot disk.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (InstanceDiskSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDiskSet)(nil)).Elem()
}

func (i InstanceDiskSetArgs) ToInstanceDiskSetOutput() InstanceDiskSetOutput {
	return i.ToInstanceDiskSetOutputWithContext(context.Background())
}

func (i InstanceDiskSetArgs) ToInstanceDiskSetOutputWithContext(ctx context.Context) InstanceDiskSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDiskSetOutput)
}

// InstanceDiskSetArrayInput is an input type that accepts InstanceDiskSetArray and InstanceDiskSetArrayOutput values.
// You can construct a concrete instance of `InstanceDiskSetArrayInput` via:
//
//          InstanceDiskSetArray{ InstanceDiskSetArgs{...} }
type InstanceDiskSetArrayInput interface {
	pulumi.Input

	ToInstanceDiskSetArrayOutput() InstanceDiskSetArrayOutput
	ToInstanceDiskSetArrayOutputWithContext(context.Context) InstanceDiskSetArrayOutput
}

type InstanceDiskSetArray []InstanceDiskSetInput

func (InstanceDiskSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceDiskSet)(nil)).Elem()
}

func (i InstanceDiskSetArray) ToInstanceDiskSetArrayOutput() InstanceDiskSetArrayOutput {
	return i.ToInstanceDiskSetArrayOutputWithContext(context.Background())
}

func (i InstanceDiskSetArray) ToInstanceDiskSetArrayOutputWithContext(ctx context.Context) InstanceDiskSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDiskSetArrayOutput)
}

type InstanceDiskSetOutput struct{ *pulumi.OutputState }

func (InstanceDiskSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDiskSet)(nil)).Elem()
}

func (o InstanceDiskSetOutput) ToInstanceDiskSetOutput() InstanceDiskSetOutput {
	return o
}

func (o InstanceDiskSetOutput) ToInstanceDiskSetOutputWithContext(ctx context.Context) InstanceDiskSetOutput {
	return o
}

// The ID of disk.
func (o InstanceDiskSetOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceDiskSet) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Specifies whether boot disk or not.
func (o InstanceDiskSetOutput) IsBoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceDiskSet) *bool { return v.IsBoot }).(pulumi.BoolPtrOutput)
}

// The size of the cloud data disk, range 20-8000, measured in GB (GigaByte).
func (o InstanceDiskSetOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceDiskSet) *int { return v.Size }).(pulumi.IntPtrOutput)
}

// The type of the cloud data disk. Possible values are: `cloudNormal` and `cloudSsd` for local boot disk, `cloudSsd` for cloud SSD boot disk.
func (o InstanceDiskSetOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceDiskSet) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type InstanceDiskSetArrayOutput struct{ *pulumi.OutputState }

func (InstanceDiskSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceDiskSet)(nil)).Elem()
}

func (o InstanceDiskSetArrayOutput) ToInstanceDiskSetArrayOutput() InstanceDiskSetArrayOutput {
	return o
}

func (o InstanceDiskSetArrayOutput) ToInstanceDiskSetArrayOutputWithContext(ctx context.Context) InstanceDiskSetArrayOutput {
	return o
}

func (o InstanceDiskSetArrayOutput) Index(i pulumi.IntInput) InstanceDiskSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceDiskSet {
		return vs[0].([]InstanceDiskSet)[vs[1].(int)]
	}).(InstanceDiskSetOutput)
}

type InstanceIpSet struct {
	// Type of Elastic IP routes. Possible values are: `International` as international BGP IP, `BGP` as china BGP IP and `Private` as private IP.
	InternetType *string `pulumi:"internetType"`
	// Elastic IP address.
	Ip *string `pulumi:"ip"`
}

// InstanceIpSetInput is an input type that accepts InstanceIpSetArgs and InstanceIpSetOutput values.
// You can construct a concrete instance of `InstanceIpSetInput` via:
//
//          InstanceIpSetArgs{...}
type InstanceIpSetInput interface {
	pulumi.Input

	ToInstanceIpSetOutput() InstanceIpSetOutput
	ToInstanceIpSetOutputWithContext(context.Context) InstanceIpSetOutput
}

type InstanceIpSetArgs struct {
	// Type of Elastic IP routes. Possible values are: `International` as international BGP IP, `BGP` as china BGP IP and `Private` as private IP.
	InternetType pulumi.StringPtrInput `pulumi:"internetType"`
	// Elastic IP address.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
}

func (InstanceIpSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceIpSet)(nil)).Elem()
}

func (i InstanceIpSetArgs) ToInstanceIpSetOutput() InstanceIpSetOutput {
	return i.ToInstanceIpSetOutputWithContext(context.Background())
}

func (i InstanceIpSetArgs) ToInstanceIpSetOutputWithContext(ctx context.Context) InstanceIpSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIpSetOutput)
}

// InstanceIpSetArrayInput is an input type that accepts InstanceIpSetArray and InstanceIpSetArrayOutput values.
// You can construct a concrete instance of `InstanceIpSetArrayInput` via:
//
//          InstanceIpSetArray{ InstanceIpSetArgs{...} }
type InstanceIpSetArrayInput interface {
	pulumi.Input

	ToInstanceIpSetArrayOutput() InstanceIpSetArrayOutput
	ToInstanceIpSetArrayOutputWithContext(context.Context) InstanceIpSetArrayOutput
}

type InstanceIpSetArray []InstanceIpSetInput

func (InstanceIpSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceIpSet)(nil)).Elem()
}

func (i InstanceIpSetArray) ToInstanceIpSetArrayOutput() InstanceIpSetArrayOutput {
	return i.ToInstanceIpSetArrayOutputWithContext(context.Background())
}

func (i InstanceIpSetArray) ToInstanceIpSetArrayOutputWithContext(ctx context.Context) InstanceIpSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceIpSetArrayOutput)
}

type InstanceIpSetOutput struct{ *pulumi.OutputState }

func (InstanceIpSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceIpSet)(nil)).Elem()
}

func (o InstanceIpSetOutput) ToInstanceIpSetOutput() InstanceIpSetOutput {
	return o
}

func (o InstanceIpSetOutput) ToInstanceIpSetOutputWithContext(ctx context.Context) InstanceIpSetOutput {
	return o
}

// Type of Elastic IP routes. Possible values are: `International` as international BGP IP, `BGP` as china BGP IP and `Private` as private IP.
func (o InstanceIpSetOutput) InternetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceIpSet) *string { return v.InternetType }).(pulumi.StringPtrOutput)
}

// Elastic IP address.
func (o InstanceIpSetOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceIpSet) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

type InstanceIpSetArrayOutput struct{ *pulumi.OutputState }

func (InstanceIpSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceIpSet)(nil)).Elem()
}

func (o InstanceIpSetArrayOutput) ToInstanceIpSetArrayOutput() InstanceIpSetArrayOutput {
	return o
}

func (o InstanceIpSetArrayOutput) ToInstanceIpSetArrayOutputWithContext(ctx context.Context) InstanceIpSetArrayOutput {
	return o
}

func (o InstanceIpSetArrayOutput) Index(i pulumi.IntInput) InstanceIpSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceIpSet {
		return vs[0].([]InstanceIpSet)[vs[1].(int)]
	}).(InstanceIpSetOutput)
}

type GetImageImage struct {
	// Availability zone where images are located. such as: `cn-bj2-02`. You may refer to [list of availability zone](https://docs.ucloud.cn/api/summary/regionlist).
	AvailabilityZone string `pulumi:"availabilityZone"`
	// The time of creation for image, formatted in RFC3339 time string.
	CreateTime string `pulumi:"createTime"`
	// The description of image if any.
	Description string `pulumi:"description"`
	// To identify if any particular feature belongs to the instance, the value is `NetEnhnced` as I/O enhanced instance for now.
	Features []string `pulumi:"features"`
	// The ID of image.
	Id string `pulumi:"id"`
	// The name of image.
	Name string `pulumi:"name"`
	// The name of OS.
	OsName string `pulumi:"osName"`
	// The type of OS. Possible values are: `linux` and `windows`, all the OS types will be retrieved by default.
	OsType string `pulumi:"osType"`
	// The size of image.
	Size int `pulumi:"size"`
	// The status of image. Possible values are `Available`, `Making` and `Unavailable`.
	Status string `pulumi:"status"`
	// The type of image.
	Type string `pulumi:"type"`
}

// GetImageImageInput is an input type that accepts GetImageImageArgs and GetImageImageOutput values.
// You can construct a concrete instance of `GetImageImageInput` via:
//
//          GetImageImageArgs{...}
type GetImageImageInput interface {
	pulumi.Input

	ToGetImageImageOutput() GetImageImageOutput
	ToGetImageImageOutputWithContext(context.Context) GetImageImageOutput
}

type GetImageImageArgs struct {
	// Availability zone where images are located. such as: `cn-bj2-02`. You may refer to [list of availability zone](https://docs.ucloud.cn/api/summary/regionlist).
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
	// The time of creation for image, formatted in RFC3339 time string.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The description of image if any.
	Description pulumi.StringInput `pulumi:"description"`
	// To identify if any particular feature belongs to the instance, the value is `NetEnhnced` as I/O enhanced instance for now.
	Features pulumi.StringArrayInput `pulumi:"features"`
	// The ID of image.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of image.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of OS.
	OsName pulumi.StringInput `pulumi:"osName"`
	// The type of OS. Possible values are: `linux` and `windows`, all the OS types will be retrieved by default.
	OsType pulumi.StringInput `pulumi:"osType"`
	// The size of image.
	Size pulumi.IntInput `pulumi:"size"`
	// The status of image. Possible values are `Available`, `Making` and `Unavailable`.
	Status pulumi.StringInput `pulumi:"status"`
	// The type of image.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetImageImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageImage)(nil)).Elem()
}

func (i GetImageImageArgs) ToGetImageImageOutput() GetImageImageOutput {
	return i.ToGetImageImageOutputWithContext(context.Background())
}

func (i GetImageImageArgs) ToGetImageImageOutputWithContext(ctx context.Context) GetImageImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageImageOutput)
}

// GetImageImageArrayInput is an input type that accepts GetImageImageArray and GetImageImageArrayOutput values.
// You can construct a concrete instance of `GetImageImageArrayInput` via:
//
//          GetImageImageArray{ GetImageImageArgs{...} }
type GetImageImageArrayInput interface {
	pulumi.Input

	ToGetImageImageArrayOutput() GetImageImageArrayOutput
	ToGetImageImageArrayOutputWithContext(context.Context) GetImageImageArrayOutput
}

type GetImageImageArray []GetImageImageInput

func (GetImageImageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageImage)(nil)).Elem()
}

func (i GetImageImageArray) ToGetImageImageArrayOutput() GetImageImageArrayOutput {
	return i.ToGetImageImageArrayOutputWithContext(context.Background())
}

func (i GetImageImageArray) ToGetImageImageArrayOutputWithContext(ctx context.Context) GetImageImageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImageImageArrayOutput)
}

type GetImageImageOutput struct{ *pulumi.OutputState }

func (GetImageImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageImage)(nil)).Elem()
}

func (o GetImageImageOutput) ToGetImageImageOutput() GetImageImageOutput {
	return o
}

func (o GetImageImageOutput) ToGetImageImageOutputWithContext(ctx context.Context) GetImageImageOutput {
	return o
}

// Availability zone where images are located. such as: `cn-bj2-02`. You may refer to [list of availability zone](https://docs.ucloud.cn/api/summary/regionlist).
func (o GetImageImageOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageImage) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// The time of creation for image, formatted in RFC3339 time string.
func (o GetImageImageOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageImage) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of image if any.
func (o GetImageImageOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageImage) string { return v.Description }).(pulumi.StringOutput)
}

// To identify if any particular feature belongs to the instance, the value is `NetEnhnced` as I/O enhanced instance for now.
func (o GetImageImageOutput) Features() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetImageImage) []string { return v.Features }).(pulumi.StringArrayOutput)
}

// The ID of image.
func (o GetImageImageOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageImage) string { return v.Id }).(pulumi.StringOutput)
}

// The name of image.
func (o GetImageImageOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageImage) string { return v.Name }).(pulumi.StringOutput)
}

// The name of OS.
func (o GetImageImageOutput) OsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageImage) string { return v.OsName }).(pulumi.StringOutput)
}

// The type of OS. Possible values are: `linux` and `windows`, all the OS types will be retrieved by default.
func (o GetImageImageOutput) OsType() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageImage) string { return v.OsType }).(pulumi.StringOutput)
}

// The size of image.
func (o GetImageImageOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetImageImage) int { return v.Size }).(pulumi.IntOutput)
}

// The status of image. Possible values are `Available`, `Making` and `Unavailable`.
func (o GetImageImageOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageImage) string { return v.Status }).(pulumi.StringOutput)
}

// The type of image.
func (o GetImageImageOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageImage) string { return v.Type }).(pulumi.StringOutput)
}

type GetImageImageArrayOutput struct{ *pulumi.OutputState }

func (GetImageImageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImageImage)(nil)).Elem()
}

func (o GetImageImageArrayOutput) ToGetImageImageArrayOutput() GetImageImageArrayOutput {
	return o
}

func (o GetImageImageArrayOutput) ToGetImageImageArrayOutputWithContext(ctx context.Context) GetImageImageArrayOutput {
	return o
}

func (o GetImageImageArrayOutput) Index(i pulumi.IntInput) GetImageImageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImageImage {
		return vs[0].([]GetImageImage)[vs[1].(int)]
	}).(GetImageImageOutput)
}

type GetInstanceInstance struct {
	// Whether to renew an instance automatically or not.
	AutoRenew bool `pulumi:"autoRenew"`
	// Availability zone where instances are located. Such as: "cn-bj2-02". You may refer to [list of availability zone](https://docs.ucloud.cn/api/summary/regionlist)
	AvailabilityZone string `pulumi:"availabilityZone"`
	// The charge type of instance, possible values are: `year`, `month` and `dynamic` as pay by hour.
	ChargeType string `pulumi:"chargeType"`
	// The number of cores of virtual CPU, measureed in core.
	Cpu int `pulumi:"cpu"`
	// The time of creation for instance, formatted in RFC3339 time string.
	CreateTime string `pulumi:"createTime"`
	// It is a nested type which documented below.
	DiskSets []GetInstanceInstanceDiskSet `pulumi:"diskSets"`
	// The expiration time for instance, formatted in RFC3339 time string.
	ExpireTime string `pulumi:"expireTime"`
	// The ID of disk.
	Id string `pulumi:"id"`
	// The type of instance.
	InstanceType string `pulumi:"instanceType"`
	// It is a nested type which documented below.
	IpSets []GetInstanceInstanceIpSet `pulumi:"ipSets"`
	// The size of memory, measured in MB (Megabyte).
	Memory int `pulumi:"memory"`
	// The name of the instance.
	Name string `pulumi:"name"`
	// The private IP address assigned to the instance.
	PrivateIp string `pulumi:"privateIp"`
	// The remarks of instance.
	Remark string `pulumi:"remark"`
	// Instance current status. Possible values are `Initializing`, `Starting`, `Running`, `Stopping`, `Stopped`, `Install Fail` and `Rebooting`.
	Status string `pulumi:"status"`
	// The ID of subnet linked to the instance.
	SubnetId string `pulumi:"subnetId"`
	// A tag assigned to instance.
	Tag string `pulumi:"tag"`
	// The ID of VPC linked to the instance.
	VpcId string `pulumi:"vpcId"`
}

// GetInstanceInstanceInput is an input type that accepts GetInstanceInstanceArgs and GetInstanceInstanceOutput values.
// You can construct a concrete instance of `GetInstanceInstanceInput` via:
//
//          GetInstanceInstanceArgs{...}
type GetInstanceInstanceInput interface {
	pulumi.Input

	ToGetInstanceInstanceOutput() GetInstanceInstanceOutput
	ToGetInstanceInstanceOutputWithContext(context.Context) GetInstanceInstanceOutput
}

type GetInstanceInstanceArgs struct {
	// Whether to renew an instance automatically or not.
	AutoRenew pulumi.BoolInput `pulumi:"autoRenew"`
	// Availability zone where instances are located. Such as: "cn-bj2-02". You may refer to [list of availability zone](https://docs.ucloud.cn/api/summary/regionlist)
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
	// The charge type of instance, possible values are: `year`, `month` and `dynamic` as pay by hour.
	ChargeType pulumi.StringInput `pulumi:"chargeType"`
	// The number of cores of virtual CPU, measureed in core.
	Cpu pulumi.IntInput `pulumi:"cpu"`
	// The time of creation for instance, formatted in RFC3339 time string.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// It is a nested type which documented below.
	DiskSets GetInstanceInstanceDiskSetArrayInput `pulumi:"diskSets"`
	// The expiration time for instance, formatted in RFC3339 time string.
	ExpireTime pulumi.StringInput `pulumi:"expireTime"`
	// The ID of disk.
	Id pulumi.StringInput `pulumi:"id"`
	// The type of instance.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// It is a nested type which documented below.
	IpSets GetInstanceInstanceIpSetArrayInput `pulumi:"ipSets"`
	// The size of memory, measured in MB (Megabyte).
	Memory pulumi.IntInput `pulumi:"memory"`
	// The name of the instance.
	Name pulumi.StringInput `pulumi:"name"`
	// The private IP address assigned to the instance.
	PrivateIp pulumi.StringInput `pulumi:"privateIp"`
	// The remarks of instance.
	Remark pulumi.StringInput `pulumi:"remark"`
	// Instance current status. Possible values are `Initializing`, `Starting`, `Running`, `Stopping`, `Stopped`, `Install Fail` and `Rebooting`.
	Status pulumi.StringInput `pulumi:"status"`
	// The ID of subnet linked to the instance.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
	// A tag assigned to instance.
	Tag pulumi.StringInput `pulumi:"tag"`
	// The ID of VPC linked to the instance.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetInstanceInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceInstance)(nil)).Elem()
}

func (i GetInstanceInstanceArgs) ToGetInstanceInstanceOutput() GetInstanceInstanceOutput {
	return i.ToGetInstanceInstanceOutputWithContext(context.Background())
}

func (i GetInstanceInstanceArgs) ToGetInstanceInstanceOutputWithContext(ctx context.Context) GetInstanceInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceInstanceOutput)
}

// GetInstanceInstanceArrayInput is an input type that accepts GetInstanceInstanceArray and GetInstanceInstanceArrayOutput values.
// You can construct a concrete instance of `GetInstanceInstanceArrayInput` via:
//
//          GetInstanceInstanceArray{ GetInstanceInstanceArgs{...} }
type GetInstanceInstanceArrayInput interface {
	pulumi.Input

	ToGetInstanceInstanceArrayOutput() GetInstanceInstanceArrayOutput
	ToGetInstanceInstanceArrayOutputWithContext(context.Context) GetInstanceInstanceArrayOutput
}

type GetInstanceInstanceArray []GetInstanceInstanceInput

func (GetInstanceInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceInstance)(nil)).Elem()
}

func (i GetInstanceInstanceArray) ToGetInstanceInstanceArrayOutput() GetInstanceInstanceArrayOutput {
	return i.ToGetInstanceInstanceArrayOutputWithContext(context.Background())
}

func (i GetInstanceInstanceArray) ToGetInstanceInstanceArrayOutputWithContext(ctx context.Context) GetInstanceInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceInstanceArrayOutput)
}

type GetInstanceInstanceOutput struct{ *pulumi.OutputState }

func (GetInstanceInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceInstance)(nil)).Elem()
}

func (o GetInstanceInstanceOutput) ToGetInstanceInstanceOutput() GetInstanceInstanceOutput {
	return o
}

func (o GetInstanceInstanceOutput) ToGetInstanceInstanceOutputWithContext(ctx context.Context) GetInstanceInstanceOutput {
	return o
}

// Whether to renew an instance automatically or not.
func (o GetInstanceInstanceOutput) AutoRenew() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceInstance) bool { return v.AutoRenew }).(pulumi.BoolOutput)
}

// Availability zone where instances are located. Such as: "cn-bj2-02". You may refer to [list of availability zone](https://docs.ucloud.cn/api/summary/regionlist)
func (o GetInstanceInstanceOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceInstance) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// The charge type of instance, possible values are: `year`, `month` and `dynamic` as pay by hour.
func (o GetInstanceInstanceOutput) ChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceInstance) string { return v.ChargeType }).(pulumi.StringOutput)
}

// The number of cores of virtual CPU, measureed in core.
func (o GetInstanceInstanceOutput) Cpu() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceInstance) int { return v.Cpu }).(pulumi.IntOutput)
}

// The time of creation for instance, formatted in RFC3339 time string.
func (o GetInstanceInstanceOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceInstance) string { return v.CreateTime }).(pulumi.StringOutput)
}

// It is a nested type which documented below.
func (o GetInstanceInstanceOutput) DiskSets() GetInstanceInstanceDiskSetArrayOutput {
	return o.ApplyT(func(v GetInstanceInstance) []GetInstanceInstanceDiskSet { return v.DiskSets }).(GetInstanceInstanceDiskSetArrayOutput)
}

// The expiration time for instance, formatted in RFC3339 time string.
func (o GetInstanceInstanceOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceInstance) string { return v.ExpireTime }).(pulumi.StringOutput)
}

// The ID of disk.
func (o GetInstanceInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceInstance) string { return v.Id }).(pulumi.StringOutput)
}

// The type of instance.
func (o GetInstanceInstanceOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceInstance) string { return v.InstanceType }).(pulumi.StringOutput)
}

// It is a nested type which documented below.
func (o GetInstanceInstanceOutput) IpSets() GetInstanceInstanceIpSetArrayOutput {
	return o.ApplyT(func(v GetInstanceInstance) []GetInstanceInstanceIpSet { return v.IpSets }).(GetInstanceInstanceIpSetArrayOutput)
}

// The size of memory, measured in MB (Megabyte).
func (o GetInstanceInstanceOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceInstance) int { return v.Memory }).(pulumi.IntOutput)
}

// The name of the instance.
func (o GetInstanceInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceInstance) string { return v.Name }).(pulumi.StringOutput)
}

// The private IP address assigned to the instance.
func (o GetInstanceInstanceOutput) PrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceInstance) string { return v.PrivateIp }).(pulumi.StringOutput)
}

// The remarks of instance.
func (o GetInstanceInstanceOutput) Remark() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceInstance) string { return v.Remark }).(pulumi.StringOutput)
}

// Instance current status. Possible values are `Initializing`, `Starting`, `Running`, `Stopping`, `Stopped`, `Install Fail` and `Rebooting`.
func (o GetInstanceInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceInstance) string { return v.Status }).(pulumi.StringOutput)
}

// The ID of subnet linked to the instance.
func (o GetInstanceInstanceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceInstance) string { return v.SubnetId }).(pulumi.StringOutput)
}

// A tag assigned to instance.
func (o GetInstanceInstanceOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceInstance) string { return v.Tag }).(pulumi.StringOutput)
}

// The ID of VPC linked to the instance.
func (o GetInstanceInstanceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceInstance) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetInstanceInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceInstance)(nil)).Elem()
}

func (o GetInstanceInstanceArrayOutput) ToGetInstanceInstanceArrayOutput() GetInstanceInstanceArrayOutput {
	return o
}

func (o GetInstanceInstanceArrayOutput) ToGetInstanceInstanceArrayOutputWithContext(ctx context.Context) GetInstanceInstanceArrayOutput {
	return o
}

func (o GetInstanceInstanceArrayOutput) Index(i pulumi.IntInput) GetInstanceInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceInstance {
		return vs[0].([]GetInstanceInstance)[vs[1].(int)]
	}).(GetInstanceInstanceOutput)
}

type GetInstanceInstanceDiskSet struct {
	// The ID of disk.
	Id string `pulumi:"id"`
	// Specifies whether boot disk or not.
	IsBoot bool `pulumi:"isBoot"`
	// The size of disk, measured in GB (Gigabyte).
	Size int `pulumi:"size"`
	// The type of disk.
	Type string `pulumi:"type"`
}

// GetInstanceInstanceDiskSetInput is an input type that accepts GetInstanceInstanceDiskSetArgs and GetInstanceInstanceDiskSetOutput values.
// You can construct a concrete instance of `GetInstanceInstanceDiskSetInput` via:
//
//          GetInstanceInstanceDiskSetArgs{...}
type GetInstanceInstanceDiskSetInput interface {
	pulumi.Input

	ToGetInstanceInstanceDiskSetOutput() GetInstanceInstanceDiskSetOutput
	ToGetInstanceInstanceDiskSetOutputWithContext(context.Context) GetInstanceInstanceDiskSetOutput
}

type GetInstanceInstanceDiskSetArgs struct {
	// The ID of disk.
	Id pulumi.StringInput `pulumi:"id"`
	// Specifies whether boot disk or not.
	IsBoot pulumi.BoolInput `pulumi:"isBoot"`
	// The size of disk, measured in GB (Gigabyte).
	Size pulumi.IntInput `pulumi:"size"`
	// The type of disk.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetInstanceInstanceDiskSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceInstanceDiskSet)(nil)).Elem()
}

func (i GetInstanceInstanceDiskSetArgs) ToGetInstanceInstanceDiskSetOutput() GetInstanceInstanceDiskSetOutput {
	return i.ToGetInstanceInstanceDiskSetOutputWithContext(context.Background())
}

func (i GetInstanceInstanceDiskSetArgs) ToGetInstanceInstanceDiskSetOutputWithContext(ctx context.Context) GetInstanceInstanceDiskSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceInstanceDiskSetOutput)
}

// GetInstanceInstanceDiskSetArrayInput is an input type that accepts GetInstanceInstanceDiskSetArray and GetInstanceInstanceDiskSetArrayOutput values.
// You can construct a concrete instance of `GetInstanceInstanceDiskSetArrayInput` via:
//
//          GetInstanceInstanceDiskSetArray{ GetInstanceInstanceDiskSetArgs{...} }
type GetInstanceInstanceDiskSetArrayInput interface {
	pulumi.Input

	ToGetInstanceInstanceDiskSetArrayOutput() GetInstanceInstanceDiskSetArrayOutput
	ToGetInstanceInstanceDiskSetArrayOutputWithContext(context.Context) GetInstanceInstanceDiskSetArrayOutput
}

type GetInstanceInstanceDiskSetArray []GetInstanceInstanceDiskSetInput

func (GetInstanceInstanceDiskSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceInstanceDiskSet)(nil)).Elem()
}

func (i GetInstanceInstanceDiskSetArray) ToGetInstanceInstanceDiskSetArrayOutput() GetInstanceInstanceDiskSetArrayOutput {
	return i.ToGetInstanceInstanceDiskSetArrayOutputWithContext(context.Background())
}

func (i GetInstanceInstanceDiskSetArray) ToGetInstanceInstanceDiskSetArrayOutputWithContext(ctx context.Context) GetInstanceInstanceDiskSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceInstanceDiskSetArrayOutput)
}

type GetInstanceInstanceDiskSetOutput struct{ *pulumi.OutputState }

func (GetInstanceInstanceDiskSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceInstanceDiskSet)(nil)).Elem()
}

func (o GetInstanceInstanceDiskSetOutput) ToGetInstanceInstanceDiskSetOutput() GetInstanceInstanceDiskSetOutput {
	return o
}

func (o GetInstanceInstanceDiskSetOutput) ToGetInstanceInstanceDiskSetOutputWithContext(ctx context.Context) GetInstanceInstanceDiskSetOutput {
	return o
}

// The ID of disk.
func (o GetInstanceInstanceDiskSetOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceInstanceDiskSet) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies whether boot disk or not.
func (o GetInstanceInstanceDiskSetOutput) IsBoot() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceInstanceDiskSet) bool { return v.IsBoot }).(pulumi.BoolOutput)
}

// The size of disk, measured in GB (Gigabyte).
func (o GetInstanceInstanceDiskSetOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceInstanceDiskSet) int { return v.Size }).(pulumi.IntOutput)
}

// The type of disk.
func (o GetInstanceInstanceDiskSetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceInstanceDiskSet) string { return v.Type }).(pulumi.StringOutput)
}

type GetInstanceInstanceDiskSetArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceInstanceDiskSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceInstanceDiskSet)(nil)).Elem()
}

func (o GetInstanceInstanceDiskSetArrayOutput) ToGetInstanceInstanceDiskSetArrayOutput() GetInstanceInstanceDiskSetArrayOutput {
	return o
}

func (o GetInstanceInstanceDiskSetArrayOutput) ToGetInstanceInstanceDiskSetArrayOutputWithContext(ctx context.Context) GetInstanceInstanceDiskSetArrayOutput {
	return o
}

func (o GetInstanceInstanceDiskSetArrayOutput) Index(i pulumi.IntInput) GetInstanceInstanceDiskSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceInstanceDiskSet {
		return vs[0].([]GetInstanceInstanceDiskSet)[vs[1].(int)]
	}).(GetInstanceInstanceDiskSetOutput)
}

type GetInstanceInstanceIpSet struct {
	// Type of Elastic IP routes.
	InternetType string `pulumi:"internetType"`
	// Elastic IP address.
	Ip string `pulumi:"ip"`
}

// GetInstanceInstanceIpSetInput is an input type that accepts GetInstanceInstanceIpSetArgs and GetInstanceInstanceIpSetOutput values.
// You can construct a concrete instance of `GetInstanceInstanceIpSetInput` via:
//
//          GetInstanceInstanceIpSetArgs{...}
type GetInstanceInstanceIpSetInput interface {
	pulumi.Input

	ToGetInstanceInstanceIpSetOutput() GetInstanceInstanceIpSetOutput
	ToGetInstanceInstanceIpSetOutputWithContext(context.Context) GetInstanceInstanceIpSetOutput
}

type GetInstanceInstanceIpSetArgs struct {
	// Type of Elastic IP routes.
	InternetType pulumi.StringInput `pulumi:"internetType"`
	// Elastic IP address.
	Ip pulumi.StringInput `pulumi:"ip"`
}

func (GetInstanceInstanceIpSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceInstanceIpSet)(nil)).Elem()
}

func (i GetInstanceInstanceIpSetArgs) ToGetInstanceInstanceIpSetOutput() GetInstanceInstanceIpSetOutput {
	return i.ToGetInstanceInstanceIpSetOutputWithContext(context.Background())
}

func (i GetInstanceInstanceIpSetArgs) ToGetInstanceInstanceIpSetOutputWithContext(ctx context.Context) GetInstanceInstanceIpSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceInstanceIpSetOutput)
}

// GetInstanceInstanceIpSetArrayInput is an input type that accepts GetInstanceInstanceIpSetArray and GetInstanceInstanceIpSetArrayOutput values.
// You can construct a concrete instance of `GetInstanceInstanceIpSetArrayInput` via:
//
//          GetInstanceInstanceIpSetArray{ GetInstanceInstanceIpSetArgs{...} }
type GetInstanceInstanceIpSetArrayInput interface {
	pulumi.Input

	ToGetInstanceInstanceIpSetArrayOutput() GetInstanceInstanceIpSetArrayOutput
	ToGetInstanceInstanceIpSetArrayOutputWithContext(context.Context) GetInstanceInstanceIpSetArrayOutput
}

type GetInstanceInstanceIpSetArray []GetInstanceInstanceIpSetInput

func (GetInstanceInstanceIpSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceInstanceIpSet)(nil)).Elem()
}

func (i GetInstanceInstanceIpSetArray) ToGetInstanceInstanceIpSetArrayOutput() GetInstanceInstanceIpSetArrayOutput {
	return i.ToGetInstanceInstanceIpSetArrayOutputWithContext(context.Background())
}

func (i GetInstanceInstanceIpSetArray) ToGetInstanceInstanceIpSetArrayOutputWithContext(ctx context.Context) GetInstanceInstanceIpSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceInstanceIpSetArrayOutput)
}

type GetInstanceInstanceIpSetOutput struct{ *pulumi.OutputState }

func (GetInstanceInstanceIpSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceInstanceIpSet)(nil)).Elem()
}

func (o GetInstanceInstanceIpSetOutput) ToGetInstanceInstanceIpSetOutput() GetInstanceInstanceIpSetOutput {
	return o
}

func (o GetInstanceInstanceIpSetOutput) ToGetInstanceInstanceIpSetOutputWithContext(ctx context.Context) GetInstanceInstanceIpSetOutput {
	return o
}

// Type of Elastic IP routes.
func (o GetInstanceInstanceIpSetOutput) InternetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceInstanceIpSet) string { return v.InternetType }).(pulumi.StringOutput)
}

// Elastic IP address.
func (o GetInstanceInstanceIpSetOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceInstanceIpSet) string { return v.Ip }).(pulumi.StringOutput)
}

type GetInstanceInstanceIpSetArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceInstanceIpSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceInstanceIpSet)(nil)).Elem()
}

func (o GetInstanceInstanceIpSetArrayOutput) ToGetInstanceInstanceIpSetArrayOutput() GetInstanceInstanceIpSetArrayOutput {
	return o
}

func (o GetInstanceInstanceIpSetArrayOutput) ToGetInstanceInstanceIpSetArrayOutputWithContext(ctx context.Context) GetInstanceInstanceIpSetArrayOutput {
	return o
}

func (o GetInstanceInstanceIpSetArrayOutput) Index(i pulumi.IntInput) GetInstanceInstanceIpSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceInstanceIpSet {
		return vs[0].([]GetInstanceInstanceIpSet)[vs[1].(int)]
	}).(GetInstanceInstanceIpSetOutput)
}

func init() {
	pulumi.RegisterOutputType(InstanceDataDisksOutput{})
	pulumi.RegisterOutputType(InstanceDataDisksPtrOutput{})
	pulumi.RegisterOutputType(InstanceDiskSetOutput{})
	pulumi.RegisterOutputType(InstanceDiskSetArrayOutput{})
	pulumi.RegisterOutputType(InstanceIpSetOutput{})
	pulumi.RegisterOutputType(InstanceIpSetArrayOutput{})
	pulumi.RegisterOutputType(GetImageImageOutput{})
	pulumi.RegisterOutputType(GetImageImageArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceInstanceOutput{})
	pulumi.RegisterOutputType(GetInstanceInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceInstanceDiskSetOutput{})
	pulumi.RegisterOutputType(GetInstanceInstanceDiskSetArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceInstanceIpSetOutput{})
	pulumi.RegisterOutputType(GetInstanceInstanceIpSetArrayOutput{})
}
