// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package uhost

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a Cloud Disk resource.
//
// > **Note** If the disk have attached to the instance, the instance will reboot automatically to make the change take effect when update the  `diskSize`.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-ucloud/blob/master/website/docs/r/disk.html.markdown.
type Disk struct {
	s *pulumi.ResourceState
}

// NewDisk registers a new resource with the given unique name, arguments, and options.
func NewDisk(ctx *pulumi.Context,
	name string, args *DiskArgs, opts ...pulumi.ResourceOpt) (*Disk, error) {
	if args == nil || args.AvailabilityZone == nil {
		return nil, errors.New("missing required argument 'AvailabilityZone'")
	}
	if args == nil || args.DiskSize == nil {
		return nil, errors.New("missing required argument 'DiskSize'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["availabilityZone"] = nil
		inputs["chargeType"] = nil
		inputs["diskSize"] = nil
		inputs["diskType"] = nil
		inputs["duration"] = nil
		inputs["name"] = nil
		inputs["tag"] = nil
	} else {
		inputs["availabilityZone"] = args.AvailabilityZone
		inputs["chargeType"] = args.ChargeType
		inputs["diskSize"] = args.DiskSize
		inputs["diskType"] = args.DiskType
		inputs["duration"] = args.Duration
		inputs["name"] = args.Name
		inputs["tag"] = args.Tag
	}
	inputs["createTime"] = nil
	inputs["expireTime"] = nil
	inputs["status"] = nil
	s, err := ctx.RegisterResource("ucloud:uhost/disk:Disk", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Disk{s: s}, nil
}

// GetDisk gets an existing Disk resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDisk(ctx *pulumi.Context,
	name string, id pulumi.ID, state *DiskState, opts ...pulumi.ResourceOpt) (*Disk, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["availabilityZone"] = state.AvailabilityZone
		inputs["chargeType"] = state.ChargeType
		inputs["createTime"] = state.CreateTime
		inputs["diskSize"] = state.DiskSize
		inputs["diskType"] = state.DiskType
		inputs["duration"] = state.Duration
		inputs["expireTime"] = state.ExpireTime
		inputs["name"] = state.Name
		inputs["status"] = state.Status
		inputs["tag"] = state.Tag
	}
	s, err := ctx.ReadResource("ucloud:uhost/disk:Disk", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Disk{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Disk) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Disk) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// Availability zone where cloud disk is located. Such as: "cn-bj2-02". You may refer to [list of availability zone](https://docs.ucloud.cn/api/summary/regionlist).
func (r *Disk) AvailabilityZone() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["availabilityZone"])
}

// Charge type of disk. Possible values are: `year` as pay by year, `month` as pay by month, `dynamic` as pay by hour. (Default: `month`).
func (r *Disk) ChargeType() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["chargeType"])
}

// The time of creation of disk, formatted in RFC3339 time string.
func (r *Disk) CreateTime() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["createTime"])
}

// The size of disk. Purchase the size of disk in GB. 1-8000 for a cloud disk, 1-4000 for SSD cloud disk. If the disk have attached to the instance, the instance will reboot automatically to make the change take effect when update the  `diskSize`.
func (r *Disk) DiskSize() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["diskSize"])
}

// The type of disk. Possible values are: `dataDisk`as cloud disk, `ssdDataDisk` as ssd cloud disk, `rssdDataDisk` as RDMA-SSD cloud disk (the `rssdDataDisk` only be supported in `cn-bj2-05`).(Default: `dataDisk`).
func (r *Disk) DiskType() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["diskType"])
}

// The duration that you will buy the resource. (Default: `1`). It is not required when `dynamic` (pay by hour), the value is `0` when `month`(pay by month) and the disk will be vaild till the last day of that month.
func (r *Disk) Duration() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["duration"])
}

// The expiration time of disk, formatted in RFC3339 time string.
func (r *Disk) ExpireTime() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["expireTime"])
}

func (r *Disk) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// The status of disk. Possible values are: `Available`, `InUse`, `Detaching`, `Initializating`, `Failed`, `Cloning`, `Restoring`, `RestoreFailed`.
func (r *Disk) Status() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["status"])
}

// A tag assigned to VPC, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
func (r *Disk) Tag() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["tag"])
}

// Input properties used for looking up and filtering Disk resources.
type DiskState struct {
	// Availability zone where cloud disk is located. Such as: "cn-bj2-02". You may refer to [list of availability zone](https://docs.ucloud.cn/api/summary/regionlist).
	AvailabilityZone interface{}
	// Charge type of disk. Possible values are: `year` as pay by year, `month` as pay by month, `dynamic` as pay by hour. (Default: `month`).
	ChargeType interface{}
	// The time of creation of disk, formatted in RFC3339 time string.
	CreateTime interface{}
	// The size of disk. Purchase the size of disk in GB. 1-8000 for a cloud disk, 1-4000 for SSD cloud disk. If the disk have attached to the instance, the instance will reboot automatically to make the change take effect when update the  `diskSize`.
	DiskSize interface{}
	// The type of disk. Possible values are: `dataDisk`as cloud disk, `ssdDataDisk` as ssd cloud disk, `rssdDataDisk` as RDMA-SSD cloud disk (the `rssdDataDisk` only be supported in `cn-bj2-05`).(Default: `dataDisk`).
	DiskType interface{}
	// The duration that you will buy the resource. (Default: `1`). It is not required when `dynamic` (pay by hour), the value is `0` when `month`(pay by month) and the disk will be vaild till the last day of that month.
	Duration interface{}
	// The expiration time of disk, formatted in RFC3339 time string.
	ExpireTime interface{}
	Name       interface{}
	// The status of disk. Possible values are: `Available`, `InUse`, `Detaching`, `Initializating`, `Failed`, `Cloning`, `Restoring`, `RestoreFailed`.
	Status interface{}
	// A tag assigned to VPC, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
	Tag interface{}
}

// The set of arguments for constructing a Disk resource.
type DiskArgs struct {
	// Availability zone where cloud disk is located. Such as: "cn-bj2-02". You may refer to [list of availability zone](https://docs.ucloud.cn/api/summary/regionlist).
	AvailabilityZone interface{}
	// Charge type of disk. Possible values are: `year` as pay by year, `month` as pay by month, `dynamic` as pay by hour. (Default: `month`).
	ChargeType interface{}
	// The size of disk. Purchase the size of disk in GB. 1-8000 for a cloud disk, 1-4000 for SSD cloud disk. If the disk have attached to the instance, the instance will reboot automatically to make the change take effect when update the  `diskSize`.
	DiskSize interface{}
	// The type of disk. Possible values are: `dataDisk`as cloud disk, `ssdDataDisk` as ssd cloud disk, `rssdDataDisk` as RDMA-SSD cloud disk (the `rssdDataDisk` only be supported in `cn-bj2-05`).(Default: `dataDisk`).
	DiskType interface{}
	// The duration that you will buy the resource. (Default: `1`). It is not required when `dynamic` (pay by hour), the value is `0` when `month`(pay by month) and the disk will be vaild till the last day of that month.
	Duration interface{}
	Name     interface{}
	// A tag assigned to VPC, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
	Tag interface{}
}
