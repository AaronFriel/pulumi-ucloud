// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ulb

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a Load Balancer Attachment resource for attaching Load Balancer to UHost Instance, etc.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-ucloud/blob/master/website/docs/r/lb_attachment.html.markdown.
type LbAttachment struct {
	s *pulumi.ResourceState
}

// NewLbAttachment registers a new resource with the given unique name, arguments, and options.
func NewLbAttachment(ctx *pulumi.Context,
	name string, args *LbAttachmentArgs, opts ...pulumi.ResourceOpt) (*LbAttachment, error) {
	if args == nil || args.ListenerId == nil {
		return nil, errors.New("missing required argument 'ListenerId'")
	}
	if args == nil || args.LoadBalancerId == nil {
		return nil, errors.New("missing required argument 'LoadBalancerId'")
	}
	if args == nil || args.ResourceId == nil {
		return nil, errors.New("missing required argument 'ResourceId'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["listenerId"] = nil
		inputs["loadBalancerId"] = nil
		inputs["port"] = nil
		inputs["resourceId"] = nil
		inputs["resourceType"] = nil
	} else {
		inputs["listenerId"] = args.ListenerId
		inputs["loadBalancerId"] = args.LoadBalancerId
		inputs["port"] = args.Port
		inputs["resourceId"] = args.ResourceId
		inputs["resourceType"] = args.ResourceType
	}
	inputs["privateIp"] = nil
	inputs["status"] = nil
	s, err := ctx.RegisterResource("ucloud:ulb/lbAttachment:LbAttachment", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &LbAttachment{s: s}, nil
}

// GetLbAttachment gets an existing LbAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLbAttachment(ctx *pulumi.Context,
	name string, id pulumi.ID, state *LbAttachmentState, opts ...pulumi.ResourceOpt) (*LbAttachment, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["listenerId"] = state.ListenerId
		inputs["loadBalancerId"] = state.LoadBalancerId
		inputs["port"] = state.Port
		inputs["privateIp"] = state.PrivateIp
		inputs["resourceId"] = state.ResourceId
		inputs["resourceType"] = state.ResourceType
		inputs["status"] = state.Status
	}
	s, err := ctx.ReadResource("ucloud:ulb/lbAttachment:LbAttachment", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &LbAttachment{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *LbAttachment) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *LbAttachment) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// The ID of a listener server.
func (r *LbAttachment) ListenerId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["listenerId"])
}

// The ID of a load balancer.
func (r *LbAttachment) LoadBalancerId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["loadBalancerId"])
}

// Port opened on the backend server to receive requests, range: 1-65535, (Default: `80`).
func (r *LbAttachment) Port() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["port"])
}

// The private ip address for backend servers.
func (r *LbAttachment) PrivateIp() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["privateIp"])
}

// The ID of a backend server.
func (r *LbAttachment) ResourceId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["resourceId"])
}

// **Deprecated**, attribute `resourceType` is deprecated for optimizing parameters.
func (r *LbAttachment) ResourceType() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["resourceType"])
}

// The status of backend servers. Possible values are: `normalRunning`, `exceptionRunning`.
func (r *LbAttachment) Status() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["status"])
}

// Input properties used for looking up and filtering LbAttachment resources.
type LbAttachmentState struct {
	// The ID of a listener server.
	ListenerId interface{}
	// The ID of a load balancer.
	LoadBalancerId interface{}
	// Port opened on the backend server to receive requests, range: 1-65535, (Default: `80`).
	Port interface{}
	// The private ip address for backend servers.
	PrivateIp interface{}
	// The ID of a backend server.
	ResourceId interface{}
	// **Deprecated**, attribute `resourceType` is deprecated for optimizing parameters.
	ResourceType interface{}
	// The status of backend servers. Possible values are: `normalRunning`, `exceptionRunning`.
	Status interface{}
}

// The set of arguments for constructing a LbAttachment resource.
type LbAttachmentArgs struct {
	// The ID of a listener server.
	ListenerId interface{}
	// The ID of a load balancer.
	LoadBalancerId interface{}
	// Port opened on the backend server to receive requests, range: 1-65535, (Default: `80`).
	Port interface{}
	// The ID of a backend server.
	ResourceId interface{}
	// **Deprecated**, attribute `resourceType` is deprecated for optimizing parameters.
	ResourceType interface{}
}
