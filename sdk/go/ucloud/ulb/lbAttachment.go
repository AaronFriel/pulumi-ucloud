// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package ulb

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a Load Balancer Attachment resource for attaching Load Balancer to UHost Instance, etc.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-ucloud/blob/master/website/docs/r/lb_attachment.html.markdown.
type LbAttachment struct {
	pulumi.CustomResourceState

	// The ID of a listener server.
	ListenerId pulumi.StringOutput `pulumi:"listenerId"`
	// The ID of a load balancer.
	LoadBalancerId pulumi.StringOutput `pulumi:"loadBalancerId"`
	// Port opened on the backend server to receive requests, range: 1-65535, (Default: `80`).
	Port pulumi.IntPtrOutput `pulumi:"port"`
	// The private ip address for backend servers.
	PrivateIp pulumi.StringOutput `pulumi:"privateIp"`
	// The ID of a backend server.
	ResourceId pulumi.StringOutput `pulumi:"resourceId"`
	// **Deprecated**, attribute `resourceType` is deprecated for optimizing parameters.
	ResourceType pulumi.StringOutput `pulumi:"resourceType"`
	// The status of backend servers. Possible values are: `normalRunning`, `exceptionRunning`.
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewLbAttachment registers a new resource with the given unique name, arguments, and options.
func NewLbAttachment(ctx *pulumi.Context,
	name string, args *LbAttachmentArgs, opts ...pulumi.ResourceOption) (*LbAttachment, error) {
	if args == nil || args.ListenerId == nil {
		return nil, errors.New("missing required argument 'ListenerId'")
	}
	if args == nil || args.LoadBalancerId == nil {
		return nil, errors.New("missing required argument 'LoadBalancerId'")
	}
	if args == nil || args.ResourceId == nil {
		return nil, errors.New("missing required argument 'ResourceId'")
	}
	if args == nil {
		args = &LbAttachmentArgs{}
	}
	var resource LbAttachment
	err := ctx.RegisterResource("ucloud:ulb/lbAttachment:LbAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLbAttachment gets an existing LbAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLbAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LbAttachmentState, opts ...pulumi.ResourceOption) (*LbAttachment, error) {
	var resource LbAttachment
	err := ctx.ReadResource("ucloud:ulb/lbAttachment:LbAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LbAttachment resources.
type lbAttachmentState struct {
	// The ID of a listener server.
	ListenerId *string `pulumi:"listenerId"`
	// The ID of a load balancer.
	LoadBalancerId *string `pulumi:"loadBalancerId"`
	// Port opened on the backend server to receive requests, range: 1-65535, (Default: `80`).
	Port *int `pulumi:"port"`
	// The private ip address for backend servers.
	PrivateIp *string `pulumi:"privateIp"`
	// The ID of a backend server.
	ResourceId *string `pulumi:"resourceId"`
	// **Deprecated**, attribute `resourceType` is deprecated for optimizing parameters.
	ResourceType *string `pulumi:"resourceType"`
	// The status of backend servers. Possible values are: `normalRunning`, `exceptionRunning`.
	Status *string `pulumi:"status"`
}

type LbAttachmentState struct {
	// The ID of a listener server.
	ListenerId pulumi.StringPtrInput
	// The ID of a load balancer.
	LoadBalancerId pulumi.StringPtrInput
	// Port opened on the backend server to receive requests, range: 1-65535, (Default: `80`).
	Port pulumi.IntPtrInput
	// The private ip address for backend servers.
	PrivateIp pulumi.StringPtrInput
	// The ID of a backend server.
	ResourceId pulumi.StringPtrInput
	// **Deprecated**, attribute `resourceType` is deprecated for optimizing parameters.
	ResourceType pulumi.StringPtrInput
	// The status of backend servers. Possible values are: `normalRunning`, `exceptionRunning`.
	Status pulumi.StringPtrInput
}

func (LbAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*lbAttachmentState)(nil)).Elem()
}

type lbAttachmentArgs struct {
	// The ID of a listener server.
	ListenerId string `pulumi:"listenerId"`
	// The ID of a load balancer.
	LoadBalancerId string `pulumi:"loadBalancerId"`
	// Port opened on the backend server to receive requests, range: 1-65535, (Default: `80`).
	Port *int `pulumi:"port"`
	// The ID of a backend server.
	ResourceId string `pulumi:"resourceId"`
	// **Deprecated**, attribute `resourceType` is deprecated for optimizing parameters.
	ResourceType *string `pulumi:"resourceType"`
}

// The set of arguments for constructing a LbAttachment resource.
type LbAttachmentArgs struct {
	// The ID of a listener server.
	ListenerId pulumi.StringInput
	// The ID of a load balancer.
	LoadBalancerId pulumi.StringInput
	// Port opened on the backend server to receive requests, range: 1-65535, (Default: `80`).
	Port pulumi.IntPtrInput
	// The ID of a backend server.
	ResourceId pulumi.StringInput
	// **Deprecated**, attribute `resourceType` is deprecated for optimizing parameters.
	ResourceType pulumi.StringPtrInput
}

func (LbAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*lbAttachmentArgs)(nil)).Elem()
}
