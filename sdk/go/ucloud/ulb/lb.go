// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ulb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Load Balancer resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-ucloud/sdk/go/ucloud/ulb"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := ulb.NewLB(ctx, "web", &ulb.LBArgs{
// 			Tag: pulumi.String("tf-example"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// LB can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import ucloud:ulb/lB:LB example ulb-abc123456
// ```
type LB struct {
	pulumi.CustomResourceState

	// , argument `chargeType` is deprecated for optimizing parameters.
	//
	// Deprecated: attribute `charge_type` is deprecated for optimizing parameters
	ChargeType pulumi.StringPtrOutput `pulumi:"chargeType"`
	// The time of creation for load balancer, formatted in RFC3339 time string.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// **Deprecated** attribute `expireTime` is deprecated for optimizing outputs.
	//
	// Deprecated: attribute `expire_time` is deprecated for optimizing outputs
	ExpireTime pulumi.StringOutput `pulumi:"expireTime"`
	// Indicate whether the load balancer is intranet mode.(Default: `"false"`)
	Internal pulumi.BoolOutput `pulumi:"internal"`
	// It is a nested type which documented below.
	IpSets LBIpSetArrayOutput  `pulumi:"ipSets"`
	Name   pulumi.StringOutput `pulumi:"name"`
	// The IP address of intranet IP. It is `""` if `internal` is `false`.
	PrivateIp pulumi.StringOutput `pulumi:"privateIp"`
	// The remarks of the load balancer. (Default: `""`).
	Remark pulumi.StringOutput `pulumi:"remark"`
	// The ID of the associated security group. The securityGroup only takes effect for ULB instances of requestProxy mode and extranet mode at present.
	SecurityGroup pulumi.StringOutput `pulumi:"securityGroup"`
	// The ID of subnet that intranet load balancer belongs to. This argument is not required if default subnet.
	SubnetId pulumi.StringOutput `pulumi:"subnetId"`
	// A tag assigned to load balancer, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
	Tag pulumi.StringPtrOutput `pulumi:"tag"`
	// The ID of the VPC linked to the Load balancer, This argument is not required if default VPC.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
}

// NewLB registers a new resource with the given unique name, arguments, and options.
func NewLB(ctx *pulumi.Context,
	name string, args *LBArgs, opts ...pulumi.ResourceOption) (*LB, error) {
	if args == nil {
		args = &LBArgs{}
	}

	var resource LB
	err := ctx.RegisterResource("ucloud:ulb/lB:LB", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLB gets an existing LB resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLB(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LBState, opts ...pulumi.ResourceOption) (*LB, error) {
	var resource LB
	err := ctx.ReadResource("ucloud:ulb/lB:LB", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LB resources.
type lbState struct {
	// , argument `chargeType` is deprecated for optimizing parameters.
	//
	// Deprecated: attribute `charge_type` is deprecated for optimizing parameters
	ChargeType *string `pulumi:"chargeType"`
	// The time of creation for load balancer, formatted in RFC3339 time string.
	CreateTime *string `pulumi:"createTime"`
	// **Deprecated** attribute `expireTime` is deprecated for optimizing outputs.
	//
	// Deprecated: attribute `expire_time` is deprecated for optimizing outputs
	ExpireTime *string `pulumi:"expireTime"`
	// Indicate whether the load balancer is intranet mode.(Default: `"false"`)
	Internal *bool `pulumi:"internal"`
	// It is a nested type which documented below.
	IpSets []LBIpSet `pulumi:"ipSets"`
	Name   *string   `pulumi:"name"`
	// The IP address of intranet IP. It is `""` if `internal` is `false`.
	PrivateIp *string `pulumi:"privateIp"`
	// The remarks of the load balancer. (Default: `""`).
	Remark *string `pulumi:"remark"`
	// The ID of the associated security group. The securityGroup only takes effect for ULB instances of requestProxy mode and extranet mode at present.
	SecurityGroup *string `pulumi:"securityGroup"`
	// The ID of subnet that intranet load balancer belongs to. This argument is not required if default subnet.
	SubnetId *string `pulumi:"subnetId"`
	// A tag assigned to load balancer, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
	Tag *string `pulumi:"tag"`
	// The ID of the VPC linked to the Load balancer, This argument is not required if default VPC.
	VpcId *string `pulumi:"vpcId"`
}

type LBState struct {
	// , argument `chargeType` is deprecated for optimizing parameters.
	//
	// Deprecated: attribute `charge_type` is deprecated for optimizing parameters
	ChargeType pulumi.StringPtrInput
	// The time of creation for load balancer, formatted in RFC3339 time string.
	CreateTime pulumi.StringPtrInput
	// **Deprecated** attribute `expireTime` is deprecated for optimizing outputs.
	//
	// Deprecated: attribute `expire_time` is deprecated for optimizing outputs
	ExpireTime pulumi.StringPtrInput
	// Indicate whether the load balancer is intranet mode.(Default: `"false"`)
	Internal pulumi.BoolPtrInput
	// It is a nested type which documented below.
	IpSets LBIpSetArrayInput
	Name   pulumi.StringPtrInput
	// The IP address of intranet IP. It is `""` if `internal` is `false`.
	PrivateIp pulumi.StringPtrInput
	// The remarks of the load balancer. (Default: `""`).
	Remark pulumi.StringPtrInput
	// The ID of the associated security group. The securityGroup only takes effect for ULB instances of requestProxy mode and extranet mode at present.
	SecurityGroup pulumi.StringPtrInput
	// The ID of subnet that intranet load balancer belongs to. This argument is not required if default subnet.
	SubnetId pulumi.StringPtrInput
	// A tag assigned to load balancer, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
	Tag pulumi.StringPtrInput
	// The ID of the VPC linked to the Load balancer, This argument is not required if default VPC.
	VpcId pulumi.StringPtrInput
}

func (LBState) ElementType() reflect.Type {
	return reflect.TypeOf((*lbState)(nil)).Elem()
}

type lbArgs struct {
	// , argument `chargeType` is deprecated for optimizing parameters.
	//
	// Deprecated: attribute `charge_type` is deprecated for optimizing parameters
	ChargeType *string `pulumi:"chargeType"`
	// Indicate whether the load balancer is intranet mode.(Default: `"false"`)
	Internal *bool   `pulumi:"internal"`
	Name     *string `pulumi:"name"`
	// The remarks of the load balancer. (Default: `""`).
	Remark *string `pulumi:"remark"`
	// The ID of the associated security group. The securityGroup only takes effect for ULB instances of requestProxy mode and extranet mode at present.
	SecurityGroup *string `pulumi:"securityGroup"`
	// The ID of subnet that intranet load balancer belongs to. This argument is not required if default subnet.
	SubnetId *string `pulumi:"subnetId"`
	// A tag assigned to load balancer, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
	Tag *string `pulumi:"tag"`
	// The ID of the VPC linked to the Load balancer, This argument is not required if default VPC.
	VpcId *string `pulumi:"vpcId"`
}

// The set of arguments for constructing a LB resource.
type LBArgs struct {
	// , argument `chargeType` is deprecated for optimizing parameters.
	//
	// Deprecated: attribute `charge_type` is deprecated for optimizing parameters
	ChargeType pulumi.StringPtrInput
	// Indicate whether the load balancer is intranet mode.(Default: `"false"`)
	Internal pulumi.BoolPtrInput
	Name     pulumi.StringPtrInput
	// The remarks of the load balancer. (Default: `""`).
	Remark pulumi.StringPtrInput
	// The ID of the associated security group. The securityGroup only takes effect for ULB instances of requestProxy mode and extranet mode at present.
	SecurityGroup pulumi.StringPtrInput
	// The ID of subnet that intranet load balancer belongs to. This argument is not required if default subnet.
	SubnetId pulumi.StringPtrInput
	// A tag assigned to load balancer, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
	Tag pulumi.StringPtrInput
	// The ID of the VPC linked to the Load balancer, This argument is not required if default VPC.
	VpcId pulumi.StringPtrInput
}

func (LBArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*lbArgs)(nil)).Elem()
}

type LBInput interface {
	pulumi.Input

	ToLBOutput() LBOutput
	ToLBOutputWithContext(ctx context.Context) LBOutput
}

func (*LB) ElementType() reflect.Type {
	return reflect.TypeOf((*LB)(nil))
}

func (i *LB) ToLBOutput() LBOutput {
	return i.ToLBOutputWithContext(context.Background())
}

func (i *LB) ToLBOutputWithContext(ctx context.Context) LBOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBOutput)
}

func (i *LB) ToLBPtrOutput() LBPtrOutput {
	return i.ToLBPtrOutputWithContext(context.Background())
}

func (i *LB) ToLBPtrOutputWithContext(ctx context.Context) LBPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBPtrOutput)
}

type LBPtrInput interface {
	pulumi.Input

	ToLBPtrOutput() LBPtrOutput
	ToLBPtrOutputWithContext(ctx context.Context) LBPtrOutput
}

type lbPtrType LBArgs

func (*lbPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LB)(nil))
}

func (i *lbPtrType) ToLBPtrOutput() LBPtrOutput {
	return i.ToLBPtrOutputWithContext(context.Background())
}

func (i *lbPtrType) ToLBPtrOutputWithContext(ctx context.Context) LBPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBPtrOutput)
}

// LBArrayInput is an input type that accepts LBArray and LBArrayOutput values.
// You can construct a concrete instance of `LBArrayInput` via:
//
//          LBArray{ LBArgs{...} }
type LBArrayInput interface {
	pulumi.Input

	ToLBArrayOutput() LBArrayOutput
	ToLBArrayOutputWithContext(context.Context) LBArrayOutput
}

type LBArray []LBInput

func (LBArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*LB)(nil))
}

func (i LBArray) ToLBArrayOutput() LBArrayOutput {
	return i.ToLBArrayOutputWithContext(context.Background())
}

func (i LBArray) ToLBArrayOutputWithContext(ctx context.Context) LBArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBArrayOutput)
}

// LBMapInput is an input type that accepts LBMap and LBMapOutput values.
// You can construct a concrete instance of `LBMapInput` via:
//
//          LBMap{ "key": LBArgs{...} }
type LBMapInput interface {
	pulumi.Input

	ToLBMapOutput() LBMapOutput
	ToLBMapOutputWithContext(context.Context) LBMapOutput
}

type LBMap map[string]LBInput

func (LBMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*LB)(nil))
}

func (i LBMap) ToLBMapOutput() LBMapOutput {
	return i.ToLBMapOutputWithContext(context.Background())
}

func (i LBMap) ToLBMapOutputWithContext(ctx context.Context) LBMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LBMapOutput)
}

type LBOutput struct {
	*pulumi.OutputState
}

func (LBOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LB)(nil))
}

func (o LBOutput) ToLBOutput() LBOutput {
	return o
}

func (o LBOutput) ToLBOutputWithContext(ctx context.Context) LBOutput {
	return o
}

func (o LBOutput) ToLBPtrOutput() LBPtrOutput {
	return o.ToLBPtrOutputWithContext(context.Background())
}

func (o LBOutput) ToLBPtrOutputWithContext(ctx context.Context) LBPtrOutput {
	return o.ApplyT(func(v LB) *LB {
		return &v
	}).(LBPtrOutput)
}

type LBPtrOutput struct {
	*pulumi.OutputState
}

func (LBPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LB)(nil))
}

func (o LBPtrOutput) ToLBPtrOutput() LBPtrOutput {
	return o
}

func (o LBPtrOutput) ToLBPtrOutputWithContext(ctx context.Context) LBPtrOutput {
	return o
}

type LBArrayOutput struct{ *pulumi.OutputState }

func (LBArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LB)(nil))
}

func (o LBArrayOutput) ToLBArrayOutput() LBArrayOutput {
	return o
}

func (o LBArrayOutput) ToLBArrayOutputWithContext(ctx context.Context) LBArrayOutput {
	return o
}

func (o LBArrayOutput) Index(i pulumi.IntInput) LBOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LB {
		return vs[0].([]LB)[vs[1].(int)]
	}).(LBOutput)
}

type LBMapOutput struct{ *pulumi.OutputState }

func (LBMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]LB)(nil))
}

func (o LBMapOutput) ToLBMapOutput() LBMapOutput {
	return o
}

func (o LBMapOutput) ToLBMapOutputWithContext(ctx context.Context) LBMapOutput {
	return o
}

func (o LBMapOutput) MapIndex(k pulumi.StringInput) LBOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) LB {
		return vs[0].(map[string]LB)[vs[1].(string)]
	}).(LBOutput)
}

func init() {
	pulumi.RegisterOutputType(LBOutput{})
	pulumi.RegisterOutputType(LBPtrOutput{})
	pulumi.RegisterOutputType(LBArrayOutput{})
	pulumi.RegisterOutputType(LBMapOutput{})
}
