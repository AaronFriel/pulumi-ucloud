// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ulb

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a Load Balancer resource.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-ucloud/blob/master/website/docs/r/lb.html.markdown.
type Lb struct {
	s *pulumi.ResourceState
}

// NewLb registers a new resource with the given unique name, arguments, and options.
func NewLb(ctx *pulumi.Context,
	name string, args *LbArgs, opts ...pulumi.ResourceOpt) (*Lb, error) {
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["chargeType"] = nil
		inputs["internal"] = nil
		inputs["name"] = nil
		inputs["remark"] = nil
		inputs["subnetId"] = nil
		inputs["tag"] = nil
		inputs["vpcId"] = nil
	} else {
		inputs["chargeType"] = args.ChargeType
		inputs["internal"] = args.Internal
		inputs["name"] = args.Name
		inputs["remark"] = args.Remark
		inputs["subnetId"] = args.SubnetId
		inputs["tag"] = args.Tag
		inputs["vpcId"] = args.VpcId
	}
	inputs["createTime"] = nil
	inputs["expireTime"] = nil
	inputs["ipSets"] = nil
	inputs["privateIp"] = nil
	s, err := ctx.RegisterResource("ucloud:ulb/lb:Lb", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Lb{s: s}, nil
}

// GetLb gets an existing Lb resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLb(ctx *pulumi.Context,
	name string, id pulumi.ID, state *LbState, opts ...pulumi.ResourceOpt) (*Lb, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["chargeType"] = state.ChargeType
		inputs["createTime"] = state.CreateTime
		inputs["expireTime"] = state.ExpireTime
		inputs["internal"] = state.Internal
		inputs["ipSets"] = state.IpSets
		inputs["name"] = state.Name
		inputs["privateIp"] = state.PrivateIp
		inputs["remark"] = state.Remark
		inputs["subnetId"] = state.SubnetId
		inputs["tag"] = state.Tag
		inputs["vpcId"] = state.VpcId
	}
	s, err := ctx.ReadResource("ucloud:ulb/lb:Lb", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Lb{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Lb) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Lb) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// **Deprecated**, argument `chargeType` is deprecated for optimizing parameters.
func (r *Lb) ChargeType() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["chargeType"])
}

// The time of creation for load balancer, formatted in RFC3339 time string.
func (r *Lb) CreateTime() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["createTime"])
}

// **Deprecated** attribute `expireTime` is deprecated for optimizing outputs.
func (r *Lb) ExpireTime() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["expireTime"])
}

// Indicate whether the load balancer is intranet mode.(Default: `"false"`)
func (r *Lb) Internal() *pulumi.BoolOutput {
	return (*pulumi.BoolOutput)(r.s.State["internal"])
}

// It is a nested type which documented below.
func (r *Lb) IpSets() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["ipSets"])
}

func (r *Lb) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// The IP address of intranet IP. It is `""` if `internal` is `false`.
func (r *Lb) PrivateIp() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["privateIp"])
}

// The remarks of the load balancer. (Default: `""`).
func (r *Lb) Remark() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["remark"])
}

// The ID of subnet that intranet load balancer belongs to. This argument is not required if default subnet.
func (r *Lb) SubnetId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["subnetId"])
}

// A tag assigned to load balancer, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
func (r *Lb) Tag() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["tag"])
}

// The ID of the VPC linked to the Load balancer, This argument is not required if default VPC.
func (r *Lb) VpcId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["vpcId"])
}

// Input properties used for looking up and filtering Lb resources.
type LbState struct {
	// **Deprecated**, argument `chargeType` is deprecated for optimizing parameters.
	ChargeType interface{}
	// The time of creation for load balancer, formatted in RFC3339 time string.
	CreateTime interface{}
	// **Deprecated** attribute `expireTime` is deprecated for optimizing outputs.
	ExpireTime interface{}
	// Indicate whether the load balancer is intranet mode.(Default: `"false"`)
	Internal interface{}
	// It is a nested type which documented below.
	IpSets interface{}
	Name   interface{}
	// The IP address of intranet IP. It is `""` if `internal` is `false`.
	PrivateIp interface{}
	// The remarks of the load balancer. (Default: `""`).
	Remark interface{}
	// The ID of subnet that intranet load balancer belongs to. This argument is not required if default subnet.
	SubnetId interface{}
	// A tag assigned to load balancer, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
	Tag interface{}
	// The ID of the VPC linked to the Load balancer, This argument is not required if default VPC.
	VpcId interface{}
}

// The set of arguments for constructing a Lb resource.
type LbArgs struct {
	// **Deprecated**, argument `chargeType` is deprecated for optimizing parameters.
	ChargeType interface{}
	// Indicate whether the load balancer is intranet mode.(Default: `"false"`)
	Internal interface{}
	Name     interface{}
	// The remarks of the load balancer. (Default: `""`).
	Remark interface{}
	// The ID of subnet that intranet load balancer belongs to. This argument is not required if default subnet.
	SubnetId interface{}
	// A tag assigned to load balancer, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
	Tag interface{}
	// The ID of the VPC linked to the Load balancer, This argument is not required if default VPC.
	VpcId interface{}
}
