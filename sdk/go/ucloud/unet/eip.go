// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package unet

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an Elastic IP resource.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-ucloud/blob/master/website/docs/r/eip.html.markdown.
type Eip struct {
	s *pulumi.ResourceState
}

// NewEip registers a new resource with the given unique name, arguments, and options.
func NewEip(ctx *pulumi.Context,
	name string, args *EipArgs, opts ...pulumi.ResourceOpt) (*Eip, error) {
	if args == nil || args.InternetType == nil {
		return nil, errors.New("missing required argument 'InternetType'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["bandwidth"] = nil
		inputs["chargeMode"] = nil
		inputs["chargeType"] = nil
		inputs["duration"] = nil
		inputs["internetType"] = nil
		inputs["name"] = nil
		inputs["remark"] = nil
		inputs["tag"] = nil
	} else {
		inputs["bandwidth"] = args.Bandwidth
		inputs["chargeMode"] = args.ChargeMode
		inputs["chargeType"] = args.ChargeType
		inputs["duration"] = args.Duration
		inputs["internetType"] = args.InternetType
		inputs["name"] = args.Name
		inputs["remark"] = args.Remark
		inputs["tag"] = args.Tag
	}
	inputs["createTime"] = nil
	inputs["expireTime"] = nil
	inputs["ipSets"] = nil
	inputs["publicIp"] = nil
	inputs["resource"] = nil
	inputs["status"] = nil
	s, err := ctx.RegisterResource("ucloud:unet/eip:Eip", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Eip{s: s}, nil
}

// GetEip gets an existing Eip resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEip(ctx *pulumi.Context,
	name string, id pulumi.ID, state *EipState, opts ...pulumi.ResourceOpt) (*Eip, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["bandwidth"] = state.Bandwidth
		inputs["chargeMode"] = state.ChargeMode
		inputs["chargeType"] = state.ChargeType
		inputs["createTime"] = state.CreateTime
		inputs["duration"] = state.Duration
		inputs["expireTime"] = state.ExpireTime
		inputs["internetType"] = state.InternetType
		inputs["ipSets"] = state.IpSets
		inputs["name"] = state.Name
		inputs["publicIp"] = state.PublicIp
		inputs["remark"] = state.Remark
		inputs["resource"] = state.Resource
		inputs["status"] = state.Status
		inputs["tag"] = state.Tag
	}
	s, err := ctx.ReadResource("ucloud:unet/eip:Eip", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Eip{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Eip) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Eip) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// Maximum bandwidth to the elastic public network, measured in Mbps (Mega bit per second). The ranges for bandwidth are: 1-200 for pay by traffic, 1-800 for pay by bandwidth. (Default: `1`).
func (r *Eip) Bandwidth() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["bandwidth"])
}

func (r *Eip) ChargeMode() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["chargeMode"])
}

// Elastic IP charge type. Possible values are: `year` as pay by year, `month` as pay by month, `dynamic` as pay by hour (specific permission required). (Default: `month`).
func (r *Eip) ChargeType() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["chargeType"])
}

// The time of creation for EIP, formatted in RFC3339 time string.
func (r *Eip) CreateTime() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["createTime"])
}

// The duration that you will buy the resource. (Default: `1`). It is not required when `dynamic` (pay by hour), the value is `0` when `month`(pay by month) and the instance will be valid till the last day of that month.
// * `chargeMode` -(Optional) Elastic IP charge mode. Possible values are: `traffic` as pay by traffic, `bandwidth` as pay by bandwidth, `shareBandwidth` as share bandwidth mode. (Default: `bandwidth`for the Elastic IP, `shareBandwidth` for the Elastic IP with share bandwidth mode).
func (r *Eip) Duration() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["duration"])
}

// The expiration time for EIP, formatted in RFC3339 time string.
func (r *Eip) ExpireTime() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["expireTime"])
}

// Type of Elastic IP routes. Possible values are: `international` as international BGP IP and `bgp` as china mainland BGP IP.
func (r *Eip) InternetType() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["internetType"])
}

// It is a nested type which documented below.
func (r *Eip) IpSets() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["ipSets"])
}

func (r *Eip) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// Public IP address of Elastic IP.
func (r *Eip) PublicIp() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["publicIp"])
}

// The remarks of the EIP. (Default: `""`).
func (r *Eip) Remark() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["remark"])
}

// It is a nested type which documented below.
func (r *Eip) Resource() *pulumi.Output {
	return r.s.State["resource"]
}

// EIP status. Possible values are: `used` as in use, `free` as available and `freeze` as associating.
func (r *Eip) Status() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["status"])
}

// A tag assigned to Elastic IP, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
func (r *Eip) Tag() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["tag"])
}

// Input properties used for looking up and filtering Eip resources.
type EipState struct {
	// Maximum bandwidth to the elastic public network, measured in Mbps (Mega bit per second). The ranges for bandwidth are: 1-200 for pay by traffic, 1-800 for pay by bandwidth. (Default: `1`).
	Bandwidth  interface{}
	ChargeMode interface{}
	// Elastic IP charge type. Possible values are: `year` as pay by year, `month` as pay by month, `dynamic` as pay by hour (specific permission required). (Default: `month`).
	ChargeType interface{}
	// The time of creation for EIP, formatted in RFC3339 time string.
	CreateTime interface{}
	// The duration that you will buy the resource. (Default: `1`). It is not required when `dynamic` (pay by hour), the value is `0` when `month`(pay by month) and the instance will be valid till the last day of that month.
	// * `chargeMode` -(Optional) Elastic IP charge mode. Possible values are: `traffic` as pay by traffic, `bandwidth` as pay by bandwidth, `shareBandwidth` as share bandwidth mode. (Default: `bandwidth`for the Elastic IP, `shareBandwidth` for the Elastic IP with share bandwidth mode).
	Duration interface{}
	// The expiration time for EIP, formatted in RFC3339 time string.
	ExpireTime interface{}
	// Type of Elastic IP routes. Possible values are: `international` as international BGP IP and `bgp` as china mainland BGP IP.
	InternetType interface{}
	// It is a nested type which documented below.
	IpSets interface{}
	Name   interface{}
	// Public IP address of Elastic IP.
	PublicIp interface{}
	// The remarks of the EIP. (Default: `""`).
	Remark interface{}
	// It is a nested type which documented below.
	Resource interface{}
	// EIP status. Possible values are: `used` as in use, `free` as available and `freeze` as associating.
	Status interface{}
	// A tag assigned to Elastic IP, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
	Tag interface{}
}

// The set of arguments for constructing a Eip resource.
type EipArgs struct {
	// Maximum bandwidth to the elastic public network, measured in Mbps (Mega bit per second). The ranges for bandwidth are: 1-200 for pay by traffic, 1-800 for pay by bandwidth. (Default: `1`).
	Bandwidth  interface{}
	ChargeMode interface{}
	// Elastic IP charge type. Possible values are: `year` as pay by year, `month` as pay by month, `dynamic` as pay by hour (specific permission required). (Default: `month`).
	ChargeType interface{}
	// The duration that you will buy the resource. (Default: `1`). It is not required when `dynamic` (pay by hour), the value is `0` when `month`(pay by month) and the instance will be valid till the last day of that month.
	// * `chargeMode` -(Optional) Elastic IP charge mode. Possible values are: `traffic` as pay by traffic, `bandwidth` as pay by bandwidth, `shareBandwidth` as share bandwidth mode. (Default: `bandwidth`for the Elastic IP, `shareBandwidth` for the Elastic IP with share bandwidth mode).
	Duration interface{}
	// Type of Elastic IP routes. Possible values are: `international` as international BGP IP and `bgp` as china mainland BGP IP.
	InternetType interface{}
	Name         interface{}
	// The remarks of the EIP. (Default: `""`).
	Remark interface{}
	// A tag assigned to Elastic IP, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
	Tag interface{}
}
