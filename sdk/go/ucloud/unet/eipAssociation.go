// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package unet

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an EIP Association resource for associating Elastic IP to UHost Instance, Load Balancer, etc.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-ucloud/blob/master/website/docs/r/eip_association.html.markdown.
type EipAssociation struct {
	s *pulumi.ResourceState
}

// NewEipAssociation registers a new resource with the given unique name, arguments, and options.
func NewEipAssociation(ctx *pulumi.Context,
	name string, args *EipAssociationArgs, opts ...pulumi.ResourceOpt) (*EipAssociation, error) {
	if args == nil || args.EipId == nil {
		return nil, errors.New("missing required argument 'EipId'")
	}
	if args == nil || args.ResourceId == nil {
		return nil, errors.New("missing required argument 'ResourceId'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["eipId"] = nil
		inputs["resourceId"] = nil
		inputs["resourceType"] = nil
	} else {
		inputs["eipId"] = args.EipId
		inputs["resourceId"] = args.ResourceId
		inputs["resourceType"] = args.ResourceType
	}
	s, err := ctx.RegisterResource("ucloud:unet/eipAssociation:EipAssociation", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &EipAssociation{s: s}, nil
}

// GetEipAssociation gets an existing EipAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEipAssociation(ctx *pulumi.Context,
	name string, id pulumi.ID, state *EipAssociationState, opts ...pulumi.ResourceOpt) (*EipAssociation, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["eipId"] = state.EipId
		inputs["resourceId"] = state.ResourceId
		inputs["resourceType"] = state.ResourceType
	}
	s, err := ctx.ReadResource("ucloud:unet/eipAssociation:EipAssociation", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &EipAssociation{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *EipAssociation) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *EipAssociation) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// The ID of EIP.
func (r *EipAssociation) EipId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["eipId"])
}

// The ID of resource with EIP attached.
func (r *EipAssociation) ResourceId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["resourceId"])
}

// **Deprecated**, attribute `resourceType` is deprecated for optimizing parameters.
func (r *EipAssociation) ResourceType() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["resourceType"])
}

// Input properties used for looking up and filtering EipAssociation resources.
type EipAssociationState struct {
	// The ID of EIP.
	EipId interface{}
	// The ID of resource with EIP attached.
	ResourceId interface{}
	// **Deprecated**, attribute `resourceType` is deprecated for optimizing parameters.
	ResourceType interface{}
}

// The set of arguments for constructing a EipAssociation resource.
type EipAssociationArgs struct {
	// The ID of EIP.
	EipId interface{}
	// The ID of resource with EIP attached.
	ResourceId interface{}
	// **Deprecated**, attribute `resourceType` is deprecated for optimizing parameters.
	ResourceType interface{}
}
