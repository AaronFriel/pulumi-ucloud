// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package unet

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a Security Group resource.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-ucloud/blob/master/website/docs/r/security_group.html.markdown.
type SecurityGroup struct {
	pulumi.CustomResourceState

	// The time of creation of security group, formatted in RFC3339 time string.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	Name       pulumi.StringOutput `pulumi:"name"`
	// The remarks of the security group. (Default: `""`).
	Remark pulumi.StringOutput `pulumi:"remark"`
	// A list of security group rules. Can be specified multiple times for each rules. Each rules supports fields documented below.
	Rules SecurityGroupRuleArrayOutput `pulumi:"rules"`
	// A tag assigned to security group, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
	Tag pulumi.StringPtrOutput `pulumi:"tag"`
}

// NewSecurityGroup registers a new resource with the given unique name, arguments, and options.
func NewSecurityGroup(ctx *pulumi.Context,
	name string, args *SecurityGroupArgs, opts ...pulumi.ResourceOption) (*SecurityGroup, error) {
	if args == nil || args.Rules == nil {
		return nil, errors.New("missing required argument 'Rules'")
	}
	if args == nil {
		args = &SecurityGroupArgs{}
	}
	var resource SecurityGroup
	err := ctx.RegisterResource("ucloud:unet/securityGroup:SecurityGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecurityGroup gets an existing SecurityGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecurityGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecurityGroupState, opts ...pulumi.ResourceOption) (*SecurityGroup, error) {
	var resource SecurityGroup
	err := ctx.ReadResource("ucloud:unet/securityGroup:SecurityGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecurityGroup resources.
type securityGroupState struct {
	// The time of creation of security group, formatted in RFC3339 time string.
	CreateTime *string `pulumi:"createTime"`
	Name       *string `pulumi:"name"`
	// The remarks of the security group. (Default: `""`).
	Remark *string `pulumi:"remark"`
	// A list of security group rules. Can be specified multiple times for each rules. Each rules supports fields documented below.
	Rules []SecurityGroupRule `pulumi:"rules"`
	// A tag assigned to security group, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
	Tag *string `pulumi:"tag"`
}

type SecurityGroupState struct {
	// The time of creation of security group, formatted in RFC3339 time string.
	CreateTime pulumi.StringPtrInput
	Name       pulumi.StringPtrInput
	// The remarks of the security group. (Default: `""`).
	Remark pulumi.StringPtrInput
	// A list of security group rules. Can be specified multiple times for each rules. Each rules supports fields documented below.
	Rules SecurityGroupRuleArrayInput
	// A tag assigned to security group, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
	Tag pulumi.StringPtrInput
}

func (SecurityGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*securityGroupState)(nil)).Elem()
}

type securityGroupArgs struct {
	Name *string `pulumi:"name"`
	// The remarks of the security group. (Default: `""`).
	Remark *string `pulumi:"remark"`
	// A list of security group rules. Can be specified multiple times for each rules. Each rules supports fields documented below.
	Rules []SecurityGroupRule `pulumi:"rules"`
	// A tag assigned to security group, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
	Tag *string `pulumi:"tag"`
}

// The set of arguments for constructing a SecurityGroup resource.
type SecurityGroupArgs struct {
	Name pulumi.StringPtrInput
	// The remarks of the security group. (Default: `""`).
	Remark pulumi.StringPtrInput
	// A list of security group rules. Can be specified multiple times for each rules. Each rules supports fields documented below.
	Rules SecurityGroupRuleArrayInput
	// A tag assigned to security group, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
	Tag pulumi.StringPtrInput
}

func (SecurityGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*securityGroupArgs)(nil)).Elem()
}
