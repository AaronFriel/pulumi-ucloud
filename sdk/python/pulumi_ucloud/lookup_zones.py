# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import utilities, tables

class LookupZonesResult:
    """
    A collection of values returned by lookupZones.
    """
    def __init__(__self__, output_file=None, total_count=None, zones=None, id=None):
        if output_file and not isinstance(output_file, str):
            raise TypeError("Expected argument 'output_file' to be a str")
        __self__.output_file = output_file
        if total_count and not isinstance(total_count, float):
            raise TypeError("Expected argument 'total_count' to be a float")
        __self__.total_count = total_count
        """
        Total number of zones that satisfy the condition.
        """
        if zones and not isinstance(zones, list):
            raise TypeError("Expected argument 'zones' to be a list")
        __self__.zones = zones
        """
        It is a nested type which documented below.
        """
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        __self__.id = id
        """
        id is the provider-assigned unique ID for this managed resource.
        """
class AwaitableLookupZonesResult(LookupZonesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return LookupZonesResult(
            output_file=self.output_file,
            total_count=self.total_count,
            zones=self.zones,
            id=self.id)

def lookup_zones(output_file=None,opts=None):
    """
    This data source provides a list of available zones in the current region.
    

    > This content is derived from https://github.com/terraform-providers/terraform-provider-ucloud/blob/master/website/docs/d/zones.html.markdown.
    """
    __args__ = dict()

    __args__['outputFile'] = output_file
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = utilities.get_version()
    __ret__ = pulumi.runtime.invoke('ucloud:/lookupZones:lookupZones', __args__, opts=opts).value

    return AwaitableLookupZonesResult(
        output_file=__ret__.get('outputFile'),
        total_count=__ret__.get('totalCount'),
        zones=__ret__.get('zones'),
        id=__ret__.get('id'))
