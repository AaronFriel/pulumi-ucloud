# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import utilities, tables

class LookupProjectsResult:
    """
    A collection of values returned by lookupProjects.
    """
    def __init__(__self__, is_finance=None, name_regex=None, output_file=None, projects=None, total_count=None, id=None):
        if is_finance and not isinstance(is_finance, bool):
            raise TypeError("Expected argument 'is_finance' to be a bool")
        __self__.is_finance = is_finance
        if name_regex and not isinstance(name_regex, str):
            raise TypeError("Expected argument 'name_regex' to be a str")
        __self__.name_regex = name_regex
        if output_file and not isinstance(output_file, str):
            raise TypeError("Expected argument 'output_file' to be a str")
        __self__.output_file = output_file
        if projects and not isinstance(projects, list):
            raise TypeError("Expected argument 'projects' to be a list")
        __self__.projects = projects
        """
        It is a nested type which documented below.
        """
        if total_count and not isinstance(total_count, float):
            raise TypeError("Expected argument 'total_count' to be a float")
        __self__.total_count = total_count
        """
        Total number of projects that satisfy the condition.
        """
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        __self__.id = id
        """
        id is the provider-assigned unique ID for this managed resource.
        """
class AwaitableLookupProjectsResult(LookupProjectsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return LookupProjectsResult(
            is_finance=self.is_finance,
            name_regex=self.name_regex,
            output_file=self.output_file,
            projects=self.projects,
            total_count=self.total_count,
            id=self.id)

def lookup_projects(is_finance=None,name_regex=None,output_file=None,opts=None):
    """
    This data source providers a list of projects owned by user according to finance permission and name.
    
    :param bool is_finance: To identify if the current account is granted with financial permission.
    :param str name_regex: A regex string to filter resulting projects by name.

    > This content is derived from https://github.com/terraform-providers/terraform-provider-ucloud/blob/master/website/docs/d/projects.html.markdown.
    """
    __args__ = dict()

    __args__['isFinance'] = is_finance
    __args__['nameRegex'] = name_regex
    __args__['outputFile'] = output_file
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = utilities.get_version()
    __ret__ = pulumi.runtime.invoke('ucloud:/lookupProjects:lookupProjects', __args__, opts=opts).value

    return AwaitableLookupProjectsResult(
        is_finance=__ret__.get('isFinance'),
        name_regex=__ret__.get('nameRegex'),
        output_file=__ret__.get('outputFile'),
        projects=__ret__.get('projects'),
        total_count=__ret__.get('totalCount'),
        id=__ret__.get('id'))
