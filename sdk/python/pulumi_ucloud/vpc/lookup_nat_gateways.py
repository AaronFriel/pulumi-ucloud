# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import utilities, tables

class LookupNatGatewaysResult:
    """
    A collection of values returned by lookupNatGateways.
    """
    def __init__(__self__, ids=None, name_regex=None, nat_gateways=None, output_file=None, total_count=None, id=None):
        if ids and not isinstance(ids, list):
            raise TypeError("Expected argument 'ids' to be a list")
        __self__.ids = ids
        if name_regex and not isinstance(name_regex, str):
            raise TypeError("Expected argument 'name_regex' to be a str")
        __self__.name_regex = name_regex
        if nat_gateways and not isinstance(nat_gateways, list):
            raise TypeError("Expected argument 'nat_gateways' to be a list")
        __self__.nat_gateways = nat_gateways
        """
        It is a nested type. Nat Gateways documented below.
        """
        if output_file and not isinstance(output_file, str):
            raise TypeError("Expected argument 'output_file' to be a str")
        __self__.output_file = output_file
        if total_count and not isinstance(total_count, float):
            raise TypeError("Expected argument 'total_count' to be a float")
        __self__.total_count = total_count
        """
        Total number of Nat Gateways that satisfy the condition.
        """
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        __self__.id = id
        """
        id is the provider-assigned unique ID for this managed resource.
        """
class AwaitableLookupNatGatewaysResult(LookupNatGatewaysResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return LookupNatGatewaysResult(
            ids=self.ids,
            name_regex=self.name_regex,
            nat_gateways=self.nat_gateways,
            output_file=self.output_file,
            total_count=self.total_count,
            id=self.id)

def lookup_nat_gateways(ids=None,name_regex=None,output_file=None,opts=None):
    """
    This data source providers a list of Nat Gateway resources according to their ID and name.
    
    :param list ids: A list of Nat Gateway IDs, all the Nat Gateways belongs to the defined region will be retrieved if this argument is "".
    :param str name_regex: A regex string to filter resulting Nat Gateways by name.

    > This content is derived from https://github.com/terraform-providers/terraform-provider-ucloud/blob/master/website/docs/d/nat_gateways.html.markdown.
    """
    __args__ = dict()

    __args__['ids'] = ids
    __args__['nameRegex'] = name_regex
    __args__['outputFile'] = output_file
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = utilities.get_version()
    __ret__ = pulumi.runtime.invoke('ucloud:vpc/lookupNatGateways:lookupNatGateways', __args__, opts=opts).value

    return AwaitableLookupNatGatewaysResult(
        ids=__ret__.get('ids'),
        name_regex=__ret__.get('nameRegex'),
        nat_gateways=__ret__.get('natGateways'),
        output_file=__ret__.get('outputFile'),
        total_count=__ret__.get('totalCount'),
        id=__ret__.get('id'))
