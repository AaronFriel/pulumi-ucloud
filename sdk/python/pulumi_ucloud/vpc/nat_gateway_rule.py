# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import utilities, tables

class NatGatewayRule(pulumi.CustomResource):
    dst_ip: pulumi.Output[str]
    """
    The private ip of instance bound to the jNAT gateway.
    """
    dst_port_range: pulumi.Output[str]
    """
    The range of port numbers of the private ip, range: 1-65535. (eg: `port` or `port1-port2`).
    """
    name: pulumi.Output[str]
    nat_gateway_id: pulumi.Output[str]
    """
    The ID of the Nat Gateway. 
    """
    protocol: pulumi.Output[str]
    """
    The protocol of the Nat Gateway Rule. Possible values: `tcp`, `udp`.
    """
    src_eip_id: pulumi.Output[str]
    """
    The ID of eip associate to the Nat Gateway.
    """
    src_port_range: pulumi.Output[str]
    """
    The range of port numbers of the eip, range: 1-65535. (eg: `port` or `port1-port2`).
    """
    def __init__(__self__, resource_name, opts=None, dst_ip=None, dst_port_range=None, name=None, nat_gateway_id=None, protocol=None, src_eip_id=None, src_port_range=None, __props__=None, __name__=None, __opts__=None):
        """
        Provides a Nat Gateway resource.
        
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] dst_ip: The private ip of instance bound to the jNAT gateway.
        :param pulumi.Input[str] dst_port_range: The range of port numbers of the private ip, range: 1-65535. (eg: `port` or `port1-port2`).
        :param pulumi.Input[str] nat_gateway_id: The ID of the Nat Gateway. 
        :param pulumi.Input[str] protocol: The protocol of the Nat Gateway Rule. Possible values: `tcp`, `udp`.
        :param pulumi.Input[str] src_eip_id: The ID of eip associate to the Nat Gateway.
        :param pulumi.Input[str] src_port_range: The range of port numbers of the eip, range: 1-65535. (eg: `port` or `port1-port2`).

        > This content is derived from https://github.com/terraform-providers/terraform-provider-ucloud/blob/master/website/docs/r/nat_gateway_rule.html.markdown.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            if dst_ip is None:
                raise TypeError("Missing required property 'dst_ip'")
            __props__['dst_ip'] = dst_ip
            if dst_port_range is None:
                raise TypeError("Missing required property 'dst_port_range'")
            __props__['dst_port_range'] = dst_port_range
            __props__['name'] = name
            if nat_gateway_id is None:
                raise TypeError("Missing required property 'nat_gateway_id'")
            __props__['nat_gateway_id'] = nat_gateway_id
            if protocol is None:
                raise TypeError("Missing required property 'protocol'")
            __props__['protocol'] = protocol
            if src_eip_id is None:
                raise TypeError("Missing required property 'src_eip_id'")
            __props__['src_eip_id'] = src_eip_id
            if src_port_range is None:
                raise TypeError("Missing required property 'src_port_range'")
            __props__['src_port_range'] = src_port_range
        super(NatGatewayRule, __self__).__init__(
            'ucloud:vpc/natGatewayRule:NatGatewayRule',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, dst_ip=None, dst_port_range=None, name=None, nat_gateway_id=None, protocol=None, src_eip_id=None, src_port_range=None):
        """
        Get an existing NatGatewayRule resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.
        
        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] dst_ip: The private ip of instance bound to the jNAT gateway.
        :param pulumi.Input[str] dst_port_range: The range of port numbers of the private ip, range: 1-65535. (eg: `port` or `port1-port2`).
        :param pulumi.Input[str] nat_gateway_id: The ID of the Nat Gateway. 
        :param pulumi.Input[str] protocol: The protocol of the Nat Gateway Rule. Possible values: `tcp`, `udp`.
        :param pulumi.Input[str] src_eip_id: The ID of eip associate to the Nat Gateway.
        :param pulumi.Input[str] src_port_range: The range of port numbers of the eip, range: 1-65535. (eg: `port` or `port1-port2`).

        > This content is derived from https://github.com/terraform-providers/terraform-provider-ucloud/blob/master/website/docs/r/nat_gateway_rule.html.markdown.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()
        __props__["dst_ip"] = dst_ip
        __props__["dst_port_range"] = dst_port_range
        __props__["name"] = name
        __props__["nat_gateway_id"] = nat_gateway_id
        __props__["protocol"] = protocol
        __props__["src_eip_id"] = src_eip_id
        __props__["src_port_range"] = src_port_range
        return NatGatewayRule(resource_name, opts=opts, __props__=__props__)
    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

