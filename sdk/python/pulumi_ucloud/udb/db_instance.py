# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import utilities, tables

class DbInstance(pulumi.CustomResource):
    availability_zone: pulumi.Output[str]
    """
    Availability zone where database instance is located. Such as: "cn-bj2-02". You may refer to [list of availability zone](https://docs.ucloud.cn/api/summary/regionlist)
    """
    backup_begin_time: pulumi.Output[float]
    """
    Specifies when the backup starts, measured in hour, it starts at one o'clock of 1, 2, 3, 4 in the morning by default.
    """
    backup_black_lists: pulumi.Output[list]
    """
    The backup for database such as "test.%" or table such as "city.address" specified in the black lists are not supported.
    """
    backup_count: pulumi.Output[float]
    """
    Specifies the number of backup saved per week, it is 7 backups saved per week by default.
    """
    backup_date: pulumi.Output[str]
    """
    Specifies whether the backup took place from Sunday to Saturday by displaying 7 digits. 0 stands for backup disabled and 1 stands for backup enabled. The rightmost digit specifies whether the backup took place on Sunday, and the digits from right to left specify whether the backup took place from Monday to Saturday, it's mandatory required to backup twice per week at least. such as: digits "1100000" stands for the backup took place on Saturday and Friday.
    """
    charge_type: pulumi.Output[str]
    """
    The charge type of db instance, possible values are: `year`, `month` and `dynamic` as pay by hour (specific permission required). (Default: `month`).
    """
    create_time: pulumi.Output[str]
    """
    The creation time of database, formatted by RFC3339 time string.
    """
    duration: pulumi.Output[float]
    """
    The duration that you will buy the db instance (Default: `1`). The value is `0` when pay by month and the instance will be vaild till the last day of that month. It is not required when `dynamic` (pay by hour).
    """
    engine: pulumi.Output[str]
    """
    The type of database engine, possible values are: "mysql", "percona".
    """
    engine_version: pulumi.Output[str]
    """
    The database engine version, possible values are: "5.5", "5.6", "5.7".
    - 5.5/5.6/5.7 for mysql and percona engine.
    """
    expire_time: pulumi.Output[str]
    """
    The expiration time of database, formatted by RFC3339 time string.
    """
    instance_storage: pulumi.Output[float]
    """
    Specifies the allocated storage size in gigabytes (GB), range from 20 to 3000GB. The volume adjustment must be a multiple of 10 GB. The maximum disk volume for SSD type are：
    - 500GB if the memory chosen is equal or less than 8GB;
    - 1000GB if the memory chosen is from 12 to 24GB;
    - 2000GB if the memory chosen is 32GB;
    - 3000GB if the memory chosen is equal or more than 48GB.
    """
    instance_type: pulumi.Output[str]
    modify_time: pulumi.Output[str]
    """
    The modification time of database, formatted by RFC3339 time string.
    """
    name: pulumi.Output[str]
    password: pulumi.Output[str]
    port: pulumi.Output[float]
    """
    The port on which the database accepts connections, the default port is 3306 for mysql and percona.
    """
    private_ip: pulumi.Output[str]
    """
    The private IP address assigned to the database instance.
    """
    standby_zone: pulumi.Output[str]
    """
    Availability zone where the standby database instance is located for the high availability database instance with multiple zone; The disaster recovery of data center can be activated by switching to the standby database instance for the high availability database instance.
    """
    status: pulumi.Output[str]
    """
    Specifies the status of database, possible values are: `Init`, `Fail`, `Starting`, `Running`, `Shutdown`, `Shutoff`, `Delete`, `Upgrading`, `Promoting`, `Recovering` and `Recover fail`.
    """
    subnet_id: pulumi.Output[str]
    """
    The ID of subnet.
    """
    tag: pulumi.Output[str]
    """
    A tag assigned to database instance, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
    """
    vpc_id: pulumi.Output[str]
    """
    The ID of VPC linked to the database instances.
    """
    def __init__(__self__, resource_name, opts=None, availability_zone=None, backup_begin_time=None, backup_black_lists=None, backup_count=None, backup_date=None, charge_type=None, duration=None, engine=None, engine_version=None, instance_storage=None, instance_type=None, name=None, password=None, port=None, standby_zone=None, subnet_id=None, tag=None, vpc_id=None, __props__=None, __name__=None, __opts__=None):
        """
        Provides a Database instance resource.
        
        > **Note**  Please do confirm if any task pending submission before reset your password, since the password reset will take effect immediately.
        
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] availability_zone: Availability zone where database instance is located. Such as: "cn-bj2-02". You may refer to [list of availability zone](https://docs.ucloud.cn/api/summary/regionlist)
        :param pulumi.Input[float] backup_begin_time: Specifies when the backup starts, measured in hour, it starts at one o'clock of 1, 2, 3, 4 in the morning by default.
        :param pulumi.Input[list] backup_black_lists: The backup for database such as "test.%" or table such as "city.address" specified in the black lists are not supported.
        :param pulumi.Input[float] backup_count: Specifies the number of backup saved per week, it is 7 backups saved per week by default.
        :param pulumi.Input[str] backup_date: Specifies whether the backup took place from Sunday to Saturday by displaying 7 digits. 0 stands for backup disabled and 1 stands for backup enabled. The rightmost digit specifies whether the backup took place on Sunday, and the digits from right to left specify whether the backup took place from Monday to Saturday, it's mandatory required to backup twice per week at least. such as: digits "1100000" stands for the backup took place on Saturday and Friday.
        :param pulumi.Input[str] charge_type: The charge type of db instance, possible values are: `year`, `month` and `dynamic` as pay by hour (specific permission required). (Default: `month`).
        :param pulumi.Input[float] duration: The duration that you will buy the db instance (Default: `1`). The value is `0` when pay by month and the instance will be vaild till the last day of that month. It is not required when `dynamic` (pay by hour).
        :param pulumi.Input[str] engine: The type of database engine, possible values are: "mysql", "percona".
        :param pulumi.Input[str] engine_version: The database engine version, possible values are: "5.5", "5.6", "5.7".
               - 5.5/5.6/5.7 for mysql and percona engine.
        :param pulumi.Input[float] instance_storage: Specifies the allocated storage size in gigabytes (GB), range from 20 to 3000GB. The volume adjustment must be a multiple of 10 GB. The maximum disk volume for SSD type are：
               - 500GB if the memory chosen is equal or less than 8GB;
               - 1000GB if the memory chosen is from 12 to 24GB;
               - 2000GB if the memory chosen is 32GB;
               - 3000GB if the memory chosen is equal or more than 48GB.
        :param pulumi.Input[float] port: The port on which the database accepts connections, the default port is 3306 for mysql and percona.
        :param pulumi.Input[str] standby_zone: Availability zone where the standby database instance is located for the high availability database instance with multiple zone; The disaster recovery of data center can be activated by switching to the standby database instance for the high availability database instance.
        :param pulumi.Input[str] subnet_id: The ID of subnet.
        :param pulumi.Input[str] tag: A tag assigned to database instance, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
        :param pulumi.Input[str] vpc_id: The ID of VPC linked to the database instances.

        > This content is derived from https://github.com/terraform-providers/terraform-provider-ucloud/blob/master/website/docs/r/db_instance.html.markdown.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            if availability_zone is None:
                raise TypeError("Missing required property 'availability_zone'")
            __props__['availability_zone'] = availability_zone
            __props__['backup_begin_time'] = backup_begin_time
            __props__['backup_black_lists'] = backup_black_lists
            __props__['backup_count'] = backup_count
            __props__['backup_date'] = backup_date
            __props__['charge_type'] = charge_type
            __props__['duration'] = duration
            if engine is None:
                raise TypeError("Missing required property 'engine'")
            __props__['engine'] = engine
            if engine_version is None:
                raise TypeError("Missing required property 'engine_version'")
            __props__['engine_version'] = engine_version
            if instance_storage is None:
                raise TypeError("Missing required property 'instance_storage'")
            __props__['instance_storage'] = instance_storage
            if instance_type is None:
                raise TypeError("Missing required property 'instance_type'")
            __props__['instance_type'] = instance_type
            __props__['name'] = name
            __props__['password'] = password
            __props__['port'] = port
            __props__['standby_zone'] = standby_zone
            __props__['subnet_id'] = subnet_id
            __props__['tag'] = tag
            __props__['vpc_id'] = vpc_id
            __props__['create_time'] = None
            __props__['expire_time'] = None
            __props__['modify_time'] = None
            __props__['private_ip'] = None
            __props__['status'] = None
        super(DbInstance, __self__).__init__(
            'ucloud:udb/dbInstance:DbInstance',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, availability_zone=None, backup_begin_time=None, backup_black_lists=None, backup_count=None, backup_date=None, charge_type=None, create_time=None, duration=None, engine=None, engine_version=None, expire_time=None, instance_storage=None, instance_type=None, modify_time=None, name=None, password=None, port=None, private_ip=None, standby_zone=None, status=None, subnet_id=None, tag=None, vpc_id=None):
        """
        Get an existing DbInstance resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.
        
        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] availability_zone: Availability zone where database instance is located. Such as: "cn-bj2-02". You may refer to [list of availability zone](https://docs.ucloud.cn/api/summary/regionlist)
        :param pulumi.Input[float] backup_begin_time: Specifies when the backup starts, measured in hour, it starts at one o'clock of 1, 2, 3, 4 in the morning by default.
        :param pulumi.Input[list] backup_black_lists: The backup for database such as "test.%" or table such as "city.address" specified in the black lists are not supported.
        :param pulumi.Input[float] backup_count: Specifies the number of backup saved per week, it is 7 backups saved per week by default.
        :param pulumi.Input[str] backup_date: Specifies whether the backup took place from Sunday to Saturday by displaying 7 digits. 0 stands for backup disabled and 1 stands for backup enabled. The rightmost digit specifies whether the backup took place on Sunday, and the digits from right to left specify whether the backup took place from Monday to Saturday, it's mandatory required to backup twice per week at least. such as: digits "1100000" stands for the backup took place on Saturday and Friday.
        :param pulumi.Input[str] charge_type: The charge type of db instance, possible values are: `year`, `month` and `dynamic` as pay by hour (specific permission required). (Default: `month`).
        :param pulumi.Input[str] create_time: The creation time of database, formatted by RFC3339 time string.
        :param pulumi.Input[float] duration: The duration that you will buy the db instance (Default: `1`). The value is `0` when pay by month and the instance will be vaild till the last day of that month. It is not required when `dynamic` (pay by hour).
        :param pulumi.Input[str] engine: The type of database engine, possible values are: "mysql", "percona".
        :param pulumi.Input[str] engine_version: The database engine version, possible values are: "5.5", "5.6", "5.7".
               - 5.5/5.6/5.7 for mysql and percona engine.
        :param pulumi.Input[str] expire_time: The expiration time of database, formatted by RFC3339 time string.
        :param pulumi.Input[float] instance_storage: Specifies the allocated storage size in gigabytes (GB), range from 20 to 3000GB. The volume adjustment must be a multiple of 10 GB. The maximum disk volume for SSD type are：
               - 500GB if the memory chosen is equal or less than 8GB;
               - 1000GB if the memory chosen is from 12 to 24GB;
               - 2000GB if the memory chosen is 32GB;
               - 3000GB if the memory chosen is equal or more than 48GB.
        :param pulumi.Input[str] modify_time: The modification time of database, formatted by RFC3339 time string.
        :param pulumi.Input[float] port: The port on which the database accepts connections, the default port is 3306 for mysql and percona.
        :param pulumi.Input[str] private_ip: The private IP address assigned to the database instance.
        :param pulumi.Input[str] standby_zone: Availability zone where the standby database instance is located for the high availability database instance with multiple zone; The disaster recovery of data center can be activated by switching to the standby database instance for the high availability database instance.
        :param pulumi.Input[str] status: Specifies the status of database, possible values are: `Init`, `Fail`, `Starting`, `Running`, `Shutdown`, `Shutoff`, `Delete`, `Upgrading`, `Promoting`, `Recovering` and `Recover fail`.
        :param pulumi.Input[str] subnet_id: The ID of subnet.
        :param pulumi.Input[str] tag: A tag assigned to database instance, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
        :param pulumi.Input[str] vpc_id: The ID of VPC linked to the database instances.

        > This content is derived from https://github.com/terraform-providers/terraform-provider-ucloud/blob/master/website/docs/r/db_instance.html.markdown.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()
        __props__["availability_zone"] = availability_zone
        __props__["backup_begin_time"] = backup_begin_time
        __props__["backup_black_lists"] = backup_black_lists
        __props__["backup_count"] = backup_count
        __props__["backup_date"] = backup_date
        __props__["charge_type"] = charge_type
        __props__["create_time"] = create_time
        __props__["duration"] = duration
        __props__["engine"] = engine
        __props__["engine_version"] = engine_version
        __props__["expire_time"] = expire_time
        __props__["instance_storage"] = instance_storage
        __props__["instance_type"] = instance_type
        __props__["modify_time"] = modify_time
        __props__["name"] = name
        __props__["password"] = password
        __props__["port"] = port
        __props__["private_ip"] = private_ip
        __props__["standby_zone"] = standby_zone
        __props__["status"] = status
        __props__["subnet_id"] = subnet_id
        __props__["tag"] = tag
        __props__["vpc_id"] = vpc_id
        return DbInstance(resource_name, opts=opts, __props__=__props__)
    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

