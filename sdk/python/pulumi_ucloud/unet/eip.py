# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import utilities, tables

class Eip(pulumi.CustomResource):
    bandwidth: pulumi.Output[float]
    """
    Maximum bandwidth to the elastic public network, measured in Mbps (Mega bit per second). The ranges for bandwidth are: 1-200 for pay by traffic, 1-800 for pay by bandwidth. (Default: `1`).
    """
    charge_mode: pulumi.Output[str]
    charge_type: pulumi.Output[str]
    """
    Elastic IP charge type. Possible values are: `year` as pay by year, `month` as pay by month, `dynamic` as pay by hour (specific permission required). (Default: `month`).
    """
    create_time: pulumi.Output[str]
    """
    The time of creation for EIP, formatted in RFC3339 time string.
    """
    duration: pulumi.Output[float]
    """
    The duration that you will buy the resource. (Default: `1`). It is not required when `dynamic` (pay by hour), the value is `0` when `month`(pay by month) and the instance will be valid till the last day of that month.
    * `charge_mode` -(Optional) Elastic IP charge mode. Possible values are: `traffic` as pay by traffic, `bandwidth` as pay by bandwidth, `share_bandwidth` as share bandwidth mode. (Default: `bandwidth`for the Elastic IP, `share_bandwidth` for the Elastic IP with share bandwidth mode).
    """
    expire_time: pulumi.Output[str]
    """
    The expiration time for EIP, formatted in RFC3339 time string.
    """
    internet_type: pulumi.Output[str]
    """
    Type of Elastic IP routes. Possible values are: `international` as international BGP IP and `bgp` as china mainland BGP IP.
    """
    ip_sets: pulumi.Output[list]
    """
    It is a nested type which documented below.
    
      * `internet_type` (`str`) - Type of Elastic IP routes. Possible values are: `international` as international BGP IP and `bgp` as china mainland BGP IP.
      * `ip` (`str`)
    """
    name: pulumi.Output[str]
    public_ip: pulumi.Output[str]
    """
    Public IP address of Elastic IP.
    """
    remark: pulumi.Output[str]
    """
    The remarks of the EIP. (Default: `""`).
    """
    resource: pulumi.Output[dict]
    """
    It is a nested type which documented below.
    
      * `id` (`str`) - The ID of the resource with EIP attached.
      * `type` (`str`) - The type of resource with EIP attached. Possible values are `instance` as instance, `lb` as load balancer.
    """
    status: pulumi.Output[str]
    """
    EIP status. Possible values are: `used` as in use, `free` as available and `freeze` as associating.
    """
    tag: pulumi.Output[str]
    """
    A tag assigned to Elastic IP, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
    """
    def __init__(__self__, resource_name, opts=None, bandwidth=None, charge_mode=None, charge_type=None, duration=None, internet_type=None, name=None, remark=None, tag=None, __props__=None, __name__=None, __opts__=None):
        """
        Provides an Elastic IP resource.
        
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[float] bandwidth: Maximum bandwidth to the elastic public network, measured in Mbps (Mega bit per second). The ranges for bandwidth are: 1-200 for pay by traffic, 1-800 for pay by bandwidth. (Default: `1`).
        :param pulumi.Input[str] charge_type: Elastic IP charge type. Possible values are: `year` as pay by year, `month` as pay by month, `dynamic` as pay by hour (specific permission required). (Default: `month`).
        :param pulumi.Input[float] duration: The duration that you will buy the resource. (Default: `1`). It is not required when `dynamic` (pay by hour), the value is `0` when `month`(pay by month) and the instance will be valid till the last day of that month.
               * `charge_mode` -(Optional) Elastic IP charge mode. Possible values are: `traffic` as pay by traffic, `bandwidth` as pay by bandwidth, `share_bandwidth` as share bandwidth mode. (Default: `bandwidth`for the Elastic IP, `share_bandwidth` for the Elastic IP with share bandwidth mode).
        :param pulumi.Input[str] internet_type: Type of Elastic IP routes. Possible values are: `international` as international BGP IP and `bgp` as china mainland BGP IP.
        :param pulumi.Input[str] remark: The remarks of the EIP. (Default: `""`).
        :param pulumi.Input[str] tag: A tag assigned to Elastic IP, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).

        > This content is derived from https://github.com/terraform-providers/terraform-provider-ucloud/blob/master/website/docs/r/eip.html.markdown.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['bandwidth'] = bandwidth
            __props__['charge_mode'] = charge_mode
            __props__['charge_type'] = charge_type
            __props__['duration'] = duration
            if internet_type is None:
                raise TypeError("Missing required property 'internet_type'")
            __props__['internet_type'] = internet_type
            __props__['name'] = name
            __props__['remark'] = remark
            __props__['tag'] = tag
            __props__['create_time'] = None
            __props__['expire_time'] = None
            __props__['ip_sets'] = None
            __props__['public_ip'] = None
            __props__['resource'] = None
            __props__['status'] = None
        super(Eip, __self__).__init__(
            'ucloud:unet/eip:Eip',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, bandwidth=None, charge_mode=None, charge_type=None, create_time=None, duration=None, expire_time=None, internet_type=None, ip_sets=None, name=None, public_ip=None, remark=None, resource=None, status=None, tag=None):
        """
        Get an existing Eip resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.
        
        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[float] bandwidth: Maximum bandwidth to the elastic public network, measured in Mbps (Mega bit per second). The ranges for bandwidth are: 1-200 for pay by traffic, 1-800 for pay by bandwidth. (Default: `1`).
        :param pulumi.Input[str] charge_type: Elastic IP charge type. Possible values are: `year` as pay by year, `month` as pay by month, `dynamic` as pay by hour (specific permission required). (Default: `month`).
        :param pulumi.Input[str] create_time: The time of creation for EIP, formatted in RFC3339 time string.
        :param pulumi.Input[float] duration: The duration that you will buy the resource. (Default: `1`). It is not required when `dynamic` (pay by hour), the value is `0` when `month`(pay by month) and the instance will be valid till the last day of that month.
               * `charge_mode` -(Optional) Elastic IP charge mode. Possible values are: `traffic` as pay by traffic, `bandwidth` as pay by bandwidth, `share_bandwidth` as share bandwidth mode. (Default: `bandwidth`for the Elastic IP, `share_bandwidth` for the Elastic IP with share bandwidth mode).
        :param pulumi.Input[str] expire_time: The expiration time for EIP, formatted in RFC3339 time string.
        :param pulumi.Input[str] internet_type: Type of Elastic IP routes. Possible values are: `international` as international BGP IP and `bgp` as china mainland BGP IP.
        :param pulumi.Input[list] ip_sets: It is a nested type which documented below.
        :param pulumi.Input[str] public_ip: Public IP address of Elastic IP.
        :param pulumi.Input[str] remark: The remarks of the EIP. (Default: `""`).
        :param pulumi.Input[dict] resource: It is a nested type which documented below.
        :param pulumi.Input[str] status: EIP status. Possible values are: `used` as in use, `free` as available and `freeze` as associating.
        :param pulumi.Input[str] tag: A tag assigned to Elastic IP, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
        
        The **ip_sets** object supports the following:
        
          * `internet_type` (`pulumi.Input[str]`) - Type of Elastic IP routes. Possible values are: `international` as international BGP IP and `bgp` as china mainland BGP IP.
          * `ip` (`pulumi.Input[str]`)
        
        The **resource** object supports the following:
        
          * `id` (`pulumi.Input[str]`) - The ID of the resource with EIP attached.
          * `type` (`pulumi.Input[str]`) - The type of resource with EIP attached. Possible values are `instance` as instance, `lb` as load balancer.

        > This content is derived from https://github.com/terraform-providers/terraform-provider-ucloud/blob/master/website/docs/r/eip.html.markdown.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()
        __props__["bandwidth"] = bandwidth
        __props__["charge_mode"] = charge_mode
        __props__["charge_type"] = charge_type
        __props__["create_time"] = create_time
        __props__["duration"] = duration
        __props__["expire_time"] = expire_time
        __props__["internet_type"] = internet_type
        __props__["ip_sets"] = ip_sets
        __props__["name"] = name
        __props__["public_ip"] = public_ip
        __props__["remark"] = remark
        __props__["resource"] = resource
        __props__["status"] = status
        __props__["tag"] = tag
        return Eip(resource_name, opts=opts, __props__=__props__)
    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

