# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import utilities, tables

class LbListener(pulumi.CustomResource):
    domain: pulumi.Output[str]
    """
    Health check domain checking.
    """
    health_check_type: pulumi.Output[str]
    """
    Health check method. Possible values are `port` as port checking and `path` as http checking.
    """
    idle_timeout: pulumi.Output[float]
    """
    Amount of time in seconds to wait for the response for in between two sessions if `listen_type` is `request_proxy`, range: 0-86400. (Default: `60`). Amount of time in seconds to wait for one session if `listen_type` is `packets_transmit`, range: 60-900. The session will be closed as soon as no response if it is `0`.
    """
    listen_type: pulumi.Output[str]
    """
    The type of listener. Possible values are `request_proxy` and `packets_transmit`. When `packets_transmit` was specified, you need to config the instances by yourself if the instances attach to the load balancer. You may refer to [configuration instruction](https://docs.ucloud.cn/network/ulb/guide/fu-wu-jie-dian-xiang-guan-cao-zuo/editrealserver).
    """
    load_balancer_id: pulumi.Output[str]
    """
    The ID of load balancer instance.
    """
    method: pulumi.Output[str]
    """
    The load balancer method in which the listener is. Possible values are: `roundrobin`, `source`, `consistent_hash`, `source_port` , `consistent_hash_port`, `weight_roundrobin` and `leastconn`. (Default: `roundrobin`).
    - The `consistent_hash`, `source_port` , `consistent_hash_port`, `roundrobin`, `source` and `weight_roundrobin` are valid if `listen_type` is `packets_transmit`.
    - The `roundrobin`, `source` and `weight_roundrobin` and `leastconn` are valid if `listen_type` is `request_proxy`.
    """
    name: pulumi.Output[str]
    path: pulumi.Output[str]
    """
    Health check path checking.
    """
    persistence: pulumi.Output[str]
    """
    Indicate whether the persistence session is enabled, it is invalid if `persistence_type` is `none`, an auto-generated string will be exported if `persistence_type` is `server_insert`, a custom string will be exported if `persistence_type` is `user_defined`.
    """
    persistence_type: pulumi.Output[str]
    """
    The type of session persistence of listener. Possible values are: `none` as disabled, `server_insert` as auto-generated key and `user_defined` as customized key. (Default: `none`).
    """
    port: pulumi.Output[float]
    """
    Port opened on the listeners to receive requests, range: 1-65535. The default value: `80` as `protocol` is `http`, `443` as `protocol` is `https`, `1024` as `protocol` is `tcp` or `udp`.
    """
    protocol: pulumi.Output[str]
    """
    Listener protocol. Possible values: `http`, `https`, `tcp` if `listen_type` is `request_proxy`, `tcp` and `udp` if `listen_type` is `packets_transmit`.
    """
    status: pulumi.Output[str]
    """
    Listener status. Possible values are: `allNormal` for all resource functioning well, `partNormal` for partial resource functioning well and `allException` for all resource functioning exceptional.
    """
    def __init__(__self__, resource_name, opts=None, domain=None, health_check_type=None, idle_timeout=None, listen_type=None, load_balancer_id=None, method=None, name=None, path=None, persistence=None, persistence_type=None, port=None, protocol=None, __props__=None, __name__=None, __opts__=None):
        """
        Provides a Load Balancer Listener resource.
        
        > **Note** This `listen_type` only support when `protocol` is `tcp` in the extranet mode and the default value is `request_proxy`. In addition, in the extranet mode, the `listen_type` is `request_proxy` if `protocol`is `http` or `https`, the `listen_type` is `packets_transmit` if `protocol`is `udp`. In the intranet mode, the `listen_type` is `packets_transmit`.
        
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] domain: Health check domain checking.
        :param pulumi.Input[str] health_check_type: Health check method. Possible values are `port` as port checking and `path` as http checking.
        :param pulumi.Input[float] idle_timeout: Amount of time in seconds to wait for the response for in between two sessions if `listen_type` is `request_proxy`, range: 0-86400. (Default: `60`). Amount of time in seconds to wait for one session if `listen_type` is `packets_transmit`, range: 60-900. The session will be closed as soon as no response if it is `0`.
        :param pulumi.Input[str] listen_type: The type of listener. Possible values are `request_proxy` and `packets_transmit`. When `packets_transmit` was specified, you need to config the instances by yourself if the instances attach to the load balancer. You may refer to [configuration instruction](https://docs.ucloud.cn/network/ulb/guide/fu-wu-jie-dian-xiang-guan-cao-zuo/editrealserver).
        :param pulumi.Input[str] load_balancer_id: The ID of load balancer instance.
        :param pulumi.Input[str] method: The load balancer method in which the listener is. Possible values are: `roundrobin`, `source`, `consistent_hash`, `source_port` , `consistent_hash_port`, `weight_roundrobin` and `leastconn`. (Default: `roundrobin`).
               - The `consistent_hash`, `source_port` , `consistent_hash_port`, `roundrobin`, `source` and `weight_roundrobin` are valid if `listen_type` is `packets_transmit`.
               - The `roundrobin`, `source` and `weight_roundrobin` and `leastconn` are valid if `listen_type` is `request_proxy`.
        :param pulumi.Input[str] path: Health check path checking.
        :param pulumi.Input[str] persistence: Indicate whether the persistence session is enabled, it is invalid if `persistence_type` is `none`, an auto-generated string will be exported if `persistence_type` is `server_insert`, a custom string will be exported if `persistence_type` is `user_defined`.
        :param pulumi.Input[str] persistence_type: The type of session persistence of listener. Possible values are: `none` as disabled, `server_insert` as auto-generated key and `user_defined` as customized key. (Default: `none`).
        :param pulumi.Input[float] port: Port opened on the listeners to receive requests, range: 1-65535. The default value: `80` as `protocol` is `http`, `443` as `protocol` is `https`, `1024` as `protocol` is `tcp` or `udp`.
        :param pulumi.Input[str] protocol: Listener protocol. Possible values: `http`, `https`, `tcp` if `listen_type` is `request_proxy`, `tcp` and `udp` if `listen_type` is `packets_transmit`.

        > This content is derived from https://github.com/terraform-providers/terraform-provider-ucloud/blob/master/website/docs/r/lb_listener.html.markdown.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['domain'] = domain
            __props__['health_check_type'] = health_check_type
            __props__['idle_timeout'] = idle_timeout
            __props__['listen_type'] = listen_type
            if load_balancer_id is None:
                raise TypeError("Missing required property 'load_balancer_id'")
            __props__['load_balancer_id'] = load_balancer_id
            __props__['method'] = method
            __props__['name'] = name
            __props__['path'] = path
            __props__['persistence'] = persistence
            __props__['persistence_type'] = persistence_type
            __props__['port'] = port
            if protocol is None:
                raise TypeError("Missing required property 'protocol'")
            __props__['protocol'] = protocol
            __props__['status'] = None
        super(LbListener, __self__).__init__(
            'ucloud:ulb/lbListener:LbListener',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, domain=None, health_check_type=None, idle_timeout=None, listen_type=None, load_balancer_id=None, method=None, name=None, path=None, persistence=None, persistence_type=None, port=None, protocol=None, status=None):
        """
        Get an existing LbListener resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.
        
        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] domain: Health check domain checking.
        :param pulumi.Input[str] health_check_type: Health check method. Possible values are `port` as port checking and `path` as http checking.
        :param pulumi.Input[float] idle_timeout: Amount of time in seconds to wait for the response for in between two sessions if `listen_type` is `request_proxy`, range: 0-86400. (Default: `60`). Amount of time in seconds to wait for one session if `listen_type` is `packets_transmit`, range: 60-900. The session will be closed as soon as no response if it is `0`.
        :param pulumi.Input[str] listen_type: The type of listener. Possible values are `request_proxy` and `packets_transmit`. When `packets_transmit` was specified, you need to config the instances by yourself if the instances attach to the load balancer. You may refer to [configuration instruction](https://docs.ucloud.cn/network/ulb/guide/fu-wu-jie-dian-xiang-guan-cao-zuo/editrealserver).
        :param pulumi.Input[str] load_balancer_id: The ID of load balancer instance.
        :param pulumi.Input[str] method: The load balancer method in which the listener is. Possible values are: `roundrobin`, `source`, `consistent_hash`, `source_port` , `consistent_hash_port`, `weight_roundrobin` and `leastconn`. (Default: `roundrobin`).
               - The `consistent_hash`, `source_port` , `consistent_hash_port`, `roundrobin`, `source` and `weight_roundrobin` are valid if `listen_type` is `packets_transmit`.
               - The `roundrobin`, `source` and `weight_roundrobin` and `leastconn` are valid if `listen_type` is `request_proxy`.
        :param pulumi.Input[str] path: Health check path checking.
        :param pulumi.Input[str] persistence: Indicate whether the persistence session is enabled, it is invalid if `persistence_type` is `none`, an auto-generated string will be exported if `persistence_type` is `server_insert`, a custom string will be exported if `persistence_type` is `user_defined`.
        :param pulumi.Input[str] persistence_type: The type of session persistence of listener. Possible values are: `none` as disabled, `server_insert` as auto-generated key and `user_defined` as customized key. (Default: `none`).
        :param pulumi.Input[float] port: Port opened on the listeners to receive requests, range: 1-65535. The default value: `80` as `protocol` is `http`, `443` as `protocol` is `https`, `1024` as `protocol` is `tcp` or `udp`.
        :param pulumi.Input[str] protocol: Listener protocol. Possible values: `http`, `https`, `tcp` if `listen_type` is `request_proxy`, `tcp` and `udp` if `listen_type` is `packets_transmit`.
        :param pulumi.Input[str] status: Listener status. Possible values are: `allNormal` for all resource functioning well, `partNormal` for partial resource functioning well and `allException` for all resource functioning exceptional.

        > This content is derived from https://github.com/terraform-providers/terraform-provider-ucloud/blob/master/website/docs/r/lb_listener.html.markdown.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()
        __props__["domain"] = domain
        __props__["health_check_type"] = health_check_type
        __props__["idle_timeout"] = idle_timeout
        __props__["listen_type"] = listen_type
        __props__["load_balancer_id"] = load_balancer_id
        __props__["method"] = method
        __props__["name"] = name
        __props__["path"] = path
        __props__["persistence"] = persistence
        __props__["persistence_type"] = persistence_type
        __props__["port"] = port
        __props__["protocol"] = protocol
        __props__["status"] = status
        return LbListener(resource_name, opts=opts, __props__=__props__)
    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

