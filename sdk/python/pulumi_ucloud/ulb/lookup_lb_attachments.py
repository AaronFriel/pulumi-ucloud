# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import utilities, tables

class LookupLbAttachmentsResult:
    """
    A collection of values returned by lookupLbAttachments.
    """
    def __init__(__self__, ids=None, lb_attachments=None, listener_id=None, load_balancer_id=None, output_file=None, total_count=None, id=None):
        if ids and not isinstance(ids, list):
            raise TypeError("Expected argument 'ids' to be a list")
        __self__.ids = ids
        if lb_attachments and not isinstance(lb_attachments, list):
            raise TypeError("Expected argument 'lb_attachments' to be a list")
        __self__.lb_attachments = lb_attachments
        """
        It is a nested type which documented below.
        """
        if listener_id and not isinstance(listener_id, str):
            raise TypeError("Expected argument 'listener_id' to be a str")
        __self__.listener_id = listener_id
        if load_balancer_id and not isinstance(load_balancer_id, str):
            raise TypeError("Expected argument 'load_balancer_id' to be a str")
        __self__.load_balancer_id = load_balancer_id
        if output_file and not isinstance(output_file, str):
            raise TypeError("Expected argument 'output_file' to be a str")
        __self__.output_file = output_file
        if total_count and not isinstance(total_count, float):
            raise TypeError("Expected argument 'total_count' to be a float")
        __self__.total_count = total_count
        """
        Total number of LB Attachments that satisfy the condition.
        """
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        __self__.id = id
        """
        id is the provider-assigned unique ID for this managed resource.
        """
class AwaitableLookupLbAttachmentsResult(LookupLbAttachmentsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return LookupLbAttachmentsResult(
            ids=self.ids,
            lb_attachments=self.lb_attachments,
            listener_id=self.listener_id,
            load_balancer_id=self.load_balancer_id,
            output_file=self.output_file,
            total_count=self.total_count,
            id=self.id)

def lookup_lb_attachments(ids=None,listener_id=None,load_balancer_id=None,output_file=None,opts=None):
    """
    This data source provides a list of Load Balancer Attachment resources according to their Load Balancer Attachment ID.
    
    :param list ids: A list of LB Attachment IDs, all the LB Attachments belong to the Load Balancer listener will be retrieved if the ID is `""`.
    :param str listener_id: The ID of a listener server.
    :param str load_balancer_id: The ID of a load balancer.

    > This content is derived from https://github.com/terraform-providers/terraform-provider-ucloud/blob/master/website/docs/d/lb_attachments.html.markdown.
    """
    __args__ = dict()

    __args__['ids'] = ids
    __args__['listenerId'] = listener_id
    __args__['loadBalancerId'] = load_balancer_id
    __args__['outputFile'] = output_file
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = utilities.get_version()
    __ret__ = pulumi.runtime.invoke('ucloud:ulb/lookupLbAttachments:lookupLbAttachments', __args__, opts=opts).value

    return AwaitableLookupLbAttachmentsResult(
        ids=__ret__.get('ids'),
        lb_attachments=__ret__.get('lbAttachments'),
        listener_id=__ret__.get('listenerId'),
        load_balancer_id=__ret__.get('loadBalancerId'),
        output_file=__ret__.get('outputFile'),
        total_count=__ret__.get('totalCount'),
        id=__ret__.get('id'))
