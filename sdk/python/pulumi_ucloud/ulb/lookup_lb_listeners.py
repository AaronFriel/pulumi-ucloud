# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import utilities, tables

class LookupLbListenersResult:
    """
    A collection of values returned by lookupLbListeners.
    """
    def __init__(__self__, ids=None, lb_listeners=None, load_balancer_id=None, name_regex=None, output_file=None, total_count=None, id=None):
        if ids and not isinstance(ids, list):
            raise TypeError("Expected argument 'ids' to be a list")
        __self__.ids = ids
        if lb_listeners and not isinstance(lb_listeners, list):
            raise TypeError("Expected argument 'lb_listeners' to be a list")
        __self__.lb_listeners = lb_listeners
        """
        It is a nested type which documented below.
        """
        if load_balancer_id and not isinstance(load_balancer_id, str):
            raise TypeError("Expected argument 'load_balancer_id' to be a str")
        __self__.load_balancer_id = load_balancer_id
        if name_regex and not isinstance(name_regex, str):
            raise TypeError("Expected argument 'name_regex' to be a str")
        __self__.name_regex = name_regex
        if output_file and not isinstance(output_file, str):
            raise TypeError("Expected argument 'output_file' to be a str")
        __self__.output_file = output_file
        if total_count and not isinstance(total_count, float):
            raise TypeError("Expected argument 'total_count' to be a float")
        __self__.total_count = total_count
        """
        Total number of LB listeners that satisfy the condition.
        """
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        __self__.id = id
        """
        id is the provider-assigned unique ID for this managed resource.
        """
class AwaitableLookupLbListenersResult(LookupLbListenersResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return LookupLbListenersResult(
            ids=self.ids,
            lb_listeners=self.lb_listeners,
            load_balancer_id=self.load_balancer_id,
            name_regex=self.name_regex,
            output_file=self.output_file,
            total_count=self.total_count,
            id=self.id)

def lookup_lb_listeners(ids=None,load_balancer_id=None,name_regex=None,output_file=None,opts=None):
    """
    This data source provides a list of Load Balancer Listener resources according to their Load Balancer Listener ID.
    
    :param list ids: A list of LB Listener IDs, all the LB Listeners belong to this region will be retrieved if the ID is `""`.
    :param str load_balancer_id: The ID of a load balancer.
    :param str name_regex: A regex string to filter resulting lb listeners by name.

    > This content is derived from https://github.com/terraform-providers/terraform-provider-ucloud/blob/master/website/docs/d/lb_listeners.html.markdown.
    """
    __args__ = dict()

    __args__['ids'] = ids
    __args__['loadBalancerId'] = load_balancer_id
    __args__['nameRegex'] = name_regex
    __args__['outputFile'] = output_file
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = utilities.get_version()
    __ret__ = pulumi.runtime.invoke('ucloud:ulb/lookupLbListeners:lookupLbListeners', __args__, opts=opts).value

    return AwaitableLookupLbListenersResult(
        ids=__ret__.get('ids'),
        lb_listeners=__ret__.get('lbListeners'),
        load_balancer_id=__ret__.get('loadBalancerId'),
        name_regex=__ret__.get('nameRegex'),
        output_file=__ret__.get('outputFile'),
        total_count=__ret__.get('totalCount'),
        id=__ret__.get('id'))
