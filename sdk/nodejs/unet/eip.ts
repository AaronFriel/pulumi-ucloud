// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Provides an Elastic IP resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ucloud from "@pulumi/ucloud";
 *
 * const example = new ucloud.unet.EIP("example", {
 *     bandwidth: 2,
 *     chargeMode: "bandwidth",
 *     internetType: "bgp",
 *     tag: "tf-example",
 * });
 * ```
 *
 * ## Import
 *
 * EIP can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import ucloud:unet/eIP:EIP example eip-abcdefg
 * ```
 */
export class EIP extends pulumi.CustomResource {
    /**
     * Get an existing EIP resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EIPState, opts?: pulumi.CustomResourceOptions): EIP {
        return new EIP(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ucloud:unet/eIP:EIP';

    /**
     * Returns true if the given object is an instance of EIP.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EIP {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EIP.__pulumiType;
    }

    /**
     * Maximum bandwidth to the elastic public network, measured in Mbps (Mega bit per second). The ranges for bandwidth are: 1-200 for pay by traffic, 1-800 for pay by bandwidth. (Default: `1`).
     */
    public readonly bandwidth!: pulumi.Output<number>;
    /**
     * -(Optional) Elastic IP charge mode. Possible values are: `traffic` as pay by traffic, `bandwidth` as pay by bandwidth, `shareBandwidth` as share bandwidth mode. (Default: `bandwidth`for the Elastic IP, `shareBandwidth` for the Elastic IP with share bandwidth mode).
     */
    public readonly chargeMode!: pulumi.Output<string>;
    /**
     * Elastic IP charge type. Possible values are: `year` as pay by year, `month` as pay by month, `dynamic` as pay by hour (specific permission required). (Default: `month`).
     */
    public readonly chargeType!: pulumi.Output<string>;
    /**
     * The time of creation for EIP, formatted in RFC3339 time string.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The duration that you will buy the resource. (Default: `1`). It is not required when `dynamic` (pay by hour), the value is `0` when `month`(pay by month) and the instance will be valid till the last day of that month.
     */
    public readonly duration!: pulumi.Output<number | undefined>;
    /**
     * The expiration time for EIP, formatted in RFC3339 time string.
     */
    public /*out*/ readonly expireTime!: pulumi.Output<string>;
    /**
     * Type of Elastic IP routes. Possible values are: `international` as international BGP IP and `bgp` as china mainland BGP IP.
     */
    public readonly internetType!: pulumi.Output<string>;
    /**
     * It is a nested type which documented below.
     */
    public /*out*/ readonly ipSets!: pulumi.Output<outputs.unet.EIPIpSet[]>;
    public readonly name!: pulumi.Output<string>;
    /**
     * Public IP address of Elastic IP.
     */
    public /*out*/ readonly publicIp!: pulumi.Output<string>;
    /**
     * The remarks of the EIP. (Default: `""`).
     */
    public readonly remark!: pulumi.Output<string>;
    /**
     * It is a nested type which documented below.
     */
    public /*out*/ readonly resource!: pulumi.Output<outputs.unet.EIPResource>;
    /**
     * EIP status. Possible values are: `used` as in use, `free` as available and `freeze` as associating.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * A tag assigned to Elastic IP, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
     */
    public readonly tag!: pulumi.Output<string | undefined>;

    /**
     * Create a EIP resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EIPArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EIPArgs | EIPState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EIPState | undefined;
            inputs["bandwidth"] = state ? state.bandwidth : undefined;
            inputs["chargeMode"] = state ? state.chargeMode : undefined;
            inputs["chargeType"] = state ? state.chargeType : undefined;
            inputs["createTime"] = state ? state.createTime : undefined;
            inputs["duration"] = state ? state.duration : undefined;
            inputs["expireTime"] = state ? state.expireTime : undefined;
            inputs["internetType"] = state ? state.internetType : undefined;
            inputs["ipSets"] = state ? state.ipSets : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["publicIp"] = state ? state.publicIp : undefined;
            inputs["remark"] = state ? state.remark : undefined;
            inputs["resource"] = state ? state.resource : undefined;
            inputs["status"] = state ? state.status : undefined;
            inputs["tag"] = state ? state.tag : undefined;
        } else {
            const args = argsOrState as EIPArgs | undefined;
            if ((!args || args.internetType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'internetType'");
            }
            inputs["bandwidth"] = args ? args.bandwidth : undefined;
            inputs["chargeMode"] = args ? args.chargeMode : undefined;
            inputs["chargeType"] = args ? args.chargeType : undefined;
            inputs["duration"] = args ? args.duration : undefined;
            inputs["internetType"] = args ? args.internetType : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["remark"] = args ? args.remark : undefined;
            inputs["tag"] = args ? args.tag : undefined;
            inputs["createTime"] = undefined /*out*/;
            inputs["expireTime"] = undefined /*out*/;
            inputs["ipSets"] = undefined /*out*/;
            inputs["publicIp"] = undefined /*out*/;
            inputs["resource"] = undefined /*out*/;
            inputs["status"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(EIP.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering EIP resources.
 */
export interface EIPState {
    /**
     * Maximum bandwidth to the elastic public network, measured in Mbps (Mega bit per second). The ranges for bandwidth are: 1-200 for pay by traffic, 1-800 for pay by bandwidth. (Default: `1`).
     */
    bandwidth?: pulumi.Input<number>;
    /**
     * -(Optional) Elastic IP charge mode. Possible values are: `traffic` as pay by traffic, `bandwidth` as pay by bandwidth, `shareBandwidth` as share bandwidth mode. (Default: `bandwidth`for the Elastic IP, `shareBandwidth` for the Elastic IP with share bandwidth mode).
     */
    chargeMode?: pulumi.Input<string>;
    /**
     * Elastic IP charge type. Possible values are: `year` as pay by year, `month` as pay by month, `dynamic` as pay by hour (specific permission required). (Default: `month`).
     */
    chargeType?: pulumi.Input<string>;
    /**
     * The time of creation for EIP, formatted in RFC3339 time string.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The duration that you will buy the resource. (Default: `1`). It is not required when `dynamic` (pay by hour), the value is `0` when `month`(pay by month) and the instance will be valid till the last day of that month.
     */
    duration?: pulumi.Input<number>;
    /**
     * The expiration time for EIP, formatted in RFC3339 time string.
     */
    expireTime?: pulumi.Input<string>;
    /**
     * Type of Elastic IP routes. Possible values are: `international` as international BGP IP and `bgp` as china mainland BGP IP.
     */
    internetType?: pulumi.Input<string>;
    /**
     * It is a nested type which documented below.
     */
    ipSets?: pulumi.Input<pulumi.Input<inputs.unet.EIPIpSet>[]>;
    name?: pulumi.Input<string>;
    /**
     * Public IP address of Elastic IP.
     */
    publicIp?: pulumi.Input<string>;
    /**
     * The remarks of the EIP. (Default: `""`).
     */
    remark?: pulumi.Input<string>;
    /**
     * It is a nested type which documented below.
     */
    resource?: pulumi.Input<inputs.unet.EIPResource>;
    /**
     * EIP status. Possible values are: `used` as in use, `free` as available and `freeze` as associating.
     */
    status?: pulumi.Input<string>;
    /**
     * A tag assigned to Elastic IP, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
     */
    tag?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a EIP resource.
 */
export interface EIPArgs {
    /**
     * Maximum bandwidth to the elastic public network, measured in Mbps (Mega bit per second). The ranges for bandwidth are: 1-200 for pay by traffic, 1-800 for pay by bandwidth. (Default: `1`).
     */
    bandwidth?: pulumi.Input<number>;
    /**
     * -(Optional) Elastic IP charge mode. Possible values are: `traffic` as pay by traffic, `bandwidth` as pay by bandwidth, `shareBandwidth` as share bandwidth mode. (Default: `bandwidth`for the Elastic IP, `shareBandwidth` for the Elastic IP with share bandwidth mode).
     */
    chargeMode?: pulumi.Input<string>;
    /**
     * Elastic IP charge type. Possible values are: `year` as pay by year, `month` as pay by month, `dynamic` as pay by hour (specific permission required). (Default: `month`).
     */
    chargeType?: pulumi.Input<string>;
    /**
     * The duration that you will buy the resource. (Default: `1`). It is not required when `dynamic` (pay by hour), the value is `0` when `month`(pay by month) and the instance will be valid till the last day of that month.
     */
    duration?: pulumi.Input<number>;
    /**
     * Type of Elastic IP routes. Possible values are: `international` as international BGP IP and `bgp` as china mainland BGP IP.
     */
    internetType: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    /**
     * The remarks of the EIP. (Default: `""`).
     */
    remark?: pulumi.Input<string>;
    /**
     * A tag assigned to Elastic IP, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
     */
    tag?: pulumi.Input<string>;
}
