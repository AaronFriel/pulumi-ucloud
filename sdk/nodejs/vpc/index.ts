// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./getNATGateway";
export * from "./getSubnet";
export * from "./getVPC";
export * from "./natgateway";
export * from "./natgatewayRule";
export * from "./subnet";
export * from "./vip";
export * from "./vpc";
export * from "./vpcpeeringConnection";

// Import resources to register:
import { NATGateway } from "./natgateway";
import { NATGatewayRule } from "./natgatewayRule";
import { Subnet } from "./subnet";
import { VIP } from "./vip";
import { VPC } from "./vpc";
import { VPCPeeringConnection } from "./vpcpeeringConnection";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "ucloud:vpc/nATGateway:NATGateway":
                return new NATGateway(name, <any>undefined, { urn })
            case "ucloud:vpc/nATGatewayRule:NATGatewayRule":
                return new NATGatewayRule(name, <any>undefined, { urn })
            case "ucloud:vpc/subnet:Subnet":
                return new Subnet(name, <any>undefined, { urn })
            case "ucloud:vpc/vIP:VIP":
                return new VIP(name, <any>undefined, { urn })
            case "ucloud:vpc/vPC:VPC":
                return new VPC(name, <any>undefined, { urn })
            case "ucloud:vpc/vPCPeeringConnection:VPCPeeringConnection":
                return new VPCPeeringConnection(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("ucloud", "vpc/nATGateway", _module)
pulumi.runtime.registerResourceModule("ucloud", "vpc/nATGatewayRule", _module)
pulumi.runtime.registerResourceModule("ucloud", "vpc/subnet", _module)
pulumi.runtime.registerResourceModule("ucloud", "vpc/vIP", _module)
pulumi.runtime.registerResourceModule("ucloud", "vpc/vPC", _module)
pulumi.runtime.registerResourceModule("ucloud", "vpc/vPCPeeringConnection", _module)
