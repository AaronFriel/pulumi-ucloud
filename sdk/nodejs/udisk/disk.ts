// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Cloud Disk resource.
 *
 * > **Note** If the disk have attached to the instance, the instance will reboot automatically to make the change take effect when update the  `diskSize`.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ucloud from "@pulumi/ucloud";
 *
 * const default = ucloud.uaccount.getZone({});
 * // Create cloud disk
 * const example = new ucloud.udisk.Disk("example", {
 *     availabilityZone: _default.then(_default => _default.zones[0].id),
 *     diskSize: 10,
 * });
 * ```
 *
 * ## Import
 *
 * Disk can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import ucloud:udisk/disk:Disk example bsm-abcdefg
 * ```
 */
export class Disk extends pulumi.CustomResource {
    /**
     * Get an existing Disk resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DiskState, opts?: pulumi.CustomResourceOptions): Disk {
        return new Disk(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ucloud:udisk/disk:Disk';

    /**
     * Returns true if the given object is an instance of Disk.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Disk {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Disk.__pulumiType;
    }

    /**
     * Availability zone where cloud disk is located. Such as: "cn-bj2-02". You may refer to [list of availability zone](https://docs.ucloud.cn/api/summary/regionlist).
     */
    public readonly availabilityZone!: pulumi.Output<string>;
    /**
     * Charge type of disk. Possible values are: `year` as pay by year, `month` as pay by month, `dynamic` as pay by hour. (Default: `month`).
     */
    public readonly chargeType!: pulumi.Output<string>;
    /**
     * The time of creation of disk, formatted in RFC3339 time string.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The size of disk. Purchase the size of disk in GB. 20-8000 for a cloud disk, 20-8000 for SSD cloud disk . If the disk have attached to the instance, the instance will reboot automatically to make the change take effect when update the  `diskSize`.
     */
    public readonly diskSize!: pulumi.Output<number>;
    /**
     * The type of disk. Possible values are: `dataDisk`as cloud disk, `ssdDataDisk` as ssd cloud disk, `rssdDataDisk` as RDMA-SSD cloud disk (the `rssdDataDisk` only be supported in `cn-bj2-05`).(Default: `dataDisk`).
     */
    public readonly diskType!: pulumi.Output<string | undefined>;
    /**
     * The duration that you will buy the resource. (Default: `1`). It is not required when `dynamic` (pay by hour), the value is `0` when `month`(pay by month) and the disk will be vaild till the last day of that month.
     */
    public readonly duration!: pulumi.Output<number | undefined>;
    /**
     * The expiration time of disk, formatted in RFC3339 time string.
     */
    public /*out*/ readonly expireTime!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    /**
     * The status of disk. Possible values are: `Available`, `InUse`, `Detaching`, `Initializating`, `Failed`, `Cloning`, `Restoring`, `RestoreFailed`.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * A tag assigned to VPC, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
     */
    public readonly tag!: pulumi.Output<string | undefined>;

    /**
     * Create a Disk resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DiskArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DiskArgs | DiskState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DiskState | undefined;
            inputs["availabilityZone"] = state ? state.availabilityZone : undefined;
            inputs["chargeType"] = state ? state.chargeType : undefined;
            inputs["createTime"] = state ? state.createTime : undefined;
            inputs["diskSize"] = state ? state.diskSize : undefined;
            inputs["diskType"] = state ? state.diskType : undefined;
            inputs["duration"] = state ? state.duration : undefined;
            inputs["expireTime"] = state ? state.expireTime : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["status"] = state ? state.status : undefined;
            inputs["tag"] = state ? state.tag : undefined;
        } else {
            const args = argsOrState as DiskArgs | undefined;
            if ((!args || args.availabilityZone === undefined) && !opts.urn) {
                throw new Error("Missing required property 'availabilityZone'");
            }
            if ((!args || args.diskSize === undefined) && !opts.urn) {
                throw new Error("Missing required property 'diskSize'");
            }
            inputs["availabilityZone"] = args ? args.availabilityZone : undefined;
            inputs["chargeType"] = args ? args.chargeType : undefined;
            inputs["diskSize"] = args ? args.diskSize : undefined;
            inputs["diskType"] = args ? args.diskType : undefined;
            inputs["duration"] = args ? args.duration : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["tag"] = args ? args.tag : undefined;
            inputs["createTime"] = undefined /*out*/;
            inputs["expireTime"] = undefined /*out*/;
            inputs["status"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(Disk.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Disk resources.
 */
export interface DiskState {
    /**
     * Availability zone where cloud disk is located. Such as: "cn-bj2-02". You may refer to [list of availability zone](https://docs.ucloud.cn/api/summary/regionlist).
     */
    availabilityZone?: pulumi.Input<string>;
    /**
     * Charge type of disk. Possible values are: `year` as pay by year, `month` as pay by month, `dynamic` as pay by hour. (Default: `month`).
     */
    chargeType?: pulumi.Input<string>;
    /**
     * The time of creation of disk, formatted in RFC3339 time string.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The size of disk. Purchase the size of disk in GB. 20-8000 for a cloud disk, 20-8000 for SSD cloud disk . If the disk have attached to the instance, the instance will reboot automatically to make the change take effect when update the  `diskSize`.
     */
    diskSize?: pulumi.Input<number>;
    /**
     * The type of disk. Possible values are: `dataDisk`as cloud disk, `ssdDataDisk` as ssd cloud disk, `rssdDataDisk` as RDMA-SSD cloud disk (the `rssdDataDisk` only be supported in `cn-bj2-05`).(Default: `dataDisk`).
     */
    diskType?: pulumi.Input<string>;
    /**
     * The duration that you will buy the resource. (Default: `1`). It is not required when `dynamic` (pay by hour), the value is `0` when `month`(pay by month) and the disk will be vaild till the last day of that month.
     */
    duration?: pulumi.Input<number>;
    /**
     * The expiration time of disk, formatted in RFC3339 time string.
     */
    expireTime?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    /**
     * The status of disk. Possible values are: `Available`, `InUse`, `Detaching`, `Initializating`, `Failed`, `Cloning`, `Restoring`, `RestoreFailed`.
     */
    status?: pulumi.Input<string>;
    /**
     * A tag assigned to VPC, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
     */
    tag?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Disk resource.
 */
export interface DiskArgs {
    /**
     * Availability zone where cloud disk is located. Such as: "cn-bj2-02". You may refer to [list of availability zone](https://docs.ucloud.cn/api/summary/regionlist).
     */
    availabilityZone: pulumi.Input<string>;
    /**
     * Charge type of disk. Possible values are: `year` as pay by year, `month` as pay by month, `dynamic` as pay by hour. (Default: `month`).
     */
    chargeType?: pulumi.Input<string>;
    /**
     * The size of disk. Purchase the size of disk in GB. 20-8000 for a cloud disk, 20-8000 for SSD cloud disk . If the disk have attached to the instance, the instance will reboot automatically to make the change take effect when update the  `diskSize`.
     */
    diskSize: pulumi.Input<number>;
    /**
     * The type of disk. Possible values are: `dataDisk`as cloud disk, `ssdDataDisk` as ssd cloud disk, `rssdDataDisk` as RDMA-SSD cloud disk (the `rssdDataDisk` only be supported in `cn-bj2-05`).(Default: `dataDisk`).
     */
    diskType?: pulumi.Input<string>;
    /**
     * The duration that you will buy the resource. (Default: `1`). It is not required when `dynamic` (pay by hour), the value is `0` when `month`(pay by month) and the disk will be vaild till the last day of that month.
     */
    duration?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    /**
     * A tag assigned to VPC, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
     */
    tag?: pulumi.Input<string>;
}
