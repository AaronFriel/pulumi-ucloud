// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides a list of Disk resources according to their Disk ID and disk type.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ucloud from "@pulumi/ucloud";
 *
 * const example = ucloud.udisk.getDisk({});
 * export const first = example.then(example => example.disks[0].id);
 * ```
 */
export function getDisk(args?: GetDiskArgs, opts?: pulumi.InvokeOptions): Promise<GetDiskResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("ucloud:udisk/getDisk:getDisk", {
        "availabilityZone": args.availabilityZone,
        "diskType": args.diskType,
        "ids": args.ids,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getDisk.
 */
export interface GetDiskArgs {
    /**
     * Availability zone where Disk are located. Such as: "cn-bj2-02". You may refer to [list of availability zone](https://docs.ucloud.cn/api/summary/regionlist)
     */
    availabilityZone?: string;
    /**
     * The type of disk. Possible values are: `dataDisk`as cloud disk, `ssdDataDisk` as SSD cloud disk, `systemDisk`as system disk, `ssdSystemDisk` as SSD system disk, `rssdDataDisk` as RDMA-SSD cloud disk.
     */
    diskType?: string;
    /**
     * A list of Disk IDs, all the Disks belong to this region will be retrieved if the ID is `[]`.
     */
    ids?: string[];
    /**
     * A regex string to filter resulting disks by name.
     */
    nameRegex?: string;
    outputFile?: string;
}

/**
 * A collection of values returned by getDisk.
 */
export interface GetDiskResult {
    /**
     * Availability zone where disk is located.
     */
    readonly availabilityZone?: string;
    /**
     * The type of disk.
     */
    readonly diskType?: string;
    /**
     * It is a nested type which documented below.
     */
    readonly disks: outputs.udisk.GetDiskDisk[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    readonly nameRegex?: string;
    readonly outputFile?: string;
    /**
     * Total number of Disks that satisfy the condition.
     */
    readonly totalCount: number;
}
