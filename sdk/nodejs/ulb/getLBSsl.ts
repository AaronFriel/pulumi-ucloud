// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides a list of Load Balancer SSL certificate resources according to their Load Balancer SSL certificate resource ID and name.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ucloud from "@pulumi/ucloud";
 *
 * const example = ucloud.ulb.getLBSsl({});
 * export const first = example.then(example => example.lbSsls[0].id);
 * ```
 */
export function getLBSsl(args?: GetLBSslArgs, opts?: pulumi.InvokeOptions): Promise<GetLBSslResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("ucloud:ulb/getLBSsl:getLBSsl", {
        "ids": args.ids,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getLBSsl.
 */
export interface GetLBSslArgs {
    /**
     * A list of LB SSL certificate resource IDs, all the LB SSL certificate resources in the current region will be retrieved if the ID is `[]`.
     */
    ids?: string[];
    /**
     * A regex string to filter resulting LB SSL by name.
     */
    nameRegex?: string;
    outputFile?: string;
}

/**
 * A collection of values returned by getLBSsl.
 */
export interface GetLBSslResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    /**
     * It is a nested type which documented below.
     */
    readonly lbSsls: outputs.ulb.GetLBSslLbSsl[];
    readonly nameRegex?: string;
    readonly outputFile?: string;
    /**
     * Total number of LB SSL certificate resources that satisfy the condition.
     */
    readonly totalCount: number;
}
