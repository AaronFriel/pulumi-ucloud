// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * The UCloud Memcache instance is a key-value online storage service compatible with the Memcached protocol.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ucloud from "@pulumi/ucloud";
 *
 * const default = ucloud.uaccount.getZone({});
 * const master = new ucloud.umem.MemcachedInstance("master", {
 *     availabilityZone: _default.then(_default => _default.zones[0].id),
 *     instanceType: "memcache-master-2",
 *     tag: "tf-example",
 * });
 * ```
 */
export class MemcachedInstance extends pulumi.CustomResource {
    /**
     * Get an existing MemcachedInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MemcachedInstanceState, opts?: pulumi.CustomResourceOptions): MemcachedInstance {
        return new MemcachedInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ucloud:umem/memcachedInstance:MemcachedInstance';

    /**
     * Returns true if the given object is an instance of MemcachedInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MemcachedInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MemcachedInstance.__pulumiType;
    }

    /**
     * Availability zone where Memcache instance is located. Such as: "cn-bj2-02". You may refer to [list of availability zone](https://docs.ucloud.cn/api/summary/regionlist)
     */
    public readonly availabilityZone!: pulumi.Output<string>;
    /**
     * The charge type of Memcache instance, possible values are: `year`, `month` and `dynamic` as pay by hour (specific permission required). (Default: `month`).
     */
    public readonly chargeType!: pulumi.Output<string>;
    /**
     * The creation time of Memcache instance, formatted by RFC3339 time string.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The duration that you will buy the Memcache instance (Default: `1`). The value is `0` when pay by month and the instance will be valid till the last day of that month. It is not required when `dynamic` (pay by hour).
     */
    public readonly duration!: pulumi.Output<number | undefined>;
    /**
     * The expiration time of Memcache instance, formatted by RFC3339 time string.
     */
    public /*out*/ readonly expireTime!: pulumi.Output<string>;
    public readonly instanceType!: pulumi.Output<string>;
    /**
     * ip_set is a nested type. ipSet documented below.
     */
    public /*out*/ readonly ipSets!: pulumi.Output<outputs.umem.MemcachedInstanceIpSet[]>;
    public readonly name!: pulumi.Output<string>;
    /**
     * The status of KV Memcache instance.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The ID of subnet linked to the Memcache instance.
     */
    public readonly subnetId!: pulumi.Output<string>;
    /**
     * A tag assigned to Memcache instance, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
     */
    public readonly tag!: pulumi.Output<string>;
    /**
     * The ID of VPC linked to the Memcache instance.
     */
    public readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a MemcachedInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MemcachedInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MemcachedInstanceArgs | MemcachedInstanceState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MemcachedInstanceState | undefined;
            inputs["availabilityZone"] = state ? state.availabilityZone : undefined;
            inputs["chargeType"] = state ? state.chargeType : undefined;
            inputs["createTime"] = state ? state.createTime : undefined;
            inputs["duration"] = state ? state.duration : undefined;
            inputs["expireTime"] = state ? state.expireTime : undefined;
            inputs["instanceType"] = state ? state.instanceType : undefined;
            inputs["ipSets"] = state ? state.ipSets : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["status"] = state ? state.status : undefined;
            inputs["subnetId"] = state ? state.subnetId : undefined;
            inputs["tag"] = state ? state.tag : undefined;
            inputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as MemcachedInstanceArgs | undefined;
            if ((!args || args.availabilityZone === undefined) && !opts.urn) {
                throw new Error("Missing required property 'availabilityZone'");
            }
            if ((!args || args.instanceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceType'");
            }
            inputs["availabilityZone"] = args ? args.availabilityZone : undefined;
            inputs["chargeType"] = args ? args.chargeType : undefined;
            inputs["duration"] = args ? args.duration : undefined;
            inputs["instanceType"] = args ? args.instanceType : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["subnetId"] = args ? args.subnetId : undefined;
            inputs["tag"] = args ? args.tag : undefined;
            inputs["vpcId"] = args ? args.vpcId : undefined;
            inputs["createTime"] = undefined /*out*/;
            inputs["expireTime"] = undefined /*out*/;
            inputs["ipSets"] = undefined /*out*/;
            inputs["status"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(MemcachedInstance.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MemcachedInstance resources.
 */
export interface MemcachedInstanceState {
    /**
     * Availability zone where Memcache instance is located. Such as: "cn-bj2-02". You may refer to [list of availability zone](https://docs.ucloud.cn/api/summary/regionlist)
     */
    availabilityZone?: pulumi.Input<string>;
    /**
     * The charge type of Memcache instance, possible values are: `year`, `month` and `dynamic` as pay by hour (specific permission required). (Default: `month`).
     */
    chargeType?: pulumi.Input<string>;
    /**
     * The creation time of Memcache instance, formatted by RFC3339 time string.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The duration that you will buy the Memcache instance (Default: `1`). The value is `0` when pay by month and the instance will be valid till the last day of that month. It is not required when `dynamic` (pay by hour).
     */
    duration?: pulumi.Input<number>;
    /**
     * The expiration time of Memcache instance, formatted by RFC3339 time string.
     */
    expireTime?: pulumi.Input<string>;
    instanceType?: pulumi.Input<string>;
    /**
     * ip_set is a nested type. ipSet documented below.
     */
    ipSets?: pulumi.Input<pulumi.Input<inputs.umem.MemcachedInstanceIpSet>[]>;
    name?: pulumi.Input<string>;
    /**
     * The status of KV Memcache instance.
     */
    status?: pulumi.Input<string>;
    /**
     * The ID of subnet linked to the Memcache instance.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * A tag assigned to Memcache instance, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
     */
    tag?: pulumi.Input<string>;
    /**
     * The ID of VPC linked to the Memcache instance.
     */
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MemcachedInstance resource.
 */
export interface MemcachedInstanceArgs {
    /**
     * Availability zone where Memcache instance is located. Such as: "cn-bj2-02". You may refer to [list of availability zone](https://docs.ucloud.cn/api/summary/regionlist)
     */
    availabilityZone: pulumi.Input<string>;
    /**
     * The charge type of Memcache instance, possible values are: `year`, `month` and `dynamic` as pay by hour (specific permission required). (Default: `month`).
     */
    chargeType?: pulumi.Input<string>;
    /**
     * The duration that you will buy the Memcache instance (Default: `1`). The value is `0` when pay by month and the instance will be valid till the last day of that month. It is not required when `dynamic` (pay by hour).
     */
    duration?: pulumi.Input<number>;
    instanceType: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    /**
     * The ID of subnet linked to the Memcache instance.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * A tag assigned to Memcache instance, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
     */
    tag?: pulumi.Input<string>;
    /**
     * The ID of VPC linked to the Memcache instance.
     */
    vpcId?: pulumi.Input<string>;
}
