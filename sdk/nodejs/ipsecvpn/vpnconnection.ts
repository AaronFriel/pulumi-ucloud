// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Provides a IPSec VPN Gateway Connection resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ucloud from "@pulumi/ucloud";
 *
 * const fooVPC = new ucloud.vpc.VPC("fooVPC", {
 *     tag: "tf-acc",
 *     cidrBlocks: ["192.168.0.0/16"],
 * });
 * const fooSubnet = new ucloud.vpc.Subnet("fooSubnet", {
 *     tag: "tf-acc",
 *     cidrBlock: "192.168.1.0/24",
 *     vpcId: fooVPC.id,
 * });
 * const fooEIP = new ucloud.unet.EIP("fooEIP", {
 *     bandwidth: 1,
 *     internetType: "bgp",
 *     chargeMode: "bandwidth",
 *     tag: "tf-acc",
 * });
 * const fooVPNGateway = new ucloud.ipsecvpn.VPNGateway("fooVPNGateway", {
 *     vpcId: fooVPC.id,
 *     grade: "standard",
 *     eipId: fooEIP.id,
 *     tag: "tf-acc",
 * });
 * const fooVPNCustomerGateway = new ucloud.ipsecvpn.VPNCustomerGateway("fooVPNCustomerGateway", {
 *     ipAddress: "10.0.0.1",
 *     tag: "tf-acc",
 * });
 * const fooVPNConnection = new ucloud.ipsecvpn.VPNConnection("fooVPNConnection", {
 *     vpnGatewayId: fooVPNGateway.id,
 *     customerGatewayId: fooVPNCustomerGateway.id,
 *     vpcId: fooVPC.id,
 *     tag: "tf-acc",
 *     remark: "test",
 *     ikeConfig: {
 *         preSharedKey: "test_2019",
 *     },
 *     ipsecConfig: {
 *         localSubnetIds: [fooSubnet.id],
 *         remoteSubnets: ["10.0.0.0/24"],
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * VPN Connection can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import ucloud:ipsecvpn/vPNConnection:VPNConnection example vpntunnel-abc123456
 * ```
 */
export class VPNConnection extends pulumi.CustomResource {
    /**
     * Get an existing VPNConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VPNConnectionState, opts?: pulumi.CustomResourceOptions): VPNConnection {
        return new VPNConnection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ucloud:ipsecvpn/vPNConnection:VPNConnection';

    /**
     * Returns true if the given object is an instance of VPNConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VPNConnection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VPNConnection.__pulumiType;
    }

    /**
     * The creation time for VPN Gateway Connection, formatted in RFC3339 time string.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The grade of the VPN Gateway
     */
    public readonly customerGatewayId!: pulumi.Output<string>;
    /**
     * The configurations of IKE negotiation. Each ikeConfig supports fields documented below.
     */
    public readonly ikeConfig!: pulumi.Output<outputs.ipsecvpn.VPNConnectionIkeConfig>;
    /**
     * The configurations of IPSec negotiation. Each ipsecConfig supports fields documented below.
     */
    public readonly ipsecConfig!: pulumi.Output<outputs.ipsecvpn.VPNConnectionIpsecConfig>;
    public readonly name!: pulumi.Output<string>;
    /**
     * The remarks of the VPN Gateway Connection. (Default: `""`).
     */
    public readonly remark!: pulumi.Output<string>;
    /**
     * A tag assigned to VPN Gateway Connection, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
     */
    public readonly tag!: pulumi.Output<string | undefined>;
    /**
     * The ID of VPC linked to the VPN Gateway Connection.
     */
    public readonly vpcId!: pulumi.Output<string>;
    /**
     * The ID of  the VPN Customer Gateway.
     */
    public readonly vpnGatewayId!: pulumi.Output<string>;

    /**
     * Create a VPNConnection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VPNConnectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VPNConnectionArgs | VPNConnectionState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VPNConnectionState | undefined;
            inputs["createTime"] = state ? state.createTime : undefined;
            inputs["customerGatewayId"] = state ? state.customerGatewayId : undefined;
            inputs["ikeConfig"] = state ? state.ikeConfig : undefined;
            inputs["ipsecConfig"] = state ? state.ipsecConfig : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["remark"] = state ? state.remark : undefined;
            inputs["tag"] = state ? state.tag : undefined;
            inputs["vpcId"] = state ? state.vpcId : undefined;
            inputs["vpnGatewayId"] = state ? state.vpnGatewayId : undefined;
        } else {
            const args = argsOrState as VPNConnectionArgs | undefined;
            if ((!args || args.customerGatewayId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'customerGatewayId'");
            }
            if ((!args || args.ikeConfig === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ikeConfig'");
            }
            if ((!args || args.ipsecConfig === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ipsecConfig'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            if ((!args || args.vpnGatewayId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpnGatewayId'");
            }
            inputs["customerGatewayId"] = args ? args.customerGatewayId : undefined;
            inputs["ikeConfig"] = args ? args.ikeConfig : undefined;
            inputs["ipsecConfig"] = args ? args.ipsecConfig : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["remark"] = args ? args.remark : undefined;
            inputs["tag"] = args ? args.tag : undefined;
            inputs["vpcId"] = args ? args.vpcId : undefined;
            inputs["vpnGatewayId"] = args ? args.vpnGatewayId : undefined;
            inputs["createTime"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(VPNConnection.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VPNConnection resources.
 */
export interface VPNConnectionState {
    /**
     * The creation time for VPN Gateway Connection, formatted in RFC3339 time string.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The grade of the VPN Gateway
     */
    customerGatewayId?: pulumi.Input<string>;
    /**
     * The configurations of IKE negotiation. Each ikeConfig supports fields documented below.
     */
    ikeConfig?: pulumi.Input<inputs.ipsecvpn.VPNConnectionIkeConfig>;
    /**
     * The configurations of IPSec negotiation. Each ipsecConfig supports fields documented below.
     */
    ipsecConfig?: pulumi.Input<inputs.ipsecvpn.VPNConnectionIpsecConfig>;
    name?: pulumi.Input<string>;
    /**
     * The remarks of the VPN Gateway Connection. (Default: `""`).
     */
    remark?: pulumi.Input<string>;
    /**
     * A tag assigned to VPN Gateway Connection, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
     */
    tag?: pulumi.Input<string>;
    /**
     * The ID of VPC linked to the VPN Gateway Connection.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * The ID of  the VPN Customer Gateway.
     */
    vpnGatewayId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VPNConnection resource.
 */
export interface VPNConnectionArgs {
    /**
     * The grade of the VPN Gateway
     */
    customerGatewayId: pulumi.Input<string>;
    /**
     * The configurations of IKE negotiation. Each ikeConfig supports fields documented below.
     */
    ikeConfig: pulumi.Input<inputs.ipsecvpn.VPNConnectionIkeConfig>;
    /**
     * The configurations of IPSec negotiation. Each ipsecConfig supports fields documented below.
     */
    ipsecConfig: pulumi.Input<inputs.ipsecvpn.VPNConnectionIpsecConfig>;
    name?: pulumi.Input<string>;
    /**
     * The remarks of the VPN Gateway Connection. (Default: `""`).
     */
    remark?: pulumi.Input<string>;
    /**
     * A tag assigned to VPN Gateway Connection, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
     */
    tag?: pulumi.Input<string>;
    /**
     * The ID of VPC linked to the VPN Gateway Connection.
     */
    vpcId: pulumi.Input<string>;
    /**
     * The ID of  the VPN Customer Gateway.
     */
    vpnGatewayId: pulumi.Input<string>;
}
