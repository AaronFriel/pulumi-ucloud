// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ucloud.ipsecvpn
{
    public static partial class Invokes
    {
        /// <summary>
        /// This data source providers a list of VPN Gateway resources according to their ID, name, vpc and tag.
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-ucloud/blob/master/website/docs/d/vpn_gateways.html.markdown.
        /// </summary>
        public static Task<LookupVpnGatewaysResult> LookupVpnGateways(LookupVpnGatewaysArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<LookupVpnGatewaysResult>("ucloud:ipsecvpn/lookupVpnGateways:lookupVpnGateways", args ?? InvokeArgs.Empty, options.WithVersion());
    }

    public sealed class LookupVpnGatewaysArgs : Pulumi.InvokeArgs
    {
        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of VPN Gateway IDs, all the VPN Gateways belongs to the defined region will be retrieved if this argument is "".
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string to filter resulting VPN Gateways by name.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// A tag assigned to VPN Gateway.
        /// </summary>
        [Input("tag")]
        public string? Tag { get; set; }

        /// <summary>
        /// The ID of VPC linked to the VPN Gateway.
        /// </summary>
        [Input("vpcId")]
        public string? VpcId { get; set; }

        public LookupVpnGatewaysArgs()
        {
        }
    }

    [OutputType]
    public sealed class LookupVpnGatewaysResult
    {
        public readonly ImmutableArray<string> Ids;
        public readonly string? NameRegex;
        public readonly string? OutputFile;
        /// <summary>
        /// A tag assigned to the VPN Gateway.
        /// </summary>
        public readonly string? Tag;
        /// <summary>
        /// Total number of VPN Gateways that satisfy the condition.
        /// </summary>
        public readonly int TotalCount;
        /// <summary>
        /// The ID of VPC linked to the VPN Gateway.
        /// </summary>
        public readonly string? VpcId;
        /// <summary>
        /// It is a nested type. VPN Gateways documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.LookupVpnGatewaysVpnGatewaysResult> VpnGateways;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private LookupVpnGatewaysResult(
            ImmutableArray<string> ids,
            string? nameRegex,
            string? outputFile,
            string? tag,
            int totalCount,
            string? vpcId,
            ImmutableArray<Outputs.LookupVpnGatewaysVpnGatewaysResult> vpnGateways,
            string id)
        {
            Ids = ids;
            NameRegex = nameRegex;
            OutputFile = outputFile;
            Tag = tag;
            TotalCount = totalCount;
            VpcId = vpcId;
            VpnGateways = vpnGateways;
            Id = id;
        }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class LookupVpnGatewaysVpnGatewaysIpSetsResult
    {
        /// <summary>
        /// Type of Elastic IP routes.
        /// </summary>
        public readonly string InternetType;
        /// <summary>
        /// Elastic IP address.
        /// </summary>
        public readonly string Ip;

        [OutputConstructor]
        private LookupVpnGatewaysVpnGatewaysIpSetsResult(
            string internetType,
            string ip)
        {
            InternetType = internetType;
            Ip = ip;
        }
    }

    [OutputType]
    public sealed class LookupVpnGatewaysVpnGatewaysResult
    {
        /// <summary>
        /// Whether to renew an VPN Gateway automatically or not.
        /// </summary>
        public readonly bool AutoRenew;
        /// <summary>
        /// The charge type of VPN Gateway.
        /// </summary>
        public readonly string ChargeType;
        /// <summary>
        /// The time of creation for VPN Gateway, formatted in RFC3339 time string.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The expiration time for VPN Gateway, formatted in RFC3339 time string.
        /// </summary>
        public readonly string ExpireTime;
        /// <summary>
        /// The type of the VPN Gateway.
        /// </summary>
        public readonly string Grade;
        /// <summary>
        /// The ID of VPN Gateway.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// It is a nested type which documented below.
        /// </summary>
        public readonly ImmutableArray<LookupVpnGatewaysVpnGatewaysIpSetsResult> IpSets;
        /// <summary>
        /// The name of the VPN Gateway.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The remarks of VPN Gateway.
        /// </summary>
        public readonly string Remark;
        /// <summary>
        /// A tag assigned to VPN Gateway.
        /// </summary>
        public readonly string Tag;
        /// <summary>
        /// The ID of VPC linked to the VPN Gateway.
        /// </summary>
        public readonly string VpcId;

        [OutputConstructor]
        private LookupVpnGatewaysVpnGatewaysResult(
            bool autoRenew,
            string chargeType,
            string createTime,
            string expireTime,
            string grade,
            string id,
            ImmutableArray<LookupVpnGatewaysVpnGatewaysIpSetsResult> ipSets,
            string name,
            string remark,
            string tag,
            string vpcId)
        {
            AutoRenew = autoRenew;
            ChargeType = chargeType;
            CreateTime = createTime;
            ExpireTime = expireTime;
            Grade = grade;
            Id = id;
            IpSets = ipSets;
            Name = name;
            Remark = remark;
            Tag = tag;
            VpcId = vpcId;
        }
    }
    }
}
