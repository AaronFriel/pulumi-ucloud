// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ucloud.Ipsecvpn.Outputs
{

    [OutputType]
    public sealed class GetVPNConnectionVpnConnectionIkeConfigResult
    {
        /// <summary>
        /// The authentication algorithm of IPSec negotiation.
        /// </summary>
        public readonly string AuthenticationAlgorithm;
        /// <summary>
        /// The Diffie-Hellman group used by IKE negotiation.
        /// </summary>
        public readonly string DhGroup;
        /// <summary>
        /// The encryption algorithm of IPSec negotiation.
        /// </summary>
        public readonly string EncryptionAlgorithm;
        /// <summary>
        /// The negotiation exchange mode of IKE V1 of VPN gateway.
        /// </summary>
        public readonly string ExchangeMode;
        /// <summary>
        /// The version of the IKE protocol.
        /// </summary>
        public readonly string IkeVersion;
        /// <summary>
        /// The identification of the VPN gateway.
        /// </summary>
        public readonly string LocalId;
        /// <summary>
        /// The key used for authentication between the VPN gateway and the Customer gateway.
        /// </summary>
        public readonly string PreSharedKey;
        /// <summary>
        /// The identification of the Customer gateway.
        /// </summary>
        public readonly string RemoteId;
        /// <summary>
        /// The Security Association lifecycle as the result of IPSec negotiation.
        /// </summary>
        public readonly int SaLifeTime;

        [OutputConstructor]
        private GetVPNConnectionVpnConnectionIkeConfigResult(
            string authenticationAlgorithm,

            string dhGroup,

            string encryptionAlgorithm,

            string exchangeMode,

            string ikeVersion,

            string localId,

            string preSharedKey,

            string remoteId,

            int saLifeTime)
        {
            AuthenticationAlgorithm = authenticationAlgorithm;
            DhGroup = dhGroup;
            EncryptionAlgorithm = encryptionAlgorithm;
            ExchangeMode = exchangeMode;
            IkeVersion = ikeVersion;
            LocalId = localId;
            PreSharedKey = preSharedKey;
            RemoteId = remoteId;
            SaLifeTime = saLifeTime;
        }
    }
}
