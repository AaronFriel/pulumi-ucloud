// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ucloud.Ipsecvpn
{
    /// <summary>
    /// Provides a IPSec VPN Gateway Connection resource.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Ucloud = Pulumi.Ucloud;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var fooVPC = new Ucloud.Vpc.VPC("fooVPC", new Ucloud.Vpc.VPCArgs
    ///         {
    ///             Tag = "tf-acc",
    ///             CidrBlocks = 
    ///             {
    ///                 "192.168.0.0/16",
    ///             },
    ///         });
    ///         var fooSubnet = new Ucloud.Vpc.Subnet("fooSubnet", new Ucloud.Vpc.SubnetArgs
    ///         {
    ///             Tag = "tf-acc",
    ///             CidrBlock = "192.168.1.0/24",
    ///             VpcId = fooVPC.Id,
    ///         });
    ///         var fooEIP = new Ucloud.Unet.EIP("fooEIP", new Ucloud.Unet.EIPArgs
    ///         {
    ///             Bandwidth = 1,
    ///             InternetType = "bgp",
    ///             ChargeMode = "bandwidth",
    ///             Tag = "tf-acc",
    ///         });
    ///         var fooVPNGateway = new Ucloud.Ipsecvpn.VPNGateway("fooVPNGateway", new Ucloud.Ipsecvpn.VPNGatewayArgs
    ///         {
    ///             VpcId = fooVPC.Id,
    ///             Grade = "standard",
    ///             EipId = fooEIP.Id,
    ///             Tag = "tf-acc",
    ///         });
    ///         var fooVPNCustomerGateway = new Ucloud.Ipsecvpn.VPNCustomerGateway("fooVPNCustomerGateway", new Ucloud.Ipsecvpn.VPNCustomerGatewayArgs
    ///         {
    ///             IpAddress = "10.0.0.1",
    ///             Tag = "tf-acc",
    ///         });
    ///         var fooVPNConnection = new Ucloud.Ipsecvpn.VPNConnection("fooVPNConnection", new Ucloud.Ipsecvpn.VPNConnectionArgs
    ///         {
    ///             VpnGatewayId = fooVPNGateway.Id,
    ///             CustomerGatewayId = fooVPNCustomerGateway.Id,
    ///             VpcId = fooVPC.Id,
    ///             Tag = "tf-acc",
    ///             Remark = "test",
    ///             IkeConfig = new Ucloud.Ipsecvpn.Inputs.VPNConnectionIkeConfigArgs
    ///             {
    ///                 PreSharedKey = "test_2019",
    ///             },
    ///             IpsecConfig = new Ucloud.Ipsecvpn.Inputs.VPNConnectionIpsecConfigArgs
    ///             {
    ///                 LocalSubnetIds = 
    ///                 {
    ///                     fooSubnet.Id,
    ///                 },
    ///                 RemoteSubnets = 
    ///                 {
    ///                     "10.0.0.0/24",
    ///                 },
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// VPN Connection can be imported using the `id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import ucloud:ipsecvpn/vPNConnection:VPNConnection example vpntunnel-abc123456
    /// ```
    /// </summary>
    [UcloudResourceType("ucloud:ipsecvpn/vPNConnection:VPNConnection")]
    public partial class VPNConnection : Pulumi.CustomResource
    {
        /// <summary>
        /// The creation time for VPN Gateway Connection, formatted in RFC3339 time string.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The grade of the VPN Gateway
        /// </summary>
        [Output("customerGatewayId")]
        public Output<string> CustomerGatewayId { get; private set; } = null!;

        /// <summary>
        /// The configurations of IKE negotiation. Each ike_config supports fields documented below.
        /// </summary>
        [Output("ikeConfig")]
        public Output<Outputs.VPNConnectionIkeConfig> IkeConfig { get; private set; } = null!;

        /// <summary>
        /// The configurations of IPSec negotiation. Each ipsec_config supports fields documented below.
        /// </summary>
        [Output("ipsecConfig")]
        public Output<Outputs.VPNConnectionIpsecConfig> IpsecConfig { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The remarks of the VPN Gateway Connection. (Default: `""`).
        /// </summary>
        [Output("remark")]
        public Output<string> Remark { get; private set; } = null!;

        /// <summary>
        /// A tag assigned to VPN Gateway Connection, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
        /// </summary>
        [Output("tag")]
        public Output<string?> Tag { get; private set; } = null!;

        /// <summary>
        /// The ID of VPC linked to the VPN Gateway Connection.
        /// </summary>
        [Output("vpcId")]
        public Output<string> VpcId { get; private set; } = null!;

        /// <summary>
        /// The ID of  the VPN Customer Gateway.
        /// </summary>
        [Output("vpnGatewayId")]
        public Output<string> VpnGatewayId { get; private set; } = null!;


        /// <summary>
        /// Create a VPNConnection resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VPNConnection(string name, VPNConnectionArgs args, CustomResourceOptions? options = null)
            : base("ucloud:ipsecvpn/vPNConnection:VPNConnection", name, args ?? new VPNConnectionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VPNConnection(string name, Input<string> id, VPNConnectionState? state = null, CustomResourceOptions? options = null)
            : base("ucloud:ipsecvpn/vPNConnection:VPNConnection", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VPNConnection resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VPNConnection Get(string name, Input<string> id, VPNConnectionState? state = null, CustomResourceOptions? options = null)
        {
            return new VPNConnection(name, id, state, options);
        }
    }

    public sealed class VPNConnectionArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The grade of the VPN Gateway
        /// </summary>
        [Input("customerGatewayId", required: true)]
        public Input<string> CustomerGatewayId { get; set; } = null!;

        /// <summary>
        /// The configurations of IKE negotiation. Each ike_config supports fields documented below.
        /// </summary>
        [Input("ikeConfig", required: true)]
        public Input<Inputs.VPNConnectionIkeConfigArgs> IkeConfig { get; set; } = null!;

        /// <summary>
        /// The configurations of IPSec negotiation. Each ipsec_config supports fields documented below.
        /// </summary>
        [Input("ipsecConfig", required: true)]
        public Input<Inputs.VPNConnectionIpsecConfigArgs> IpsecConfig { get; set; } = null!;

        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The remarks of the VPN Gateway Connection. (Default: `""`).
        /// </summary>
        [Input("remark")]
        public Input<string>? Remark { get; set; }

        /// <summary>
        /// A tag assigned to VPN Gateway Connection, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
        /// </summary>
        [Input("tag")]
        public Input<string>? Tag { get; set; }

        /// <summary>
        /// The ID of VPC linked to the VPN Gateway Connection.
        /// </summary>
        [Input("vpcId", required: true)]
        public Input<string> VpcId { get; set; } = null!;

        /// <summary>
        /// The ID of  the VPN Customer Gateway.
        /// </summary>
        [Input("vpnGatewayId", required: true)]
        public Input<string> VpnGatewayId { get; set; } = null!;

        public VPNConnectionArgs()
        {
        }
    }

    public sealed class VPNConnectionState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The creation time for VPN Gateway Connection, formatted in RFC3339 time string.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// The grade of the VPN Gateway
        /// </summary>
        [Input("customerGatewayId")]
        public Input<string>? CustomerGatewayId { get; set; }

        /// <summary>
        /// The configurations of IKE negotiation. Each ike_config supports fields documented below.
        /// </summary>
        [Input("ikeConfig")]
        public Input<Inputs.VPNConnectionIkeConfigGetArgs>? IkeConfig { get; set; }

        /// <summary>
        /// The configurations of IPSec negotiation. Each ipsec_config supports fields documented below.
        /// </summary>
        [Input("ipsecConfig")]
        public Input<Inputs.VPNConnectionIpsecConfigGetArgs>? IpsecConfig { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The remarks of the VPN Gateway Connection. (Default: `""`).
        /// </summary>
        [Input("remark")]
        public Input<string>? Remark { get; set; }

        /// <summary>
        /// A tag assigned to VPN Gateway Connection, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
        /// </summary>
        [Input("tag")]
        public Input<string>? Tag { get; set; }

        /// <summary>
        /// The ID of VPC linked to the VPN Gateway Connection.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        /// <summary>
        /// The ID of  the VPN Customer Gateway.
        /// </summary>
        [Input("vpnGatewayId")]
        public Input<string>? VpnGatewayId { get; set; }

        public VPNConnectionState()
        {
        }
    }
}
