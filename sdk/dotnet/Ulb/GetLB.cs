// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ucloud.Ulb
{
    public static class GetLB
    {
        /// <summary>
        /// This data source provides a list of Load Balancer resources according to their Load Balancer ID, VPC ID and Subnet ID.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Ucloud = Pulumi.Ucloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(Ucloud.Ulb.GetLB.InvokeAsync());
        ///         this.First = example.Apply(example =&gt; example.Lbs[0].Id);
        ///     }
        /// 
        ///     [Output("first")]
        ///     public Output&lt;string&gt; First { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetLBResult> InvokeAsync(GetLBArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetLBResult>("ucloud:ulb/getLB:getLB", args ?? new GetLBArgs(), options.WithVersion());
    }


    public sealed class GetLBArgs : Pulumi.InvokeArgs
    {
        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of Load Balancer IDs, all the LBs belong to this region will be retrieved if the ID is `[]`.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string to filter resulting lbs by name.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The ID of subnet that intrant load balancer belongs to.
        /// </summary>
        [Input("subnetId")]
        public string? SubnetId { get; set; }

        /// <summary>
        /// The ID of the VPC linked to the Load Balancers.
        /// </summary>
        [Input("vpcId")]
        public string? VpcId { get; set; }

        public GetLBArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetLBResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        /// <summary>
        /// It is a nested type which documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetLBLbResult> Lbs;
        public readonly string? NameRegex;
        public readonly string? OutputFile;
        /// <summary>
        /// (Optional) The ID of subnet that intrant load balancer belongs to.
        /// </summary>
        public readonly string SubnetId;
        /// <summary>
        /// Total number of Load Balancers that satisfy the condition.
        /// </summary>
        public readonly int TotalCount;
        /// <summary>
        /// The ID of the VPC linked to the Load Balancers.
        /// </summary>
        public readonly string VpcId;

        [OutputConstructor]
        private GetLBResult(
            string id,

            ImmutableArray<string> ids,

            ImmutableArray<Outputs.GetLBLbResult> lbs,

            string? nameRegex,

            string? outputFile,

            string subnetId,

            int totalCount,

            string vpcId)
        {
            Id = id;
            Ids = ids;
            Lbs = lbs;
            NameRegex = nameRegex;
            OutputFile = outputFile;
            SubnetId = subnetId;
            TotalCount = totalCount;
            VpcId = vpcId;
        }
    }
}
