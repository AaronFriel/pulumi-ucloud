// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ucloud.ulb
{
    /// <summary>
    /// Provides a Load Balancer Attachment resource for attaching Load Balancer to UHost Instance, etc.
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-ucloud/blob/master/website/docs/r/lb_attachment.html.markdown.
    /// </summary>
    public partial class LbAttachment : Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of a listener server.
        /// </summary>
        [Output("listenerId")]
        public Output<string> ListenerId { get; private set; } = null!;

        /// <summary>
        /// The ID of a load balancer.
        /// </summary>
        [Output("loadBalancerId")]
        public Output<string> LoadBalancerId { get; private set; } = null!;

        /// <summary>
        /// Port opened on the backend server to receive requests, range: 1-65535, (Default: `80`).
        /// </summary>
        [Output("port")]
        public Output<int?> Port { get; private set; } = null!;

        /// <summary>
        /// The private ip address for backend servers.
        /// </summary>
        [Output("privateIp")]
        public Output<string> PrivateIp { get; private set; } = null!;

        /// <summary>
        /// The ID of a backend server.
        /// </summary>
        [Output("resourceId")]
        public Output<string> ResourceId { get; private set; } = null!;

        /// <summary>
        /// **Deprecated**, attribute `resource_type` is deprecated for optimizing parameters.
        /// </summary>
        [Output("resourceType")]
        public Output<string> ResourceType { get; private set; } = null!;

        /// <summary>
        /// The status of backend servers. Possible values are: `normalRunning`, `exceptionRunning`.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;


        /// <summary>
        /// Create a LbAttachment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LbAttachment(string name, LbAttachmentArgs args, CustomResourceOptions? options = null)
            : base("ucloud:ulb/lbAttachment:LbAttachment", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private LbAttachment(string name, Input<string> id, LbAttachmentState? state = null, CustomResourceOptions? options = null)
            : base("ucloud:ulb/lbAttachment:LbAttachment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LbAttachment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LbAttachment Get(string name, Input<string> id, LbAttachmentState? state = null, CustomResourceOptions? options = null)
        {
            return new LbAttachment(name, id, state, options);
        }
    }

    public sealed class LbAttachmentArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of a listener server.
        /// </summary>
        [Input("listenerId", required: true)]
        public Input<string> ListenerId { get; set; } = null!;

        /// <summary>
        /// The ID of a load balancer.
        /// </summary>
        [Input("loadBalancerId", required: true)]
        public Input<string> LoadBalancerId { get; set; } = null!;

        /// <summary>
        /// Port opened on the backend server to receive requests, range: 1-65535, (Default: `80`).
        /// </summary>
        [Input("port")]
        public Input<int>? Port { get; set; }

        /// <summary>
        /// The ID of a backend server.
        /// </summary>
        [Input("resourceId", required: true)]
        public Input<string> ResourceId { get; set; } = null!;

        /// <summary>
        /// **Deprecated**, attribute `resource_type` is deprecated for optimizing parameters.
        /// </summary>
        [Input("resourceType")]
        public Input<string>? ResourceType { get; set; }

        public LbAttachmentArgs()
        {
        }
    }

    public sealed class LbAttachmentState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of a listener server.
        /// </summary>
        [Input("listenerId")]
        public Input<string>? ListenerId { get; set; }

        /// <summary>
        /// The ID of a load balancer.
        /// </summary>
        [Input("loadBalancerId")]
        public Input<string>? LoadBalancerId { get; set; }

        /// <summary>
        /// Port opened on the backend server to receive requests, range: 1-65535, (Default: `80`).
        /// </summary>
        [Input("port")]
        public Input<int>? Port { get; set; }

        /// <summary>
        /// The private ip address for backend servers.
        /// </summary>
        [Input("privateIp")]
        public Input<string>? PrivateIp { get; set; }

        /// <summary>
        /// The ID of a backend server.
        /// </summary>
        [Input("resourceId")]
        public Input<string>? ResourceId { get; set; }

        /// <summary>
        /// **Deprecated**, attribute `resource_type` is deprecated for optimizing parameters.
        /// </summary>
        [Input("resourceType")]
        public Input<string>? ResourceType { get; set; }

        /// <summary>
        /// The status of backend servers. Possible values are: `normalRunning`, `exceptionRunning`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public LbAttachmentState()
        {
        }
    }
}
