// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ucloud.Ulb
{
    /// <summary>
    /// Provides a Load Balancer SSL certificate resource.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.IO;
    /// using Pulumi;
    /// using Ucloud = Pulumi.Ucloud;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var @default = new Ucloud.Ulb.LBSsl("default", new Ucloud.Ulb.LBSslArgs
    ///         {
    ///             PrivateKey = File.ReadAllText("private.key"),
    ///             UserCert = File.ReadAllText("user.crt"),
    ///             CaCert = File.ReadAllText("ca.crt"),
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// </summary>
    [UcloudResourceType("ucloud:ulb/lBSsl:LBSsl")]
    public partial class LBSsl : Pulumi.CustomResource
    {
        /// <summary>
        /// The content of the CA certificate about ssl certificate.
        /// </summary>
        [Output("caCert")]
        public Output<string?> CaCert { get; private set; } = null!;

        /// <summary>
        /// The time of creation for lb ssl, formatted in RFC3339 time string.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The content of the private key about ssl certificate.
        /// </summary>
        [Output("privateKey")]
        public Output<string> PrivateKey { get; private set; } = null!;

        /// <summary>
        /// The content of the user certificate about ssl certificate.
        /// </summary>
        [Output("userCert")]
        public Output<string> UserCert { get; private set; } = null!;


        /// <summary>
        /// Create a LBSsl resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LBSsl(string name, LBSslArgs args, CustomResourceOptions? options = null)
            : base("ucloud:ulb/lBSsl:LBSsl", name, args ?? new LBSslArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LBSsl(string name, Input<string> id, LBSslState? state = null, CustomResourceOptions? options = null)
            : base("ucloud:ulb/lBSsl:LBSsl", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LBSsl resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LBSsl Get(string name, Input<string> id, LBSslState? state = null, CustomResourceOptions? options = null)
        {
            return new LBSsl(name, id, state, options);
        }
    }

    public sealed class LBSslArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The content of the CA certificate about ssl certificate.
        /// </summary>
        [Input("caCert")]
        public Input<string>? CaCert { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The content of the private key about ssl certificate.
        /// </summary>
        [Input("privateKey", required: true)]
        public Input<string> PrivateKey { get; set; } = null!;

        /// <summary>
        /// The content of the user certificate about ssl certificate.
        /// </summary>
        [Input("userCert", required: true)]
        public Input<string> UserCert { get; set; } = null!;

        public LBSslArgs()
        {
        }
    }

    public sealed class LBSslState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The content of the CA certificate about ssl certificate.
        /// </summary>
        [Input("caCert")]
        public Input<string>? CaCert { get; set; }

        /// <summary>
        /// The time of creation for lb ssl, formatted in RFC3339 time string.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The content of the private key about ssl certificate.
        /// </summary>
        [Input("privateKey")]
        public Input<string>? PrivateKey { get; set; }

        /// <summary>
        /// The content of the user certificate about ssl certificate.
        /// </summary>
        [Input("userCert")]
        public Input<string>? UserCert { get; set; }

        public LBSslState()
        {
        }
    }
}
