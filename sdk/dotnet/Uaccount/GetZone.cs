// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ucloud.Uaccount
{
    public static class GetZone
    {
        /// <summary>
        /// This data source provides a list of available zones in the current region.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Ucloud = Pulumi.Ucloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(Ucloud.Uaccount.GetZone.InvokeAsync());
        ///         this.First = example.Apply(example =&gt; example.Zones[0].Id);
        ///     }
        /// 
        ///     [Output("first")]
        ///     public Output&lt;string&gt; First { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetZoneResult> InvokeAsync(GetZoneArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetZoneResult>("ucloud:uaccount/getZone:getZone", args ?? new GetZoneArgs(), options.WithVersion());
    }


    public sealed class GetZoneArgs : Pulumi.InvokeArgs
    {
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        public GetZoneArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetZoneResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? OutputFile;
        /// <summary>
        /// Total number of zones that satisfy the condition.
        /// </summary>
        public readonly int TotalCount;
        /// <summary>
        /// It is a nested type which documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetZoneZoneResult> Zones;

        [OutputConstructor]
        private GetZoneResult(
            string id,

            string? outputFile,

            int totalCount,

            ImmutableArray<Outputs.GetZoneZoneResult> zones)
        {
            Id = id;
            OutputFile = outputFile;
            TotalCount = totalCount;
            Zones = zones;
        }
    }
}
