// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ucloud.Uaccount
{
    public static class GetProject
    {
        /// <summary>
        /// This data source providers a list of projects owned by user according to finance permission and name.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Ucloud = Pulumi.Ucloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(Ucloud.Uaccount.GetProject.InvokeAsync(new Ucloud.Uaccount.GetProjectArgs
        ///         {
        ///             IsFinance = false,
        ///         }));
        ///         this.First = example.Apply(example =&gt; example.Projects[0].Id);
        ///     }
        /// 
        ///     [Output("first")]
        ///     public Output&lt;string&gt; First { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetProjectResult> InvokeAsync(GetProjectArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetProjectResult>("ucloud:uaccount/getProject:getProject", args ?? new GetProjectArgs(), options.WithVersion());
    }


    public sealed class GetProjectArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// To identify if the current account is granted with financial permission.
        /// </summary>
        [Input("isFinance")]
        public bool? IsFinance { get; set; }

        /// <summary>
        /// A regex string to filter resulting projects by name.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        [Input("outputFile")]
        public string? OutputFile { get; set; }

        public GetProjectArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetProjectResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool? IsFinance;
        public readonly string? NameRegex;
        public readonly string? OutputFile;
        /// <summary>
        /// It is a nested type which documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProjectProjectResult> Projects;
        /// <summary>
        /// Total number of projects that satisfy the condition.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private GetProjectResult(
            string id,

            bool? isFinance,

            string? nameRegex,

            string? outputFile,

            ImmutableArray<Outputs.GetProjectProjectResult> projects,

            int totalCount)
        {
            Id = id;
            IsFinance = isFinance;
            NameRegex = nameRegex;
            OutputFile = outputFile;
            Projects = projects;
            TotalCount = totalCount;
        }
    }
}
