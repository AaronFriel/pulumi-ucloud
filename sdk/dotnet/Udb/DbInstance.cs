// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ucloud.udb
{
    /// <summary>
    /// Provides a Database instance resource.
    /// 
    /// &gt; **Note**  Please do confirm if any task pending submission before reset your password, since the password reset will take effect immediately.
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-ucloud/blob/master/website/docs/r/db_instance.html.markdown.
    /// </summary>
    public partial class DbInstance : Pulumi.CustomResource
    {
        /// <summary>
        /// Availability zone where database instance is located. Such as: "cn-bj2-02". You may refer to [list of availability zone](https://docs.ucloud.cn/api/summary/regionlist)
        /// </summary>
        [Output("availabilityZone")]
        public Output<string> AvailabilityZone { get; private set; } = null!;

        /// <summary>
        /// Specifies when the backup starts, measured in hour, it starts at one o'clock of 1, 2, 3, 4 in the morning by default.
        /// </summary>
        [Output("backupBeginTime")]
        public Output<int> BackupBeginTime { get; private set; } = null!;

        /// <summary>
        /// The backup for database such as "test.%" or table such as "city.address" specified in the black lists are not supported.
        /// </summary>
        [Output("backupBlackLists")]
        public Output<ImmutableArray<string>> BackupBlackLists { get; private set; } = null!;

        /// <summary>
        /// Specifies the number of backup saved per week, it is 7 backups saved per week by default.
        /// </summary>
        [Output("backupCount")]
        public Output<int?> BackupCount { get; private set; } = null!;

        /// <summary>
        /// Specifies whether the backup took place from Sunday to Saturday by displaying 7 digits. 0 stands for backup disabled and 1 stands for backup enabled. The rightmost digit specifies whether the backup took place on Sunday, and the digits from right to left specify whether the backup took place from Monday to Saturday, it's mandatory required to backup twice per week at least. such as: digits "1100000" stands for the backup took place on Saturday and Friday.
        /// </summary>
        [Output("backupDate")]
        public Output<string> BackupDate { get; private set; } = null!;

        /// <summary>
        /// The charge type of db instance, possible values are: `year`, `month` and `dynamic` as pay by hour (specific permission required). (Default: `month`).
        /// </summary>
        [Output("chargeType")]
        public Output<string> ChargeType { get; private set; } = null!;

        /// <summary>
        /// The creation time of database, formatted by RFC3339 time string.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The duration that you will buy the db instance (Default: `1`). The value is `0` when pay by month and the instance will be vaild till the last day of that month. It is not required when `dynamic` (pay by hour).
        /// </summary>
        [Output("duration")]
        public Output<int?> Duration { get; private set; } = null!;

        /// <summary>
        /// The type of database engine, possible values are: "mysql", "percona".
        /// </summary>
        [Output("engine")]
        public Output<string> Engine { get; private set; } = null!;

        /// <summary>
        /// The database engine version, possible values are: "5.5", "5.6", "5.7".
        /// - 5.5/5.6/5.7 for mysql and percona engine.
        /// </summary>
        [Output("engineVersion")]
        public Output<string> EngineVersion { get; private set; } = null!;

        /// <summary>
        /// The expiration time of database, formatted by RFC3339 time string.
        /// </summary>
        [Output("expireTime")]
        public Output<string> ExpireTime { get; private set; } = null!;

        /// <summary>
        /// Specifies the allocated storage size in gigabytes (GB), range from 20 to 4500GB. The volume adjustment must be a multiple of 10 GB. The maximum disk volume for SSD type areï¼š
        /// - 500GB if the memory chosen is equal or less than 6GB;
        /// - 1000GB if the memory chosen is from 8 to 16GB;
        /// - 2000GB if the memory chosen is 24GB or 32GB;
        /// - 3500GB if the memory chosen is 48GB or 64GB;
        /// - 4500GB if the memory chosen is equal or more than 96GB;
        /// </summary>
        [Output("instanceStorage")]
        public Output<int> InstanceStorage { get; private set; } = null!;

        [Output("instanceType")]
        public Output<string> InstanceType { get; private set; } = null!;

        /// <summary>
        /// The modification time of database, formatted by RFC3339 time string.
        /// </summary>
        [Output("modifyTime")]
        public Output<string> ModifyTime { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("password")]
        public Output<string> Password { get; private set; } = null!;

        /// <summary>
        /// The port on which the database accepts connections, the default port is 3306 for mysql and percona.
        /// </summary>
        [Output("port")]
        public Output<int> Port { get; private set; } = null!;

        /// <summary>
        /// The private IP address assigned to the database instance.
        /// </summary>
        [Output("privateIp")]
        public Output<string> PrivateIp { get; private set; } = null!;

        /// <summary>
        /// Availability zone where the standby database instance is located for the high availability database instance with multiple zone; The disaster recovery of data center can be activated by switching to the standby database instance for the high availability database instance.
        /// </summary>
        [Output("standbyZone")]
        public Output<string?> StandbyZone { get; private set; } = null!;

        /// <summary>
        /// Specifies the status of database, possible values are: `Init`, `Fail`, `Starting`, `Running`, `Shutdown`, `Shutoff`, `Delete`, `Upgrading`, `Promoting`, `Recovering` and `Recover fail`.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The ID of subnet.
        /// </summary>
        [Output("subnetId")]
        public Output<string> SubnetId { get; private set; } = null!;

        /// <summary>
        /// A tag assigned to database instance, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
        /// </summary>
        [Output("tag")]
        public Output<string> Tag { get; private set; } = null!;

        /// <summary>
        /// The ID of VPC linked to the database instances.
        /// </summary>
        [Output("vpcId")]
        public Output<string> VpcId { get; private set; } = null!;


        /// <summary>
        /// Create a DbInstance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DbInstance(string name, DbInstanceArgs args, CustomResourceOptions? options = null)
            : base("ucloud:udb/dbInstance:DbInstance", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private DbInstance(string name, Input<string> id, DbInstanceState? state = null, CustomResourceOptions? options = null)
            : base("ucloud:udb/dbInstance:DbInstance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DbInstance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DbInstance Get(string name, Input<string> id, DbInstanceState? state = null, CustomResourceOptions? options = null)
        {
            return new DbInstance(name, id, state, options);
        }
    }

    public sealed class DbInstanceArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Availability zone where database instance is located. Such as: "cn-bj2-02". You may refer to [list of availability zone](https://docs.ucloud.cn/api/summary/regionlist)
        /// </summary>
        [Input("availabilityZone", required: true)]
        public Input<string> AvailabilityZone { get; set; } = null!;

        /// <summary>
        /// Specifies when the backup starts, measured in hour, it starts at one o'clock of 1, 2, 3, 4 in the morning by default.
        /// </summary>
        [Input("backupBeginTime")]
        public Input<int>? BackupBeginTime { get; set; }

        [Input("backupBlackLists")]
        private InputList<string>? _backupBlackLists;

        /// <summary>
        /// The backup for database such as "test.%" or table such as "city.address" specified in the black lists are not supported.
        /// </summary>
        public InputList<string> BackupBlackLists
        {
            get => _backupBlackLists ?? (_backupBlackLists = new InputList<string>());
            set => _backupBlackLists = value;
        }

        /// <summary>
        /// Specifies the number of backup saved per week, it is 7 backups saved per week by default.
        /// </summary>
        [Input("backupCount")]
        public Input<int>? BackupCount { get; set; }

        /// <summary>
        /// Specifies whether the backup took place from Sunday to Saturday by displaying 7 digits. 0 stands for backup disabled and 1 stands for backup enabled. The rightmost digit specifies whether the backup took place on Sunday, and the digits from right to left specify whether the backup took place from Monday to Saturday, it's mandatory required to backup twice per week at least. such as: digits "1100000" stands for the backup took place on Saturday and Friday.
        /// </summary>
        [Input("backupDate")]
        public Input<string>? BackupDate { get; set; }

        /// <summary>
        /// The charge type of db instance, possible values are: `year`, `month` and `dynamic` as pay by hour (specific permission required). (Default: `month`).
        /// </summary>
        [Input("chargeType")]
        public Input<string>? ChargeType { get; set; }

        /// <summary>
        /// The duration that you will buy the db instance (Default: `1`). The value is `0` when pay by month and the instance will be vaild till the last day of that month. It is not required when `dynamic` (pay by hour).
        /// </summary>
        [Input("duration")]
        public Input<int>? Duration { get; set; }

        /// <summary>
        /// The type of database engine, possible values are: "mysql", "percona".
        /// </summary>
        [Input("engine", required: true)]
        public Input<string> Engine { get; set; } = null!;

        /// <summary>
        /// The database engine version, possible values are: "5.5", "5.6", "5.7".
        /// - 5.5/5.6/5.7 for mysql and percona engine.
        /// </summary>
        [Input("engineVersion", required: true)]
        public Input<string> EngineVersion { get; set; } = null!;

        /// <summary>
        /// Specifies the allocated storage size in gigabytes (GB), range from 20 to 4500GB. The volume adjustment must be a multiple of 10 GB. The maximum disk volume for SSD type areï¼š
        /// - 500GB if the memory chosen is equal or less than 6GB;
        /// - 1000GB if the memory chosen is from 8 to 16GB;
        /// - 2000GB if the memory chosen is 24GB or 32GB;
        /// - 3500GB if the memory chosen is 48GB or 64GB;
        /// - 4500GB if the memory chosen is equal or more than 96GB;
        /// </summary>
        [Input("instanceStorage", required: true)]
        public Input<int> InstanceStorage { get; set; } = null!;

        [Input("instanceType", required: true)]
        public Input<string> InstanceType { get; set; } = null!;

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("password")]
        public Input<string>? Password { get; set; }

        /// <summary>
        /// The port on which the database accepts connections, the default port is 3306 for mysql and percona.
        /// </summary>
        [Input("port")]
        public Input<int>? Port { get; set; }

        /// <summary>
        /// Availability zone where the standby database instance is located for the high availability database instance with multiple zone; The disaster recovery of data center can be activated by switching to the standby database instance for the high availability database instance.
        /// </summary>
        [Input("standbyZone")]
        public Input<string>? StandbyZone { get; set; }

        /// <summary>
        /// The ID of subnet.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        /// <summary>
        /// A tag assigned to database instance, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
        /// </summary>
        [Input("tag")]
        public Input<string>? Tag { get; set; }

        /// <summary>
        /// The ID of VPC linked to the database instances.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public DbInstanceArgs()
        {
        }
    }

    public sealed class DbInstanceState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Availability zone where database instance is located. Such as: "cn-bj2-02". You may refer to [list of availability zone](https://docs.ucloud.cn/api/summary/regionlist)
        /// </summary>
        [Input("availabilityZone")]
        public Input<string>? AvailabilityZone { get; set; }

        /// <summary>
        /// Specifies when the backup starts, measured in hour, it starts at one o'clock of 1, 2, 3, 4 in the morning by default.
        /// </summary>
        [Input("backupBeginTime")]
        public Input<int>? BackupBeginTime { get; set; }

        [Input("backupBlackLists")]
        private InputList<string>? _backupBlackLists;

        /// <summary>
        /// The backup for database such as "test.%" or table such as "city.address" specified in the black lists are not supported.
        /// </summary>
        public InputList<string> BackupBlackLists
        {
            get => _backupBlackLists ?? (_backupBlackLists = new InputList<string>());
            set => _backupBlackLists = value;
        }

        /// <summary>
        /// Specifies the number of backup saved per week, it is 7 backups saved per week by default.
        /// </summary>
        [Input("backupCount")]
        public Input<int>? BackupCount { get; set; }

        /// <summary>
        /// Specifies whether the backup took place from Sunday to Saturday by displaying 7 digits. 0 stands for backup disabled and 1 stands for backup enabled. The rightmost digit specifies whether the backup took place on Sunday, and the digits from right to left specify whether the backup took place from Monday to Saturday, it's mandatory required to backup twice per week at least. such as: digits "1100000" stands for the backup took place on Saturday and Friday.
        /// </summary>
        [Input("backupDate")]
        public Input<string>? BackupDate { get; set; }

        /// <summary>
        /// The charge type of db instance, possible values are: `year`, `month` and `dynamic` as pay by hour (specific permission required). (Default: `month`).
        /// </summary>
        [Input("chargeType")]
        public Input<string>? ChargeType { get; set; }

        /// <summary>
        /// The creation time of database, formatted by RFC3339 time string.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// The duration that you will buy the db instance (Default: `1`). The value is `0` when pay by month and the instance will be vaild till the last day of that month. It is not required when `dynamic` (pay by hour).
        /// </summary>
        [Input("duration")]
        public Input<int>? Duration { get; set; }

        /// <summary>
        /// The type of database engine, possible values are: "mysql", "percona".
        /// </summary>
        [Input("engine")]
        public Input<string>? Engine { get; set; }

        /// <summary>
        /// The database engine version, possible values are: "5.5", "5.6", "5.7".
        /// - 5.5/5.6/5.7 for mysql and percona engine.
        /// </summary>
        [Input("engineVersion")]
        public Input<string>? EngineVersion { get; set; }

        /// <summary>
        /// The expiration time of database, formatted by RFC3339 time string.
        /// </summary>
        [Input("expireTime")]
        public Input<string>? ExpireTime { get; set; }

        /// <summary>
        /// Specifies the allocated storage size in gigabytes (GB), range from 20 to 4500GB. The volume adjustment must be a multiple of 10 GB. The maximum disk volume for SSD type areï¼š
        /// - 500GB if the memory chosen is equal or less than 6GB;
        /// - 1000GB if the memory chosen is from 8 to 16GB;
        /// - 2000GB if the memory chosen is 24GB or 32GB;
        /// - 3500GB if the memory chosen is 48GB or 64GB;
        /// - 4500GB if the memory chosen is equal or more than 96GB;
        /// </summary>
        [Input("instanceStorage")]
        public Input<int>? InstanceStorage { get; set; }

        [Input("instanceType")]
        public Input<string>? InstanceType { get; set; }

        /// <summary>
        /// The modification time of database, formatted by RFC3339 time string.
        /// </summary>
        [Input("modifyTime")]
        public Input<string>? ModifyTime { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("password")]
        public Input<string>? Password { get; set; }

        /// <summary>
        /// The port on which the database accepts connections, the default port is 3306 for mysql and percona.
        /// </summary>
        [Input("port")]
        public Input<int>? Port { get; set; }

        /// <summary>
        /// The private IP address assigned to the database instance.
        /// </summary>
        [Input("privateIp")]
        public Input<string>? PrivateIp { get; set; }

        /// <summary>
        /// Availability zone where the standby database instance is located for the high availability database instance with multiple zone; The disaster recovery of data center can be activated by switching to the standby database instance for the high availability database instance.
        /// </summary>
        [Input("standbyZone")]
        public Input<string>? StandbyZone { get; set; }

        /// <summary>
        /// Specifies the status of database, possible values are: `Init`, `Fail`, `Starting`, `Running`, `Shutdown`, `Shutoff`, `Delete`, `Upgrading`, `Promoting`, `Recovering` and `Recover fail`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The ID of subnet.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        /// <summary>
        /// A tag assigned to database instance, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
        /// </summary>
        [Input("tag")]
        public Input<string>? Tag { get; set; }

        /// <summary>
        /// The ID of VPC linked to the database instances.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public DbInstanceState()
        {
        }
    }
}
