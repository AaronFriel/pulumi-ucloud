// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ucloud.Uhost.Outputs
{

    [OutputType]
    public sealed class GetInstanceInstanceResult
    {
        /// <summary>
        /// Whether to renew an instance automatically or not.
        /// </summary>
        public readonly bool AutoRenew;
        /// <summary>
        /// Availability zone where instances are located. Such as: "cn-bj2-02". You may refer to [list of availability zone](https://docs.ucloud.cn/api/summary/regionlist)
        /// </summary>
        public readonly string AvailabilityZone;
        /// <summary>
        /// The charge type of instance, possible values are: `year`, `month` and `dynamic` as pay by hour.
        /// </summary>
        public readonly string ChargeType;
        /// <summary>
        /// The number of cores of virtual CPU, measureed in core.
        /// </summary>
        public readonly int Cpu;
        /// <summary>
        /// The time of creation for instance, formatted in RFC3339 time string.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// It is a nested type which documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInstanceInstanceDiskSetResult> DiskSets;
        /// <summary>
        /// The expiration time for instance, formatted in RFC3339 time string.
        /// </summary>
        public readonly string ExpireTime;
        /// <summary>
        /// The ID of disk.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The type of instance.
        /// </summary>
        public readonly string InstanceType;
        /// <summary>
        /// It is a nested type which documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInstanceInstanceIpSetResult> IpSets;
        /// <summary>
        /// The size of memory, measured in MB (Megabyte).
        /// </summary>
        public readonly int Memory;
        /// <summary>
        /// The name of the instance.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The private IP address assigned to the instance.
        /// </summary>
        public readonly string PrivateIp;
        /// <summary>
        /// The remarks of instance.
        /// </summary>
        public readonly string Remark;
        /// <summary>
        /// Instance current status. Possible values are `Initializing`, `Starting`, `Running`, `Stopping`, `Stopped`, `Install Fail` and `Rebooting`.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The ID of subnet linked to the instance.
        /// </summary>
        public readonly string SubnetId;
        /// <summary>
        /// A tag assigned to instance.
        /// </summary>
        public readonly string Tag;
        /// <summary>
        /// The ID of VPC linked to the instance.
        /// </summary>
        public readonly string VpcId;

        [OutputConstructor]
        private GetInstanceInstanceResult(
            bool autoRenew,

            string availabilityZone,

            string chargeType,

            int cpu,

            string createTime,

            ImmutableArray<Outputs.GetInstanceInstanceDiskSetResult> diskSets,

            string expireTime,

            string id,

            string instanceType,

            ImmutableArray<Outputs.GetInstanceInstanceIpSetResult> ipSets,

            int memory,

            string name,

            string privateIp,

            string remark,

            string status,

            string subnetId,

            string tag,

            string vpcId)
        {
            AutoRenew = autoRenew;
            AvailabilityZone = availabilityZone;
            ChargeType = chargeType;
            Cpu = cpu;
            CreateTime = createTime;
            DiskSets = diskSets;
            ExpireTime = expireTime;
            Id = id;
            InstanceType = instanceType;
            IpSets = ipSets;
            Memory = memory;
            Name = name;
            PrivateIp = privateIp;
            Remark = remark;
            Status = status;
            SubnetId = subnetId;
            Tag = tag;
            VpcId = vpcId;
        }
    }
}
