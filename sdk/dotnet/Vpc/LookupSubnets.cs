// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ucloud.vpc
{
    public static partial class Invokes
    {
        /// <summary>
        /// This data source provides a list of Subnet resources according to their Subnet ID, name and the VPC they belong to.
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-ucloud/blob/master/website/docs/d/subnets.html.markdown.
        /// </summary>
        public static Task<LookupSubnetsResult> LookupSubnets(LookupSubnetsArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<LookupSubnetsResult>("ucloud:vpc/lookupSubnets:lookupSubnets", args ?? InvokeArgs.Empty, options.WithVersion());
    }

    public sealed class LookupSubnetsArgs : Pulumi.InvokeArgs
    {
        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of Subnet IDs, all the Subnet resources belong to this region will be retrieved if the ID is `""`.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string to filter resulting Subnet resources by name.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        [Input("outputFile")]
        public string? OutputFile { get; set; }

        [Input("tag")]
        public string? Tag { get; set; }

        /// <summary>
        /// The id of the VPC that the desired Subnet belongs to.
        /// </summary>
        [Input("vpcId")]
        public string? VpcId { get; set; }

        public LookupSubnetsArgs()
        {
        }
    }

    [OutputType]
    public sealed class LookupSubnetsResult
    {
        public readonly ImmutableArray<string> Ids;
        public readonly string? NameRegex;
        public readonly string? OutputFile;
        /// <summary>
        /// It is a nested type which documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.LookupSubnetsSubnetsResult> Subnets;
        /// <summary>
        /// A tag assigned to Subnet.
        /// </summary>
        public readonly string? Tag;
        /// <summary>
        /// Total number of Subnet resources that satisfy the condition.
        /// </summary>
        public readonly int TotalCount;
        public readonly string? VpcId;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private LookupSubnetsResult(
            ImmutableArray<string> ids,
            string? nameRegex,
            string? outputFile,
            ImmutableArray<Outputs.LookupSubnetsSubnetsResult> subnets,
            string? tag,
            int totalCount,
            string? vpcId,
            string id)
        {
            Ids = ids;
            NameRegex = nameRegex;
            OutputFile = outputFile;
            Subnets = subnets;
            Tag = tag;
            TotalCount = totalCount;
            VpcId = vpcId;
            Id = id;
        }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class LookupSubnetsSubnetsResult
    {
        /// <summary>
        /// The cidr block of the desired Subnet.
        /// </summary>
        public readonly string CidrBlock;
        /// <summary>
        /// The time of creation of Subnet, formatted in RFC3339 time string.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The ID of Subnet.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of Subnet.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The remark of the Subnet.
        /// </summary>
        public readonly string Remark;
        /// <summary>
        /// A tag assigned to Subnet.
        /// </summary>
        public readonly string Tag;

        [OutputConstructor]
        private LookupSubnetsSubnetsResult(
            string cidrBlock,
            string createTime,
            string id,
            string name,
            string remark,
            string tag)
        {
            CidrBlock = cidrBlock;
            CreateTime = createTime;
            Id = id;
            Name = name;
            Remark = remark;
            Tag = tag;
        }
    }
    }
}
