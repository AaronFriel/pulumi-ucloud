// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ucloud.vpc
{
    public static partial class Invokes
    {
        /// <summary>
        /// This data source providers a list of Nat Gateway resources according to their ID and name.
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-ucloud/blob/master/website/docs/d/nat_gateways.html.markdown.
        /// </summary>
        public static Task<LookupNatGatewaysResult> LookupNatGateways(LookupNatGatewaysArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<LookupNatGatewaysResult>("ucloud:vpc/lookupNatGateways:lookupNatGateways", args ?? InvokeArgs.Empty, options.WithVersion());
    }

    public sealed class LookupNatGatewaysArgs : Pulumi.InvokeArgs
    {
        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of Nat Gateway IDs, all the Nat Gateways belongs to the defined region will be retrieved if this argument is "".
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string to filter resulting Nat Gateways by name.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        [Input("outputFile")]
        public string? OutputFile { get; set; }

        public LookupNatGatewaysArgs()
        {
        }
    }

    [OutputType]
    public sealed class LookupNatGatewaysResult
    {
        public readonly ImmutableArray<string> Ids;
        public readonly string? NameRegex;
        /// <summary>
        /// It is a nested type. Nat Gateways documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.LookupNatGatewaysNatGatewaysResult> NatGateways;
        public readonly string? OutputFile;
        /// <summary>
        /// Total number of Nat Gateways that satisfy the condition.
        /// </summary>
        public readonly int TotalCount;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private LookupNatGatewaysResult(
            ImmutableArray<string> ids,
            string? nameRegex,
            ImmutableArray<Outputs.LookupNatGatewaysNatGatewaysResult> natGateways,
            string? outputFile,
            int totalCount,
            string id)
        {
            Ids = ids;
            NameRegex = nameRegex;
            NatGateways = natGateways;
            OutputFile = outputFile;
            TotalCount = totalCount;
            Id = id;
        }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class LookupNatGatewaysNatGatewaysIpSetsResult
    {
        /// <summary>
        /// Type of Elastic IP routes.
        /// </summary>
        public readonly string InternetType;
        /// <summary>
        /// Elastic IP address.
        /// </summary>
        public readonly string Ip;

        [OutputConstructor]
        private LookupNatGatewaysNatGatewaysIpSetsResult(
            string internetType,
            string ip)
        {
            InternetType = internetType;
            Ip = ip;
        }
    }

    [OutputType]
    public sealed class LookupNatGatewaysNatGatewaysResult
    {
        /// <summary>
        /// The time of creation for Nat Gateway, formatted in RFC3339 time string.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The ID of Nat Gateway.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// It is a nested type which documented below.
        /// </summary>
        public readonly ImmutableArray<LookupNatGatewaysNatGatewaysIpSetsResult> IpSets;
        /// <summary>
        /// The name of the Nat Gateway.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The remarks of Nat Gateway.
        /// </summary>
        public readonly string Remark;
        public readonly string SecurityGroup;
        /// <summary>
        /// The list of subnet ID under the VPC.
        /// * `security_group` -The ID of the associated security group.
        /// </summary>
        public readonly ImmutableArray<string> SubnetIds;
        /// <summary>
        /// A tag assigned to the Nat Gateway.
        /// </summary>
        public readonly string Tag;
        /// <summary>
        /// The ID of VPC linked to the Nat Gateway.
        /// </summary>
        public readonly string VpcId;

        [OutputConstructor]
        private LookupNatGatewaysNatGatewaysResult(
            string createTime,
            string id,
            ImmutableArray<LookupNatGatewaysNatGatewaysIpSetsResult> ipSets,
            string name,
            string remark,
            string securityGroup,
            ImmutableArray<string> subnetIds,
            string tag,
            string vpcId)
        {
            CreateTime = createTime;
            Id = id;
            IpSets = ipSets;
            Name = name;
            Remark = remark;
            SecurityGroup = securityGroup;
            SubnetIds = subnetIds;
            Tag = tag;
            VpcId = vpcId;
        }
    }
    }
}
