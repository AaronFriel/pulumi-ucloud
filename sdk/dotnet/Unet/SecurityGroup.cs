// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ucloud.Unet
{
    /// <summary>
    /// Provides a Security Group resource.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Ucloud = Pulumi.Ucloud;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var example = new Ucloud.Unet.SecurityGroup("example", new Ucloud.Unet.SecurityGroupArgs
    ///         {
    ///             Rules = 
    ///             {
    ///                 new Ucloud.Unet.Inputs.SecurityGroupRuleArgs
    ///                 {
    ///                     CidrBlock = "192.168.0.0/16",
    ///                     Policy = "accept",
    ///                     PortRange = "80",
    ///                     Protocol = "tcp",
    ///                 },
    ///                 new Ucloud.Unet.Inputs.SecurityGroupRuleArgs
    ///                 {
    ///                     CidrBlock = "192.168.0.0/16",
    ///                     Policy = "accept",
    ///                     PortRange = "443",
    ///                     Protocol = "tcp",
    ///                 },
    ///             },
    ///             Tag = "tf-example",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// Security Group can be imported using the `id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import ucloud:unet/securityGroup:SecurityGroup example firewall-abc123456
    /// ```
    /// </summary>
    [UcloudResourceType("ucloud:unet/securityGroup:SecurityGroup")]
    public partial class SecurityGroup : Pulumi.CustomResource
    {
        /// <summary>
        /// The time of creation of security group, formatted in RFC3339 time string.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The remarks of the security group. (Default: `""`).
        /// </summary>
        [Output("remark")]
        public Output<string> Remark { get; private set; } = null!;

        /// <summary>
        /// A list of security group rules. Can be specified multiple times for each rules. See rules below for details on attributes.
        /// </summary>
        [Output("rules")]
        public Output<ImmutableArray<Outputs.SecurityGroupRule>> Rules { get; private set; } = null!;

        /// <summary>
        /// A tag assigned to security group, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
        /// </summary>
        [Output("tag")]
        public Output<string?> Tag { get; private set; } = null!;


        /// <summary>
        /// Create a SecurityGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SecurityGroup(string name, SecurityGroupArgs args, CustomResourceOptions? options = null)
            : base("ucloud:unet/securityGroup:SecurityGroup", name, args ?? new SecurityGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SecurityGroup(string name, Input<string> id, SecurityGroupState? state = null, CustomResourceOptions? options = null)
            : base("ucloud:unet/securityGroup:SecurityGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SecurityGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SecurityGroup Get(string name, Input<string> id, SecurityGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new SecurityGroup(name, id, state, options);
        }
    }

    public sealed class SecurityGroupArgs : Pulumi.ResourceArgs
    {
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The remarks of the security group. (Default: `""`).
        /// </summary>
        [Input("remark")]
        public Input<string>? Remark { get; set; }

        [Input("rules", required: true)]
        private InputList<Inputs.SecurityGroupRuleArgs>? _rules;

        /// <summary>
        /// A list of security group rules. Can be specified multiple times for each rules. See rules below for details on attributes.
        /// </summary>
        public InputList<Inputs.SecurityGroupRuleArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.SecurityGroupRuleArgs>());
            set => _rules = value;
        }

        /// <summary>
        /// A tag assigned to security group, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
        /// </summary>
        [Input("tag")]
        public Input<string>? Tag { get; set; }

        public SecurityGroupArgs()
        {
        }
    }

    public sealed class SecurityGroupState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The time of creation of security group, formatted in RFC3339 time string.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The remarks of the security group. (Default: `""`).
        /// </summary>
        [Input("remark")]
        public Input<string>? Remark { get; set; }

        [Input("rules")]
        private InputList<Inputs.SecurityGroupRuleGetArgs>? _rules;

        /// <summary>
        /// A list of security group rules. Can be specified multiple times for each rules. See rules below for details on attributes.
        /// </summary>
        public InputList<Inputs.SecurityGroupRuleGetArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.SecurityGroupRuleGetArgs>());
            set => _rules = value;
        }

        /// <summary>
        /// A tag assigned to security group, which contains at most 63 characters and only support Chinese, English, numbers, '-', '_', and '.'. If it is not filled in or a empty string is filled in, then default tag will be assigned. (Default: `Default`).
        /// </summary>
        [Input("tag")]
        public Input<string>? Tag { get; set; }

        public SecurityGroupState()
        {
        }
    }
}
