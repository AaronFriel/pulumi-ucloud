// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ucloud.Unet.Outputs
{

    [OutputType]
    public sealed class GetEIPEipResult
    {
        /// <summary>
        /// Maximum bandwidth to the elastic public network, measured in Mbps.
        /// </summary>
        public readonly int Bandwidth;
        /// <summary>
        /// The charge mode of Elastic IP. Possible values are: `traffic` as pay by traffic, `bandwidth` as pay by bandwidth.
        /// </summary>
        public readonly string ChargeMode;
        /// <summary>
        /// The charge type of Elastic IP. Possible values are: `year` as pay by year, `month` as pay by month, `dynamic` as pay by hour.
        /// </summary>
        public readonly string ChargeType;
        /// <summary>
        /// The creation time of Elastic IP, formatted in RFC3339 time string.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The expiration time for Elastic IP, formatted in RFC3339 time string.
        /// </summary>
        public readonly string ExpireTime;
        /// <summary>
        /// It is a nested type which documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetEIPEipIpSetResult> IpSets;
        /// <summary>
        /// The name of Elastic IP.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The remarks of Elastic IP.
        /// </summary>
        public readonly string Remark;
        /// <summary>
        /// Elastic IP status. Possible values are: `used` as in use, `free` as available and `freeze` as associating.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// A tag assigned to Elastic IP.
        /// </summary>
        public readonly string Tag;

        [OutputConstructor]
        private GetEIPEipResult(
            int bandwidth,

            string chargeMode,

            string chargeType,

            string createTime,

            string expireTime,

            ImmutableArray<Outputs.GetEIPEipIpSetResult> ipSets,

            string name,

            string remark,

            string status,

            string tag)
        {
            Bandwidth = bandwidth;
            ChargeMode = chargeMode;
            ChargeType = chargeType;
            CreateTime = createTime;
            ExpireTime = expireTime;
            IpSets = ipSets;
            Name = name;
            Remark = remark;
            Status = status;
            Tag = tag;
        }
    }
}
