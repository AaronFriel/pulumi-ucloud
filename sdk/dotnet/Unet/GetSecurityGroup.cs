// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ucloud.Unet
{
    public static class GetSecurityGroup
    {
        /// <summary>
        /// This data source provides a list of Security Group resources according to their Security Group ID, name and resource id.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Ucloud = Pulumi.Ucloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(Ucloud.Unet.GetSecurityGroup.InvokeAsync());
        ///         this.First = example.Apply(example =&gt; example.SecurityGroups[0].Id);
        ///     }
        /// 
        ///     [Output("first")]
        ///     public Output&lt;string&gt; First { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetSecurityGroupResult> InvokeAsync(GetSecurityGroupArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSecurityGroupResult>("ucloud:unet/getSecurityGroup:getSecurityGroup", args ?? new GetSecurityGroupArgs(), options.WithVersion());
    }


    public sealed class GetSecurityGroupArgs : Pulumi.InvokeArgs
    {
        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of Security Group IDs, all the Security Group resources belong to this region will be retrieved if the ID is `[]`.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string to filter resulting Security Group resources by name.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The type of Security Group. Possible values are: `recommend_web` as the default Web security group that UCloud recommend to users, default opened port include 80, 443, 22, 3389, `recommend_non_web` as the default non Web security group that UCloud recommend to users, default opened port include 22, 3389, `user_defined` as the security groups defined by users. You may refer to [security group](https://docs.ucloud.cn/network/firewall/firewall.html).
        /// </summary>
        [Input("type")]
        public string? Type { get; set; }

        public GetSecurityGroupArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetSecurityGroupResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly string? NameRegex;
        public readonly string? OutputFile;
        /// <summary>
        /// It is a nested type which documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSecurityGroupSecurityGroupResult> SecurityGroups;
        /// <summary>
        /// Total number of Security Group resources that satisfy the condition.
        /// </summary>
        public readonly int TotalCount;
        /// <summary>
        /// The type of Security Group.
        /// </summary>
        public readonly string? Type;

        [OutputConstructor]
        private GetSecurityGroupResult(
            string id,

            ImmutableArray<string> ids,

            string? nameRegex,

            string? outputFile,

            ImmutableArray<Outputs.GetSecurityGroupSecurityGroupResult> securityGroups,

            int totalCount,

            string? type)
        {
            Id = id;
            Ids = ids;
            NameRegex = nameRegex;
            OutputFile = outputFile;
            SecurityGroups = securityGroups;
            TotalCount = totalCount;
            Type = type;
        }
    }
}
